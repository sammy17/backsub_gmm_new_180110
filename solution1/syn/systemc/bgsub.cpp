// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "bgsub.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int bgsub::C_S_AXI_DATA_WIDTH = "100000";
const int bgsub::C_S_AXI_WSTRB_WIDTH = "100";
const int bgsub::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic bgsub::ap_const_logic_1 = sc_dt::Log_1;
const int bgsub::C_M_AXI_ID_WIDTH = "1";
const int bgsub::C_M_AXI_ADDR_WIDTH = "100000";
const int bgsub::C_M_AXI_DATA_WIDTH = "100000";
const int bgsub::C_M_AXI_WSTRB_WIDTH = "100";
const int bgsub::C_M_AXI_AWUSER_WIDTH = "1";
const int bgsub::C_M_AXI_ARUSER_WIDTH = "1";
const int bgsub::C_M_AXI_WUSER_WIDTH = "1";
const int bgsub::C_M_AXI_RUSER_WIDTH = "1";
const int bgsub::C_M_AXI_BUSER_WIDTH = "1";
const int bgsub::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bgsub::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bgsub::C_M_AXI_GMEM_CACHE_VALUE = "11";
const int bgsub::C_M_AXI_GMEM_OFFSET_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bgsub::C_M_AXI_GMEM_OFFSET_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bgsub::C_M_AXI_GMEM_OFFSET_CACHE_VALUE = "11";
const sc_logic bgsub::ap_const_logic_0 = sc_dt::Log_0;
const bool bgsub::ap_true = true;

bgsub::bgsub(sc_module_name name) : sc_module(name), mVcdFile(0) {
    bgsub_AXILiteS_s_axi_U = new bgsub_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("bgsub_AXILiteS_s_axi_U");
    bgsub_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    bgsub_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    bgsub_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    bgsub_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    bgsub_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    bgsub_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    bgsub_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    bgsub_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    bgsub_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    bgsub_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    bgsub_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    bgsub_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    bgsub_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    bgsub_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    bgsub_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    bgsub_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    bgsub_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    bgsub_AXILiteS_s_axi_U->ACLK(ap_clk);
    bgsub_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    bgsub_AXILiteS_s_axi_U->ACLK_EN(bgsub_AXILiteS_s_axi_U_ap_dummy_ce);
    bgsub_AXILiteS_s_axi_U->frame_in(frame_in);
    bgsub_AXILiteS_s_axi_U->frame_out(frame_out);
    bgsub_AXILiteS_s_axi_U->bgmodel(bgmodel);
    bgsub_CRTL_BUS_s_axi_U = new bgsub_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>("bgsub_CRTL_BUS_s_axi_U");
    bgsub_CRTL_BUS_s_axi_U->AWVALID(s_axi_CRTL_BUS_AWVALID);
    bgsub_CRTL_BUS_s_axi_U->AWREADY(s_axi_CRTL_BUS_AWREADY);
    bgsub_CRTL_BUS_s_axi_U->AWADDR(s_axi_CRTL_BUS_AWADDR);
    bgsub_CRTL_BUS_s_axi_U->WVALID(s_axi_CRTL_BUS_WVALID);
    bgsub_CRTL_BUS_s_axi_U->WREADY(s_axi_CRTL_BUS_WREADY);
    bgsub_CRTL_BUS_s_axi_U->WDATA(s_axi_CRTL_BUS_WDATA);
    bgsub_CRTL_BUS_s_axi_U->WSTRB(s_axi_CRTL_BUS_WSTRB);
    bgsub_CRTL_BUS_s_axi_U->ARVALID(s_axi_CRTL_BUS_ARVALID);
    bgsub_CRTL_BUS_s_axi_U->ARREADY(s_axi_CRTL_BUS_ARREADY);
    bgsub_CRTL_BUS_s_axi_U->ARADDR(s_axi_CRTL_BUS_ARADDR);
    bgsub_CRTL_BUS_s_axi_U->RVALID(s_axi_CRTL_BUS_RVALID);
    bgsub_CRTL_BUS_s_axi_U->RREADY(s_axi_CRTL_BUS_RREADY);
    bgsub_CRTL_BUS_s_axi_U->RDATA(s_axi_CRTL_BUS_RDATA);
    bgsub_CRTL_BUS_s_axi_U->RRESP(s_axi_CRTL_BUS_RRESP);
    bgsub_CRTL_BUS_s_axi_U->BVALID(s_axi_CRTL_BUS_BVALID);
    bgsub_CRTL_BUS_s_axi_U->BREADY(s_axi_CRTL_BUS_BREADY);
    bgsub_CRTL_BUS_s_axi_U->BRESP(s_axi_CRTL_BUS_BRESP);
    bgsub_CRTL_BUS_s_axi_U->ACLK(ap_clk);
    bgsub_CRTL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    bgsub_CRTL_BUS_s_axi_U->ACLK_EN(bgsub_CRTL_BUS_s_axi_U_ap_dummy_ce);
    bgsub_CRTL_BUS_s_axi_U->ap_start(ap_start);
    bgsub_CRTL_BUS_s_axi_U->interrupt(interrupt);
    bgsub_CRTL_BUS_s_axi_U->ap_ready(ap_ready);
    bgsub_CRTL_BUS_s_axi_U->ap_done(ap_done);
    bgsub_CRTL_BUS_s_axi_U->ap_idle(ap_idle);
    bgsub_CRTL_BUS_s_axi_U->init(init);
    bgsub_gmem_m_axi_U = new bgsub_gmem_m_axi<8,32,5,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("bgsub_gmem_m_axi_U");
    bgsub_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    bgsub_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    bgsub_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    bgsub_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    bgsub_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    bgsub_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    bgsub_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    bgsub_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    bgsub_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    bgsub_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    bgsub_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    bgsub_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    bgsub_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    bgsub_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    bgsub_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    bgsub_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    bgsub_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    bgsub_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    bgsub_gmem_m_axi_U->WID(m_axi_gmem_WID);
    bgsub_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    bgsub_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    bgsub_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    bgsub_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    bgsub_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    bgsub_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    bgsub_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    bgsub_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    bgsub_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    bgsub_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    bgsub_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    bgsub_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    bgsub_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    bgsub_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    bgsub_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    bgsub_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    bgsub_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    bgsub_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    bgsub_gmem_m_axi_U->RID(m_axi_gmem_RID);
    bgsub_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    bgsub_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    bgsub_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    bgsub_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    bgsub_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    bgsub_gmem_m_axi_U->BID(m_axi_gmem_BID);
    bgsub_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    bgsub_gmem_m_axi_U->ACLK(ap_clk);
    bgsub_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    bgsub_gmem_m_axi_U->ACLK_EN(bgsub_gmem_m_axi_U_ap_dummy_ce);
    bgsub_gmem_m_axi_U->I_ARVALID(gmem_ARVALID);
    bgsub_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    bgsub_gmem_m_axi_U->I_ARADDR(gmem_ARADDR);
    bgsub_gmem_m_axi_U->I_ARID(gmem_ARID);
    bgsub_gmem_m_axi_U->I_ARLEN(gmem_ARLEN);
    bgsub_gmem_m_axi_U->I_ARSIZE(gmem_ARSIZE);
    bgsub_gmem_m_axi_U->I_ARLOCK(gmem_ARLOCK);
    bgsub_gmem_m_axi_U->I_ARCACHE(gmem_ARCACHE);
    bgsub_gmem_m_axi_U->I_ARQOS(gmem_ARQOS);
    bgsub_gmem_m_axi_U->I_ARPROT(gmem_ARPROT);
    bgsub_gmem_m_axi_U->I_ARUSER(gmem_ARUSER);
    bgsub_gmem_m_axi_U->I_ARBURST(gmem_ARBURST);
    bgsub_gmem_m_axi_U->I_ARREGION(gmem_ARREGION);
    bgsub_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    bgsub_gmem_m_axi_U->I_RREADY(gmem_RREADY);
    bgsub_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    bgsub_gmem_m_axi_U->I_RID(gmem_RID);
    bgsub_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    bgsub_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    bgsub_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    bgsub_gmem_m_axi_U->I_AWVALID(gmem_AWVALID);
    bgsub_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    bgsub_gmem_m_axi_U->I_AWADDR(gmem_AWADDR);
    bgsub_gmem_m_axi_U->I_AWID(gmem_AWID);
    bgsub_gmem_m_axi_U->I_AWLEN(gmem_AWLEN);
    bgsub_gmem_m_axi_U->I_AWSIZE(gmem_AWSIZE);
    bgsub_gmem_m_axi_U->I_AWLOCK(gmem_AWLOCK);
    bgsub_gmem_m_axi_U->I_AWCACHE(gmem_AWCACHE);
    bgsub_gmem_m_axi_U->I_AWQOS(gmem_AWQOS);
    bgsub_gmem_m_axi_U->I_AWPROT(gmem_AWPROT);
    bgsub_gmem_m_axi_U->I_AWUSER(gmem_AWUSER);
    bgsub_gmem_m_axi_U->I_AWBURST(gmem_AWBURST);
    bgsub_gmem_m_axi_U->I_AWREGION(gmem_AWREGION);
    bgsub_gmem_m_axi_U->I_WVALID(gmem_WVALID);
    bgsub_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    bgsub_gmem_m_axi_U->I_WDATA(gmem_WDATA);
    bgsub_gmem_m_axi_U->I_WID(gmem_WID);
    bgsub_gmem_m_axi_U->I_WUSER(gmem_WUSER);
    bgsub_gmem_m_axi_U->I_WLAST(gmem_WLAST);
    bgsub_gmem_m_axi_U->I_WSTRB(gmem_WSTRB);
    bgsub_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    bgsub_gmem_m_axi_U->I_BREADY(gmem_BREADY);
    bgsub_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    bgsub_gmem_m_axi_U->I_BID(gmem_BID);
    bgsub_gmem_m_axi_U->I_BUSER(gmem_BUSER);
    bgsub_gmem_offset_m_axi_U = new bgsub_gmem_offset_m_axi<32,32,5,C_M_AXI_GMEM_OFFSET_ID_WIDTH,C_M_AXI_GMEM_OFFSET_ADDR_WIDTH,C_M_AXI_GMEM_OFFSET_DATA_WIDTH,C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH,C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH,C_M_AXI_GMEM_OFFSET_WUSER_WIDTH,C_M_AXI_GMEM_OFFSET_RUSER_WIDTH,C_M_AXI_GMEM_OFFSET_BUSER_WIDTH,C_M_AXI_GMEM_OFFSET_USER_VALUE,C_M_AXI_GMEM_OFFSET_PROT_VALUE,C_M_AXI_GMEM_OFFSET_CACHE_VALUE>("bgsub_gmem_offset_m_axi_U");
    bgsub_gmem_offset_m_axi_U->AWVALID(m_axi_gmem_offset_AWVALID);
    bgsub_gmem_offset_m_axi_U->AWREADY(m_axi_gmem_offset_AWREADY);
    bgsub_gmem_offset_m_axi_U->AWADDR(m_axi_gmem_offset_AWADDR);
    bgsub_gmem_offset_m_axi_U->AWID(m_axi_gmem_offset_AWID);
    bgsub_gmem_offset_m_axi_U->AWLEN(m_axi_gmem_offset_AWLEN);
    bgsub_gmem_offset_m_axi_U->AWSIZE(m_axi_gmem_offset_AWSIZE);
    bgsub_gmem_offset_m_axi_U->AWBURST(m_axi_gmem_offset_AWBURST);
    bgsub_gmem_offset_m_axi_U->AWLOCK(m_axi_gmem_offset_AWLOCK);
    bgsub_gmem_offset_m_axi_U->AWCACHE(m_axi_gmem_offset_AWCACHE);
    bgsub_gmem_offset_m_axi_U->AWPROT(m_axi_gmem_offset_AWPROT);
    bgsub_gmem_offset_m_axi_U->AWQOS(m_axi_gmem_offset_AWQOS);
    bgsub_gmem_offset_m_axi_U->AWREGION(m_axi_gmem_offset_AWREGION);
    bgsub_gmem_offset_m_axi_U->AWUSER(m_axi_gmem_offset_AWUSER);
    bgsub_gmem_offset_m_axi_U->WVALID(m_axi_gmem_offset_WVALID);
    bgsub_gmem_offset_m_axi_U->WREADY(m_axi_gmem_offset_WREADY);
    bgsub_gmem_offset_m_axi_U->WDATA(m_axi_gmem_offset_WDATA);
    bgsub_gmem_offset_m_axi_U->WSTRB(m_axi_gmem_offset_WSTRB);
    bgsub_gmem_offset_m_axi_U->WLAST(m_axi_gmem_offset_WLAST);
    bgsub_gmem_offset_m_axi_U->WID(m_axi_gmem_offset_WID);
    bgsub_gmem_offset_m_axi_U->WUSER(m_axi_gmem_offset_WUSER);
    bgsub_gmem_offset_m_axi_U->ARVALID(m_axi_gmem_offset_ARVALID);
    bgsub_gmem_offset_m_axi_U->ARREADY(m_axi_gmem_offset_ARREADY);
    bgsub_gmem_offset_m_axi_U->ARADDR(m_axi_gmem_offset_ARADDR);
    bgsub_gmem_offset_m_axi_U->ARID(m_axi_gmem_offset_ARID);
    bgsub_gmem_offset_m_axi_U->ARLEN(m_axi_gmem_offset_ARLEN);
    bgsub_gmem_offset_m_axi_U->ARSIZE(m_axi_gmem_offset_ARSIZE);
    bgsub_gmem_offset_m_axi_U->ARBURST(m_axi_gmem_offset_ARBURST);
    bgsub_gmem_offset_m_axi_U->ARLOCK(m_axi_gmem_offset_ARLOCK);
    bgsub_gmem_offset_m_axi_U->ARCACHE(m_axi_gmem_offset_ARCACHE);
    bgsub_gmem_offset_m_axi_U->ARPROT(m_axi_gmem_offset_ARPROT);
    bgsub_gmem_offset_m_axi_U->ARQOS(m_axi_gmem_offset_ARQOS);
    bgsub_gmem_offset_m_axi_U->ARREGION(m_axi_gmem_offset_ARREGION);
    bgsub_gmem_offset_m_axi_U->ARUSER(m_axi_gmem_offset_ARUSER);
    bgsub_gmem_offset_m_axi_U->RVALID(m_axi_gmem_offset_RVALID);
    bgsub_gmem_offset_m_axi_U->RREADY(m_axi_gmem_offset_RREADY);
    bgsub_gmem_offset_m_axi_U->RDATA(m_axi_gmem_offset_RDATA);
    bgsub_gmem_offset_m_axi_U->RLAST(m_axi_gmem_offset_RLAST);
    bgsub_gmem_offset_m_axi_U->RID(m_axi_gmem_offset_RID);
    bgsub_gmem_offset_m_axi_U->RUSER(m_axi_gmem_offset_RUSER);
    bgsub_gmem_offset_m_axi_U->RRESP(m_axi_gmem_offset_RRESP);
    bgsub_gmem_offset_m_axi_U->BVALID(m_axi_gmem_offset_BVALID);
    bgsub_gmem_offset_m_axi_U->BREADY(m_axi_gmem_offset_BREADY);
    bgsub_gmem_offset_m_axi_U->BRESP(m_axi_gmem_offset_BRESP);
    bgsub_gmem_offset_m_axi_U->BID(m_axi_gmem_offset_BID);
    bgsub_gmem_offset_m_axi_U->BUSER(m_axi_gmem_offset_BUSER);
    bgsub_gmem_offset_m_axi_U->ACLK(ap_clk);
    bgsub_gmem_offset_m_axi_U->ARESET(ap_rst_n_inv);
    bgsub_gmem_offset_m_axi_U->ACLK_EN(bgsub_gmem_offset_m_axi_U_ap_dummy_ce);
    bgsub_gmem_offset_m_axi_U->I_ARVALID(gmem_offset_ARVALID);
    bgsub_gmem_offset_m_axi_U->I_ARREADY(gmem_offset_ARREADY);
    bgsub_gmem_offset_m_axi_U->I_ARADDR(gmem_offset_ARADDR);
    bgsub_gmem_offset_m_axi_U->I_ARID(gmem_offset_ARID);
    bgsub_gmem_offset_m_axi_U->I_ARLEN(gmem_offset_ARLEN);
    bgsub_gmem_offset_m_axi_U->I_ARSIZE(gmem_offset_ARSIZE);
    bgsub_gmem_offset_m_axi_U->I_ARLOCK(gmem_offset_ARLOCK);
    bgsub_gmem_offset_m_axi_U->I_ARCACHE(gmem_offset_ARCACHE);
    bgsub_gmem_offset_m_axi_U->I_ARQOS(gmem_offset_ARQOS);
    bgsub_gmem_offset_m_axi_U->I_ARPROT(gmem_offset_ARPROT);
    bgsub_gmem_offset_m_axi_U->I_ARUSER(gmem_offset_ARUSER);
    bgsub_gmem_offset_m_axi_U->I_ARBURST(gmem_offset_ARBURST);
    bgsub_gmem_offset_m_axi_U->I_ARREGION(gmem_offset_ARREGION);
    bgsub_gmem_offset_m_axi_U->I_RVALID(gmem_offset_RVALID);
    bgsub_gmem_offset_m_axi_U->I_RREADY(gmem_offset_RREADY);
    bgsub_gmem_offset_m_axi_U->I_RDATA(gmem_offset_RDATA);
    bgsub_gmem_offset_m_axi_U->I_RID(gmem_offset_RID);
    bgsub_gmem_offset_m_axi_U->I_RUSER(gmem_offset_RUSER);
    bgsub_gmem_offset_m_axi_U->I_RRESP(gmem_offset_RRESP);
    bgsub_gmem_offset_m_axi_U->I_RLAST(gmem_offset_RLAST);
    bgsub_gmem_offset_m_axi_U->I_AWVALID(gmem_offset_AWVALID);
    bgsub_gmem_offset_m_axi_U->I_AWREADY(gmem_offset_AWREADY);
    bgsub_gmem_offset_m_axi_U->I_AWADDR(gmem_offset_AWADDR);
    bgsub_gmem_offset_m_axi_U->I_AWID(gmem_offset_AWID);
    bgsub_gmem_offset_m_axi_U->I_AWLEN(gmem_offset_AWLEN);
    bgsub_gmem_offset_m_axi_U->I_AWSIZE(gmem_offset_AWSIZE);
    bgsub_gmem_offset_m_axi_U->I_AWLOCK(gmem_offset_AWLOCK);
    bgsub_gmem_offset_m_axi_U->I_AWCACHE(gmem_offset_AWCACHE);
    bgsub_gmem_offset_m_axi_U->I_AWQOS(gmem_offset_AWQOS);
    bgsub_gmem_offset_m_axi_U->I_AWPROT(gmem_offset_AWPROT);
    bgsub_gmem_offset_m_axi_U->I_AWUSER(gmem_offset_AWUSER);
    bgsub_gmem_offset_m_axi_U->I_AWBURST(gmem_offset_AWBURST);
    bgsub_gmem_offset_m_axi_U->I_AWREGION(gmem_offset_AWREGION);
    bgsub_gmem_offset_m_axi_U->I_WVALID(gmem_offset_WVALID);
    bgsub_gmem_offset_m_axi_U->I_WREADY(gmem_offset_WREADY);
    bgsub_gmem_offset_m_axi_U->I_WDATA(gmem_offset_WDATA);
    bgsub_gmem_offset_m_axi_U->I_WID(gmem_offset_WID);
    bgsub_gmem_offset_m_axi_U->I_WUSER(gmem_offset_WUSER);
    bgsub_gmem_offset_m_axi_U->I_WLAST(gmem_offset_WLAST);
    bgsub_gmem_offset_m_axi_U->I_WSTRB(gmem_offset_WSTRB);
    bgsub_gmem_offset_m_axi_U->I_BVALID(gmem_offset_BVALID);
    bgsub_gmem_offset_m_axi_U->I_BREADY(gmem_offset_BREADY);
    bgsub_gmem_offset_m_axi_U->I_BRESP(gmem_offset_BRESP);
    bgsub_gmem_offset_m_axi_U->I_BID(gmem_offset_BID);
    bgsub_gmem_offset_m_axi_U->I_BUSER(gmem_offset_BUSER);
    bgsub_Block_proc_U0 = new bgsub_Block_proc("bgsub_Block_proc_U0");
    bgsub_Block_proc_U0->ap_clk(ap_clk);
    bgsub_Block_proc_U0->ap_rst(ap_rst_n_inv);
    bgsub_Block_proc_U0->ap_start(bgsub_Block_proc_U0_ap_start);
    bgsub_Block_proc_U0->ap_done(bgsub_Block_proc_U0_ap_done);
    bgsub_Block_proc_U0->ap_continue(bgsub_Block_proc_U0_ap_continue);
    bgsub_Block_proc_U0->ap_idle(bgsub_Block_proc_U0_ap_idle);
    bgsub_Block_proc_U0->ap_ready(bgsub_Block_proc_U0_ap_ready);
    bgsub_Block_proc_U0->init(bgsub_Block_proc_U0_init);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWVALID(bgsub_Block_proc_U0_m_axi_bgmodel_AWVALID);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWREADY(bgsub_Block_proc_U0_m_axi_bgmodel_AWREADY);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWADDR(bgsub_Block_proc_U0_m_axi_bgmodel_AWADDR);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWID(bgsub_Block_proc_U0_m_axi_bgmodel_AWID);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWLEN(bgsub_Block_proc_U0_m_axi_bgmodel_AWLEN);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWSIZE(bgsub_Block_proc_U0_m_axi_bgmodel_AWSIZE);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWBURST(bgsub_Block_proc_U0_m_axi_bgmodel_AWBURST);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWLOCK(bgsub_Block_proc_U0_m_axi_bgmodel_AWLOCK);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWCACHE(bgsub_Block_proc_U0_m_axi_bgmodel_AWCACHE);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWPROT(bgsub_Block_proc_U0_m_axi_bgmodel_AWPROT);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWQOS(bgsub_Block_proc_U0_m_axi_bgmodel_AWQOS);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWREGION(bgsub_Block_proc_U0_m_axi_bgmodel_AWREGION);
    bgsub_Block_proc_U0->m_axi_bgmodel_AWUSER(bgsub_Block_proc_U0_m_axi_bgmodel_AWUSER);
    bgsub_Block_proc_U0->m_axi_bgmodel_WVALID(bgsub_Block_proc_U0_m_axi_bgmodel_WVALID);
    bgsub_Block_proc_U0->m_axi_bgmodel_WREADY(bgsub_Block_proc_U0_m_axi_bgmodel_WREADY);
    bgsub_Block_proc_U0->m_axi_bgmodel_WDATA(bgsub_Block_proc_U0_m_axi_bgmodel_WDATA);
    bgsub_Block_proc_U0->m_axi_bgmodel_WSTRB(bgsub_Block_proc_U0_m_axi_bgmodel_WSTRB);
    bgsub_Block_proc_U0->m_axi_bgmodel_WLAST(bgsub_Block_proc_U0_m_axi_bgmodel_WLAST);
    bgsub_Block_proc_U0->m_axi_bgmodel_WID(bgsub_Block_proc_U0_m_axi_bgmodel_WID);
    bgsub_Block_proc_U0->m_axi_bgmodel_WUSER(bgsub_Block_proc_U0_m_axi_bgmodel_WUSER);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARVALID(bgsub_Block_proc_U0_m_axi_bgmodel_ARVALID);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARREADY(bgsub_Block_proc_U0_m_axi_bgmodel_ARREADY);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARADDR(bgsub_Block_proc_U0_m_axi_bgmodel_ARADDR);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARID(bgsub_Block_proc_U0_m_axi_bgmodel_ARID);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARLEN(bgsub_Block_proc_U0_m_axi_bgmodel_ARLEN);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARSIZE(bgsub_Block_proc_U0_m_axi_bgmodel_ARSIZE);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARBURST(bgsub_Block_proc_U0_m_axi_bgmodel_ARBURST);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARLOCK(bgsub_Block_proc_U0_m_axi_bgmodel_ARLOCK);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARCACHE(bgsub_Block_proc_U0_m_axi_bgmodel_ARCACHE);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARPROT(bgsub_Block_proc_U0_m_axi_bgmodel_ARPROT);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARQOS(bgsub_Block_proc_U0_m_axi_bgmodel_ARQOS);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARREGION(bgsub_Block_proc_U0_m_axi_bgmodel_ARREGION);
    bgsub_Block_proc_U0->m_axi_bgmodel_ARUSER(bgsub_Block_proc_U0_m_axi_bgmodel_ARUSER);
    bgsub_Block_proc_U0->m_axi_bgmodel_RVALID(bgsub_Block_proc_U0_m_axi_bgmodel_RVALID);
    bgsub_Block_proc_U0->m_axi_bgmodel_RREADY(bgsub_Block_proc_U0_m_axi_bgmodel_RREADY);
    bgsub_Block_proc_U0->m_axi_bgmodel_RDATA(bgsub_Block_proc_U0_m_axi_bgmodel_RDATA);
    bgsub_Block_proc_U0->m_axi_bgmodel_RLAST(bgsub_Block_proc_U0_m_axi_bgmodel_RLAST);
    bgsub_Block_proc_U0->m_axi_bgmodel_RID(bgsub_Block_proc_U0_m_axi_bgmodel_RID);
    bgsub_Block_proc_U0->m_axi_bgmodel_RUSER(bgsub_Block_proc_U0_m_axi_bgmodel_RUSER);
    bgsub_Block_proc_U0->m_axi_bgmodel_RRESP(bgsub_Block_proc_U0_m_axi_bgmodel_RRESP);
    bgsub_Block_proc_U0->m_axi_bgmodel_BVALID(bgsub_Block_proc_U0_m_axi_bgmodel_BVALID);
    bgsub_Block_proc_U0->m_axi_bgmodel_BREADY(bgsub_Block_proc_U0_m_axi_bgmodel_BREADY);
    bgsub_Block_proc_U0->m_axi_bgmodel_BRESP(bgsub_Block_proc_U0_m_axi_bgmodel_BRESP);
    bgsub_Block_proc_U0->m_axi_bgmodel_BID(bgsub_Block_proc_U0_m_axi_bgmodel_BID);
    bgsub_Block_proc_U0->m_axi_bgmodel_BUSER(bgsub_Block_proc_U0_m_axi_bgmodel_BUSER);
    bgsub_Block_proc_U0->bgmodel1(bgsub_Block_proc_U0_bgmodel1);
    bgsub_Block_proc_U0->m_axi_frame_out_AWVALID(bgsub_Block_proc_U0_m_axi_frame_out_AWVALID);
    bgsub_Block_proc_U0->m_axi_frame_out_AWREADY(bgsub_Block_proc_U0_m_axi_frame_out_AWREADY);
    bgsub_Block_proc_U0->m_axi_frame_out_AWADDR(bgsub_Block_proc_U0_m_axi_frame_out_AWADDR);
    bgsub_Block_proc_U0->m_axi_frame_out_AWID(bgsub_Block_proc_U0_m_axi_frame_out_AWID);
    bgsub_Block_proc_U0->m_axi_frame_out_AWLEN(bgsub_Block_proc_U0_m_axi_frame_out_AWLEN);
    bgsub_Block_proc_U0->m_axi_frame_out_AWSIZE(bgsub_Block_proc_U0_m_axi_frame_out_AWSIZE);
    bgsub_Block_proc_U0->m_axi_frame_out_AWBURST(bgsub_Block_proc_U0_m_axi_frame_out_AWBURST);
    bgsub_Block_proc_U0->m_axi_frame_out_AWLOCK(bgsub_Block_proc_U0_m_axi_frame_out_AWLOCK);
    bgsub_Block_proc_U0->m_axi_frame_out_AWCACHE(bgsub_Block_proc_U0_m_axi_frame_out_AWCACHE);
    bgsub_Block_proc_U0->m_axi_frame_out_AWPROT(bgsub_Block_proc_U0_m_axi_frame_out_AWPROT);
    bgsub_Block_proc_U0->m_axi_frame_out_AWQOS(bgsub_Block_proc_U0_m_axi_frame_out_AWQOS);
    bgsub_Block_proc_U0->m_axi_frame_out_AWREGION(bgsub_Block_proc_U0_m_axi_frame_out_AWREGION);
    bgsub_Block_proc_U0->m_axi_frame_out_AWUSER(bgsub_Block_proc_U0_m_axi_frame_out_AWUSER);
    bgsub_Block_proc_U0->m_axi_frame_out_WVALID(bgsub_Block_proc_U0_m_axi_frame_out_WVALID);
    bgsub_Block_proc_U0->m_axi_frame_out_WREADY(bgsub_Block_proc_U0_m_axi_frame_out_WREADY);
    bgsub_Block_proc_U0->m_axi_frame_out_WDATA(bgsub_Block_proc_U0_m_axi_frame_out_WDATA);
    bgsub_Block_proc_U0->m_axi_frame_out_WSTRB(bgsub_Block_proc_U0_m_axi_frame_out_WSTRB);
    bgsub_Block_proc_U0->m_axi_frame_out_WLAST(bgsub_Block_proc_U0_m_axi_frame_out_WLAST);
    bgsub_Block_proc_U0->m_axi_frame_out_WID(bgsub_Block_proc_U0_m_axi_frame_out_WID);
    bgsub_Block_proc_U0->m_axi_frame_out_WUSER(bgsub_Block_proc_U0_m_axi_frame_out_WUSER);
    bgsub_Block_proc_U0->m_axi_frame_out_ARVALID(bgsub_Block_proc_U0_m_axi_frame_out_ARVALID);
    bgsub_Block_proc_U0->m_axi_frame_out_ARREADY(bgsub_Block_proc_U0_m_axi_frame_out_ARREADY);
    bgsub_Block_proc_U0->m_axi_frame_out_ARADDR(bgsub_Block_proc_U0_m_axi_frame_out_ARADDR);
    bgsub_Block_proc_U0->m_axi_frame_out_ARID(bgsub_Block_proc_U0_m_axi_frame_out_ARID);
    bgsub_Block_proc_U0->m_axi_frame_out_ARLEN(bgsub_Block_proc_U0_m_axi_frame_out_ARLEN);
    bgsub_Block_proc_U0->m_axi_frame_out_ARSIZE(bgsub_Block_proc_U0_m_axi_frame_out_ARSIZE);
    bgsub_Block_proc_U0->m_axi_frame_out_ARBURST(bgsub_Block_proc_U0_m_axi_frame_out_ARBURST);
    bgsub_Block_proc_U0->m_axi_frame_out_ARLOCK(bgsub_Block_proc_U0_m_axi_frame_out_ARLOCK);
    bgsub_Block_proc_U0->m_axi_frame_out_ARCACHE(bgsub_Block_proc_U0_m_axi_frame_out_ARCACHE);
    bgsub_Block_proc_U0->m_axi_frame_out_ARPROT(bgsub_Block_proc_U0_m_axi_frame_out_ARPROT);
    bgsub_Block_proc_U0->m_axi_frame_out_ARQOS(bgsub_Block_proc_U0_m_axi_frame_out_ARQOS);
    bgsub_Block_proc_U0->m_axi_frame_out_ARREGION(bgsub_Block_proc_U0_m_axi_frame_out_ARREGION);
    bgsub_Block_proc_U0->m_axi_frame_out_ARUSER(bgsub_Block_proc_U0_m_axi_frame_out_ARUSER);
    bgsub_Block_proc_U0->m_axi_frame_out_RVALID(bgsub_Block_proc_U0_m_axi_frame_out_RVALID);
    bgsub_Block_proc_U0->m_axi_frame_out_RREADY(bgsub_Block_proc_U0_m_axi_frame_out_RREADY);
    bgsub_Block_proc_U0->m_axi_frame_out_RDATA(bgsub_Block_proc_U0_m_axi_frame_out_RDATA);
    bgsub_Block_proc_U0->m_axi_frame_out_RLAST(bgsub_Block_proc_U0_m_axi_frame_out_RLAST);
    bgsub_Block_proc_U0->m_axi_frame_out_RID(bgsub_Block_proc_U0_m_axi_frame_out_RID);
    bgsub_Block_proc_U0->m_axi_frame_out_RUSER(bgsub_Block_proc_U0_m_axi_frame_out_RUSER);
    bgsub_Block_proc_U0->m_axi_frame_out_RRESP(bgsub_Block_proc_U0_m_axi_frame_out_RRESP);
    bgsub_Block_proc_U0->m_axi_frame_out_BVALID(bgsub_Block_proc_U0_m_axi_frame_out_BVALID);
    bgsub_Block_proc_U0->m_axi_frame_out_BREADY(bgsub_Block_proc_U0_m_axi_frame_out_BREADY);
    bgsub_Block_proc_U0->m_axi_frame_out_BRESP(bgsub_Block_proc_U0_m_axi_frame_out_BRESP);
    bgsub_Block_proc_U0->m_axi_frame_out_BID(bgsub_Block_proc_U0_m_axi_frame_out_BID);
    bgsub_Block_proc_U0->m_axi_frame_out_BUSER(bgsub_Block_proc_U0_m_axi_frame_out_BUSER);
    bgsub_Block_proc_U0->frame_out2(bgsub_Block_proc_U0_frame_out2);
    bgsub_Block_proc_U0->frame_in(bgsub_Block_proc_U0_frame_in);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_hs_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( bgsub_Block_proc_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_top_allready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_hs_continue);

    SC_METHOD(thread_ap_sig_hs_done);
    sensitive << ( bgsub_Block_proc_U0_ap_done );

    SC_METHOD(thread_ap_sig_top_allready);
    sensitive << ( bgsub_Block_proc_U0_ap_ready );

    SC_METHOD(thread_bgsub_AXILiteS_s_axi_U_ap_dummy_ce);

    SC_METHOD(thread_bgsub_Block_proc_U0_ap_continue);

    SC_METHOD(thread_bgsub_Block_proc_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_bgsub_Block_proc_U0_bgmodel1);
    sensitive << ( bgmodel );

    SC_METHOD(thread_bgsub_Block_proc_U0_frame_in);
    sensitive << ( frame_in );

    SC_METHOD(thread_bgsub_Block_proc_U0_frame_out2);
    sensitive << ( frame_out );

    SC_METHOD(thread_bgsub_Block_proc_U0_init);
    sensitive << ( init );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_ARREADY);
    sensitive << ( gmem_offset_ARREADY );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_AWREADY);
    sensitive << ( gmem_offset_AWREADY );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_BID);
    sensitive << ( gmem_offset_BID );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_BRESP);
    sensitive << ( gmem_offset_BRESP );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_BUSER);
    sensitive << ( gmem_offset_BUSER );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_BVALID);
    sensitive << ( gmem_offset_BVALID );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_RDATA);
    sensitive << ( gmem_offset_RDATA );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_RID);
    sensitive << ( gmem_offset_RID );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_RLAST);
    sensitive << ( gmem_offset_RLAST );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_RRESP);
    sensitive << ( gmem_offset_RRESP );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_RUSER);
    sensitive << ( gmem_offset_RUSER );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_RVALID);
    sensitive << ( gmem_offset_RVALID );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_bgmodel_WREADY);
    sensitive << ( gmem_offset_WREADY );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_ARREADY);
    sensitive << ( gmem_ARREADY );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_AWREADY);
    sensitive << ( gmem_AWREADY );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_BID);
    sensitive << ( gmem_BID );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_BRESP);
    sensitive << ( gmem_BRESP );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_BUSER);
    sensitive << ( gmem_BUSER );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_BVALID);
    sensitive << ( gmem_BVALID );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_RDATA);
    sensitive << ( gmem_RDATA );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_RID);
    sensitive << ( gmem_RID );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_RLAST);
    sensitive << ( gmem_RLAST );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_RRESP);
    sensitive << ( gmem_RRESP );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_RUSER);
    sensitive << ( gmem_RUSER );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_RVALID);
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_bgsub_Block_proc_U0_m_axi_frame_out_WREADY);
    sensitive << ( gmem_WREADY );

    SC_METHOD(thread_bgsub_CRTL_BUS_s_axi_U_ap_dummy_ce);

    SC_METHOD(thread_bgsub_gmem_m_axi_U_ap_dummy_ce);

    SC_METHOD(thread_bgsub_gmem_offset_m_axi_U_ap_dummy_ce);

    SC_METHOD(thread_gmem_ARADDR);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARADDR );

    SC_METHOD(thread_gmem_ARBURST);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARBURST );

    SC_METHOD(thread_gmem_ARCACHE);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARCACHE );

    SC_METHOD(thread_gmem_ARID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARID );

    SC_METHOD(thread_gmem_ARLEN);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARLEN );

    SC_METHOD(thread_gmem_ARLOCK);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARLOCK );

    SC_METHOD(thread_gmem_ARPROT);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARPROT );

    SC_METHOD(thread_gmem_ARQOS);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARQOS );

    SC_METHOD(thread_gmem_ARREGION);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARREGION );

    SC_METHOD(thread_gmem_ARSIZE);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARSIZE );

    SC_METHOD(thread_gmem_ARUSER);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARUSER );

    SC_METHOD(thread_gmem_ARVALID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_ARVALID );

    SC_METHOD(thread_gmem_AWADDR);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWADDR );

    SC_METHOD(thread_gmem_AWBURST);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWBURST );

    SC_METHOD(thread_gmem_AWCACHE);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWCACHE );

    SC_METHOD(thread_gmem_AWID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWID );

    SC_METHOD(thread_gmem_AWLEN);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWLEN );

    SC_METHOD(thread_gmem_AWLOCK);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWLOCK );

    SC_METHOD(thread_gmem_AWPROT);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWPROT );

    SC_METHOD(thread_gmem_AWQOS);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWQOS );

    SC_METHOD(thread_gmem_AWREGION);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWREGION );

    SC_METHOD(thread_gmem_AWSIZE);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWSIZE );

    SC_METHOD(thread_gmem_AWUSER);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWUSER );

    SC_METHOD(thread_gmem_AWVALID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_AWVALID );

    SC_METHOD(thread_gmem_BREADY);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_BREADY );

    SC_METHOD(thread_gmem_RREADY);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_RREADY );

    SC_METHOD(thread_gmem_WDATA);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_WDATA );

    SC_METHOD(thread_gmem_WID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_WID );

    SC_METHOD(thread_gmem_WLAST);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_WLAST );

    SC_METHOD(thread_gmem_WSTRB);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_WSTRB );

    SC_METHOD(thread_gmem_WUSER);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_WUSER );

    SC_METHOD(thread_gmem_WVALID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_frame_out_WVALID );

    SC_METHOD(thread_gmem_offset_ARADDR);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARADDR );

    SC_METHOD(thread_gmem_offset_ARBURST);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARBURST );

    SC_METHOD(thread_gmem_offset_ARCACHE);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARCACHE );

    SC_METHOD(thread_gmem_offset_ARID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARID );

    SC_METHOD(thread_gmem_offset_ARLEN);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARLEN );

    SC_METHOD(thread_gmem_offset_ARLOCK);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARLOCK );

    SC_METHOD(thread_gmem_offset_ARPROT);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARPROT );

    SC_METHOD(thread_gmem_offset_ARQOS);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARQOS );

    SC_METHOD(thread_gmem_offset_ARREGION);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARREGION );

    SC_METHOD(thread_gmem_offset_ARSIZE);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARSIZE );

    SC_METHOD(thread_gmem_offset_ARUSER);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARUSER );

    SC_METHOD(thread_gmem_offset_ARVALID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_ARVALID );

    SC_METHOD(thread_gmem_offset_AWADDR);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWADDR );

    SC_METHOD(thread_gmem_offset_AWBURST);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWBURST );

    SC_METHOD(thread_gmem_offset_AWCACHE);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWCACHE );

    SC_METHOD(thread_gmem_offset_AWID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWID );

    SC_METHOD(thread_gmem_offset_AWLEN);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWLEN );

    SC_METHOD(thread_gmem_offset_AWLOCK);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWLOCK );

    SC_METHOD(thread_gmem_offset_AWPROT);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWPROT );

    SC_METHOD(thread_gmem_offset_AWQOS);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWQOS );

    SC_METHOD(thread_gmem_offset_AWREGION);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWREGION );

    SC_METHOD(thread_gmem_offset_AWSIZE);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWSIZE );

    SC_METHOD(thread_gmem_offset_AWUSER);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWUSER );

    SC_METHOD(thread_gmem_offset_AWVALID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_AWVALID );

    SC_METHOD(thread_gmem_offset_BREADY);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_BREADY );

    SC_METHOD(thread_gmem_offset_RREADY);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_RREADY );

    SC_METHOD(thread_gmem_offset_WDATA);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_WDATA );

    SC_METHOD(thread_gmem_offset_WID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_WID );

    SC_METHOD(thread_gmem_offset_WLAST);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_WLAST );

    SC_METHOD(thread_gmem_offset_WSTRB);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_WSTRB );

    SC_METHOD(thread_gmem_offset_WUSER);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_WUSER );

    SC_METHOD(thread_gmem_offset_WVALID);
    sensitive << ( bgsub_Block_proc_U0_m_axi_bgmodel_WVALID );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_reg_procdone_bgsub_Block_proc_U0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "bgsub_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWVALID, "(port)s_axi_CRTL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWREADY, "(port)s_axi_CRTL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWADDR, "(port)s_axi_CRTL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WVALID, "(port)s_axi_CRTL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WREADY, "(port)s_axi_CRTL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WDATA, "(port)s_axi_CRTL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WSTRB, "(port)s_axi_CRTL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARVALID, "(port)s_axi_CRTL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARREADY, "(port)s_axi_CRTL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARADDR, "(port)s_axi_CRTL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RVALID, "(port)s_axi_CRTL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RREADY, "(port)s_axi_CRTL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RDATA, "(port)s_axi_CRTL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RRESP, "(port)s_axi_CRTL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BVALID, "(port)s_axi_CRTL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BREADY, "(port)s_axi_CRTL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BRESP, "(port)s_axi_CRTL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWVALID, "(port)m_axi_gmem_offset_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWREADY, "(port)m_axi_gmem_offset_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWADDR, "(port)m_axi_gmem_offset_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWID, "(port)m_axi_gmem_offset_AWID");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWLEN, "(port)m_axi_gmem_offset_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWSIZE, "(port)m_axi_gmem_offset_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWBURST, "(port)m_axi_gmem_offset_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWLOCK, "(port)m_axi_gmem_offset_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWCACHE, "(port)m_axi_gmem_offset_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWPROT, "(port)m_axi_gmem_offset_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWQOS, "(port)m_axi_gmem_offset_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWREGION, "(port)m_axi_gmem_offset_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_offset_AWUSER, "(port)m_axi_gmem_offset_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_offset_WVALID, "(port)m_axi_gmem_offset_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_offset_WREADY, "(port)m_axi_gmem_offset_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_offset_WDATA, "(port)m_axi_gmem_offset_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_offset_WSTRB, "(port)m_axi_gmem_offset_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_offset_WLAST, "(port)m_axi_gmem_offset_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_offset_WID, "(port)m_axi_gmem_offset_WID");
    sc_trace(mVcdFile, m_axi_gmem_offset_WUSER, "(port)m_axi_gmem_offset_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARVALID, "(port)m_axi_gmem_offset_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARREADY, "(port)m_axi_gmem_offset_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARADDR, "(port)m_axi_gmem_offset_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARID, "(port)m_axi_gmem_offset_ARID");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARLEN, "(port)m_axi_gmem_offset_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARSIZE, "(port)m_axi_gmem_offset_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARBURST, "(port)m_axi_gmem_offset_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARLOCK, "(port)m_axi_gmem_offset_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARCACHE, "(port)m_axi_gmem_offset_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARPROT, "(port)m_axi_gmem_offset_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARQOS, "(port)m_axi_gmem_offset_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARREGION, "(port)m_axi_gmem_offset_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_offset_ARUSER, "(port)m_axi_gmem_offset_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_offset_RVALID, "(port)m_axi_gmem_offset_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_offset_RREADY, "(port)m_axi_gmem_offset_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_offset_RDATA, "(port)m_axi_gmem_offset_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_offset_RLAST, "(port)m_axi_gmem_offset_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_offset_RID, "(port)m_axi_gmem_offset_RID");
    sc_trace(mVcdFile, m_axi_gmem_offset_RUSER, "(port)m_axi_gmem_offset_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_offset_RRESP, "(port)m_axi_gmem_offset_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_offset_BVALID, "(port)m_axi_gmem_offset_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_offset_BREADY, "(port)m_axi_gmem_offset_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_offset_BRESP, "(port)m_axi_gmem_offset_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_offset_BID, "(port)m_axi_gmem_offset_BID");
    sc_trace(mVcdFile, m_axi_gmem_offset_BUSER, "(port)m_axi_gmem_offset_BUSER");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, bgsub_AXILiteS_s_axi_U_ap_dummy_ce, "bgsub_AXILiteS_s_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, frame_in, "frame_in");
    sc_trace(mVcdFile, frame_out, "frame_out");
    sc_trace(mVcdFile, bgmodel, "bgmodel");
    sc_trace(mVcdFile, bgsub_CRTL_BUS_s_axi_U_ap_dummy_ce, "bgsub_CRTL_BUS_s_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, init, "init");
    sc_trace(mVcdFile, gmem_AWVALID, "gmem_AWVALID");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_AWADDR, "gmem_AWADDR");
    sc_trace(mVcdFile, gmem_AWID, "gmem_AWID");
    sc_trace(mVcdFile, gmem_AWLEN, "gmem_AWLEN");
    sc_trace(mVcdFile, gmem_AWSIZE, "gmem_AWSIZE");
    sc_trace(mVcdFile, gmem_AWBURST, "gmem_AWBURST");
    sc_trace(mVcdFile, gmem_AWLOCK, "gmem_AWLOCK");
    sc_trace(mVcdFile, gmem_AWCACHE, "gmem_AWCACHE");
    sc_trace(mVcdFile, gmem_AWPROT, "gmem_AWPROT");
    sc_trace(mVcdFile, gmem_AWQOS, "gmem_AWQOS");
    sc_trace(mVcdFile, gmem_AWREGION, "gmem_AWREGION");
    sc_trace(mVcdFile, gmem_AWUSER, "gmem_AWUSER");
    sc_trace(mVcdFile, gmem_WVALID, "gmem_WVALID");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_WDATA, "gmem_WDATA");
    sc_trace(mVcdFile, gmem_WSTRB, "gmem_WSTRB");
    sc_trace(mVcdFile, gmem_WLAST, "gmem_WLAST");
    sc_trace(mVcdFile, gmem_WID, "gmem_WID");
    sc_trace(mVcdFile, gmem_WUSER, "gmem_WUSER");
    sc_trace(mVcdFile, gmem_ARVALID, "gmem_ARVALID");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_ARADDR, "gmem_ARADDR");
    sc_trace(mVcdFile, gmem_ARID, "gmem_ARID");
    sc_trace(mVcdFile, gmem_ARLEN, "gmem_ARLEN");
    sc_trace(mVcdFile, gmem_ARSIZE, "gmem_ARSIZE");
    sc_trace(mVcdFile, gmem_ARBURST, "gmem_ARBURST");
    sc_trace(mVcdFile, gmem_ARLOCK, "gmem_ARLOCK");
    sc_trace(mVcdFile, gmem_ARCACHE, "gmem_ARCACHE");
    sc_trace(mVcdFile, gmem_ARPROT, "gmem_ARPROT");
    sc_trace(mVcdFile, gmem_ARQOS, "gmem_ARQOS");
    sc_trace(mVcdFile, gmem_ARREGION, "gmem_ARREGION");
    sc_trace(mVcdFile, gmem_ARUSER, "gmem_ARUSER");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RREADY, "gmem_RREADY");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BREADY, "gmem_BREADY");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, bgsub_gmem_m_axi_U_ap_dummy_ce, "bgsub_gmem_m_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, gmem_offset_AWVALID, "gmem_offset_AWVALID");
    sc_trace(mVcdFile, gmem_offset_AWREADY, "gmem_offset_AWREADY");
    sc_trace(mVcdFile, gmem_offset_AWADDR, "gmem_offset_AWADDR");
    sc_trace(mVcdFile, gmem_offset_AWID, "gmem_offset_AWID");
    sc_trace(mVcdFile, gmem_offset_AWLEN, "gmem_offset_AWLEN");
    sc_trace(mVcdFile, gmem_offset_AWSIZE, "gmem_offset_AWSIZE");
    sc_trace(mVcdFile, gmem_offset_AWBURST, "gmem_offset_AWBURST");
    sc_trace(mVcdFile, gmem_offset_AWLOCK, "gmem_offset_AWLOCK");
    sc_trace(mVcdFile, gmem_offset_AWCACHE, "gmem_offset_AWCACHE");
    sc_trace(mVcdFile, gmem_offset_AWPROT, "gmem_offset_AWPROT");
    sc_trace(mVcdFile, gmem_offset_AWQOS, "gmem_offset_AWQOS");
    sc_trace(mVcdFile, gmem_offset_AWREGION, "gmem_offset_AWREGION");
    sc_trace(mVcdFile, gmem_offset_AWUSER, "gmem_offset_AWUSER");
    sc_trace(mVcdFile, gmem_offset_WVALID, "gmem_offset_WVALID");
    sc_trace(mVcdFile, gmem_offset_WREADY, "gmem_offset_WREADY");
    sc_trace(mVcdFile, gmem_offset_WDATA, "gmem_offset_WDATA");
    sc_trace(mVcdFile, gmem_offset_WSTRB, "gmem_offset_WSTRB");
    sc_trace(mVcdFile, gmem_offset_WLAST, "gmem_offset_WLAST");
    sc_trace(mVcdFile, gmem_offset_WID, "gmem_offset_WID");
    sc_trace(mVcdFile, gmem_offset_WUSER, "gmem_offset_WUSER");
    sc_trace(mVcdFile, gmem_offset_ARVALID, "gmem_offset_ARVALID");
    sc_trace(mVcdFile, gmem_offset_ARREADY, "gmem_offset_ARREADY");
    sc_trace(mVcdFile, gmem_offset_ARADDR, "gmem_offset_ARADDR");
    sc_trace(mVcdFile, gmem_offset_ARID, "gmem_offset_ARID");
    sc_trace(mVcdFile, gmem_offset_ARLEN, "gmem_offset_ARLEN");
    sc_trace(mVcdFile, gmem_offset_ARSIZE, "gmem_offset_ARSIZE");
    sc_trace(mVcdFile, gmem_offset_ARBURST, "gmem_offset_ARBURST");
    sc_trace(mVcdFile, gmem_offset_ARLOCK, "gmem_offset_ARLOCK");
    sc_trace(mVcdFile, gmem_offset_ARCACHE, "gmem_offset_ARCACHE");
    sc_trace(mVcdFile, gmem_offset_ARPROT, "gmem_offset_ARPROT");
    sc_trace(mVcdFile, gmem_offset_ARQOS, "gmem_offset_ARQOS");
    sc_trace(mVcdFile, gmem_offset_ARREGION, "gmem_offset_ARREGION");
    sc_trace(mVcdFile, gmem_offset_ARUSER, "gmem_offset_ARUSER");
    sc_trace(mVcdFile, gmem_offset_RVALID, "gmem_offset_RVALID");
    sc_trace(mVcdFile, gmem_offset_RREADY, "gmem_offset_RREADY");
    sc_trace(mVcdFile, gmem_offset_RDATA, "gmem_offset_RDATA");
    sc_trace(mVcdFile, gmem_offset_RLAST, "gmem_offset_RLAST");
    sc_trace(mVcdFile, gmem_offset_RID, "gmem_offset_RID");
    sc_trace(mVcdFile, gmem_offset_RUSER, "gmem_offset_RUSER");
    sc_trace(mVcdFile, gmem_offset_RRESP, "gmem_offset_RRESP");
    sc_trace(mVcdFile, gmem_offset_BVALID, "gmem_offset_BVALID");
    sc_trace(mVcdFile, gmem_offset_BREADY, "gmem_offset_BREADY");
    sc_trace(mVcdFile, gmem_offset_BRESP, "gmem_offset_BRESP");
    sc_trace(mVcdFile, gmem_offset_BID, "gmem_offset_BID");
    sc_trace(mVcdFile, gmem_offset_BUSER, "gmem_offset_BUSER");
    sc_trace(mVcdFile, bgsub_gmem_offset_m_axi_U_ap_dummy_ce, "bgsub_gmem_offset_m_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_ap_start, "bgsub_Block_proc_U0_ap_start");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_ap_done, "bgsub_Block_proc_U0_ap_done");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_ap_continue, "bgsub_Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_ap_idle, "bgsub_Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_ap_ready, "bgsub_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_init, "bgsub_Block_proc_U0_init");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWVALID, "bgsub_Block_proc_U0_m_axi_bgmodel_AWVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWREADY, "bgsub_Block_proc_U0_m_axi_bgmodel_AWREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWADDR, "bgsub_Block_proc_U0_m_axi_bgmodel_AWADDR");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWID, "bgsub_Block_proc_U0_m_axi_bgmodel_AWID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWLEN, "bgsub_Block_proc_U0_m_axi_bgmodel_AWLEN");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWSIZE, "bgsub_Block_proc_U0_m_axi_bgmodel_AWSIZE");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWBURST, "bgsub_Block_proc_U0_m_axi_bgmodel_AWBURST");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWLOCK, "bgsub_Block_proc_U0_m_axi_bgmodel_AWLOCK");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWCACHE, "bgsub_Block_proc_U0_m_axi_bgmodel_AWCACHE");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWPROT, "bgsub_Block_proc_U0_m_axi_bgmodel_AWPROT");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWQOS, "bgsub_Block_proc_U0_m_axi_bgmodel_AWQOS");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWREGION, "bgsub_Block_proc_U0_m_axi_bgmodel_AWREGION");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_AWUSER, "bgsub_Block_proc_U0_m_axi_bgmodel_AWUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_WVALID, "bgsub_Block_proc_U0_m_axi_bgmodel_WVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_WREADY, "bgsub_Block_proc_U0_m_axi_bgmodel_WREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_WDATA, "bgsub_Block_proc_U0_m_axi_bgmodel_WDATA");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_WSTRB, "bgsub_Block_proc_U0_m_axi_bgmodel_WSTRB");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_WLAST, "bgsub_Block_proc_U0_m_axi_bgmodel_WLAST");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_WID, "bgsub_Block_proc_U0_m_axi_bgmodel_WID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_WUSER, "bgsub_Block_proc_U0_m_axi_bgmodel_WUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARVALID, "bgsub_Block_proc_U0_m_axi_bgmodel_ARVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARREADY, "bgsub_Block_proc_U0_m_axi_bgmodel_ARREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARADDR, "bgsub_Block_proc_U0_m_axi_bgmodel_ARADDR");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARID, "bgsub_Block_proc_U0_m_axi_bgmodel_ARID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARLEN, "bgsub_Block_proc_U0_m_axi_bgmodel_ARLEN");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARSIZE, "bgsub_Block_proc_U0_m_axi_bgmodel_ARSIZE");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARBURST, "bgsub_Block_proc_U0_m_axi_bgmodel_ARBURST");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARLOCK, "bgsub_Block_proc_U0_m_axi_bgmodel_ARLOCK");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARCACHE, "bgsub_Block_proc_U0_m_axi_bgmodel_ARCACHE");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARPROT, "bgsub_Block_proc_U0_m_axi_bgmodel_ARPROT");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARQOS, "bgsub_Block_proc_U0_m_axi_bgmodel_ARQOS");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARREGION, "bgsub_Block_proc_U0_m_axi_bgmodel_ARREGION");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_ARUSER, "bgsub_Block_proc_U0_m_axi_bgmodel_ARUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_RVALID, "bgsub_Block_proc_U0_m_axi_bgmodel_RVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_RREADY, "bgsub_Block_proc_U0_m_axi_bgmodel_RREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_RDATA, "bgsub_Block_proc_U0_m_axi_bgmodel_RDATA");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_RLAST, "bgsub_Block_proc_U0_m_axi_bgmodel_RLAST");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_RID, "bgsub_Block_proc_U0_m_axi_bgmodel_RID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_RUSER, "bgsub_Block_proc_U0_m_axi_bgmodel_RUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_RRESP, "bgsub_Block_proc_U0_m_axi_bgmodel_RRESP");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_BVALID, "bgsub_Block_proc_U0_m_axi_bgmodel_BVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_BREADY, "bgsub_Block_proc_U0_m_axi_bgmodel_BREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_BRESP, "bgsub_Block_proc_U0_m_axi_bgmodel_BRESP");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_BID, "bgsub_Block_proc_U0_m_axi_bgmodel_BID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_bgmodel_BUSER, "bgsub_Block_proc_U0_m_axi_bgmodel_BUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_bgmodel1, "bgsub_Block_proc_U0_bgmodel1");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWVALID, "bgsub_Block_proc_U0_m_axi_frame_out_AWVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWREADY, "bgsub_Block_proc_U0_m_axi_frame_out_AWREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWADDR, "bgsub_Block_proc_U0_m_axi_frame_out_AWADDR");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWID, "bgsub_Block_proc_U0_m_axi_frame_out_AWID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWLEN, "bgsub_Block_proc_U0_m_axi_frame_out_AWLEN");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWSIZE, "bgsub_Block_proc_U0_m_axi_frame_out_AWSIZE");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWBURST, "bgsub_Block_proc_U0_m_axi_frame_out_AWBURST");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWLOCK, "bgsub_Block_proc_U0_m_axi_frame_out_AWLOCK");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWCACHE, "bgsub_Block_proc_U0_m_axi_frame_out_AWCACHE");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWPROT, "bgsub_Block_proc_U0_m_axi_frame_out_AWPROT");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWQOS, "bgsub_Block_proc_U0_m_axi_frame_out_AWQOS");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWREGION, "bgsub_Block_proc_U0_m_axi_frame_out_AWREGION");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_AWUSER, "bgsub_Block_proc_U0_m_axi_frame_out_AWUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_WVALID, "bgsub_Block_proc_U0_m_axi_frame_out_WVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_WREADY, "bgsub_Block_proc_U0_m_axi_frame_out_WREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_WDATA, "bgsub_Block_proc_U0_m_axi_frame_out_WDATA");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_WSTRB, "bgsub_Block_proc_U0_m_axi_frame_out_WSTRB");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_WLAST, "bgsub_Block_proc_U0_m_axi_frame_out_WLAST");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_WID, "bgsub_Block_proc_U0_m_axi_frame_out_WID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_WUSER, "bgsub_Block_proc_U0_m_axi_frame_out_WUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARVALID, "bgsub_Block_proc_U0_m_axi_frame_out_ARVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARREADY, "bgsub_Block_proc_U0_m_axi_frame_out_ARREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARADDR, "bgsub_Block_proc_U0_m_axi_frame_out_ARADDR");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARID, "bgsub_Block_proc_U0_m_axi_frame_out_ARID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARLEN, "bgsub_Block_proc_U0_m_axi_frame_out_ARLEN");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARSIZE, "bgsub_Block_proc_U0_m_axi_frame_out_ARSIZE");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARBURST, "bgsub_Block_proc_U0_m_axi_frame_out_ARBURST");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARLOCK, "bgsub_Block_proc_U0_m_axi_frame_out_ARLOCK");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARCACHE, "bgsub_Block_proc_U0_m_axi_frame_out_ARCACHE");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARPROT, "bgsub_Block_proc_U0_m_axi_frame_out_ARPROT");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARQOS, "bgsub_Block_proc_U0_m_axi_frame_out_ARQOS");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARREGION, "bgsub_Block_proc_U0_m_axi_frame_out_ARREGION");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_ARUSER, "bgsub_Block_proc_U0_m_axi_frame_out_ARUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_RVALID, "bgsub_Block_proc_U0_m_axi_frame_out_RVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_RREADY, "bgsub_Block_proc_U0_m_axi_frame_out_RREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_RDATA, "bgsub_Block_proc_U0_m_axi_frame_out_RDATA");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_RLAST, "bgsub_Block_proc_U0_m_axi_frame_out_RLAST");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_RID, "bgsub_Block_proc_U0_m_axi_frame_out_RID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_RUSER, "bgsub_Block_proc_U0_m_axi_frame_out_RUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_RRESP, "bgsub_Block_proc_U0_m_axi_frame_out_RRESP");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_BVALID, "bgsub_Block_proc_U0_m_axi_frame_out_BVALID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_BREADY, "bgsub_Block_proc_U0_m_axi_frame_out_BREADY");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_BRESP, "bgsub_Block_proc_U0_m_axi_frame_out_BRESP");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_BID, "bgsub_Block_proc_U0_m_axi_frame_out_BID");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_m_axi_frame_out_BUSER, "bgsub_Block_proc_U0_m_axi_frame_out_BUSER");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_frame_out2, "bgsub_Block_proc_U0_frame_out2");
    sc_trace(mVcdFile, bgsub_Block_proc_U0_frame_in, "bgsub_Block_proc_U0_frame_in");
    sc_trace(mVcdFile, ap_reg_procdone_bgsub_Block_proc_U0, "ap_reg_procdone_bgsub_Block_proc_U0");
    sc_trace(mVcdFile, ap_sig_hs_done, "ap_sig_hs_done");
    sc_trace(mVcdFile, ap_CS, "ap_CS");
    sc_trace(mVcdFile, ap_sig_top_allready, "ap_sig_top_allready");
    sc_trace(mVcdFile, ap_sig_hs_continue, "ap_sig_hs_continue");
#endif

    }
    mHdltvinHandle.open("bgsub.hdltvin.dat");
    mHdltvoutHandle.open("bgsub.hdltvout.dat");
}

bgsub::~bgsub() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete bgsub_AXILiteS_s_axi_U;
    delete bgsub_CRTL_BUS_s_axi_U;
    delete bgsub_gmem_m_axi_U;
    delete bgsub_gmem_offset_m_axi_U;
    delete bgsub_Block_proc_U0;
}

void bgsub::thread_ap_clk_no_reset_() {
    ap_CS = ap_const_logic_0;
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_bgsub_Block_proc_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_bgsub_Block_proc_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, bgsub_Block_proc_U0_ap_done.read())) {
            ap_reg_procdone_bgsub_Block_proc_U0 = ap_const_logic_1;
        }
    }
}

void bgsub::thread_ap_done() {
    ap_done = ap_sig_hs_done.read();
}

void bgsub::thread_ap_idle() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, bgsub_Block_proc_U0_ap_idle.read())) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void bgsub::thread_ap_ready() {
    ap_ready = ap_sig_top_allready.read();
}

void bgsub::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void bgsub::thread_ap_sig_hs_continue() {
    ap_sig_hs_continue = ap_const_logic_1;
}

void bgsub::thread_ap_sig_hs_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, bgsub_Block_proc_U0_ap_done.read())) {
        ap_sig_hs_done = ap_const_logic_1;
    } else {
        ap_sig_hs_done = ap_const_logic_0;
    }
}

void bgsub::thread_ap_sig_top_allready() {
    ap_sig_top_allready = bgsub_Block_proc_U0_ap_ready.read();
}

void bgsub::thread_bgsub_AXILiteS_s_axi_U_ap_dummy_ce() {
    bgsub_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void bgsub::thread_bgsub_Block_proc_U0_ap_continue() {
    bgsub_Block_proc_U0_ap_continue = ap_const_logic_1;
}

void bgsub::thread_bgsub_Block_proc_U0_ap_start() {
    bgsub_Block_proc_U0_ap_start = ap_start.read();
}

void bgsub::thread_bgsub_Block_proc_U0_bgmodel1() {
    bgsub_Block_proc_U0_bgmodel1 = bgmodel.read();
}

void bgsub::thread_bgsub_Block_proc_U0_frame_in() {
    bgsub_Block_proc_U0_frame_in = frame_in.read();
}

void bgsub::thread_bgsub_Block_proc_U0_frame_out2() {
    bgsub_Block_proc_U0_frame_out2 = frame_out.read();
}

void bgsub::thread_bgsub_Block_proc_U0_init() {
    bgsub_Block_proc_U0_init =  (sc_lv<1>) (init.read());
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_ARREADY() {
    bgsub_Block_proc_U0_m_axi_bgmodel_ARREADY = gmem_offset_ARREADY.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_AWREADY() {
    bgsub_Block_proc_U0_m_axi_bgmodel_AWREADY = gmem_offset_AWREADY.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_BID() {
    bgsub_Block_proc_U0_m_axi_bgmodel_BID = gmem_offset_BID.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_BRESP() {
    bgsub_Block_proc_U0_m_axi_bgmodel_BRESP = gmem_offset_BRESP.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_BUSER() {
    bgsub_Block_proc_U0_m_axi_bgmodel_BUSER = gmem_offset_BUSER.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_BVALID() {
    bgsub_Block_proc_U0_m_axi_bgmodel_BVALID = gmem_offset_BVALID.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_RDATA() {
    bgsub_Block_proc_U0_m_axi_bgmodel_RDATA = gmem_offset_RDATA.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_RID() {
    bgsub_Block_proc_U0_m_axi_bgmodel_RID = gmem_offset_RID.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_RLAST() {
    bgsub_Block_proc_U0_m_axi_bgmodel_RLAST = gmem_offset_RLAST.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_RRESP() {
    bgsub_Block_proc_U0_m_axi_bgmodel_RRESP = gmem_offset_RRESP.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_RUSER() {
    bgsub_Block_proc_U0_m_axi_bgmodel_RUSER = gmem_offset_RUSER.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_RVALID() {
    bgsub_Block_proc_U0_m_axi_bgmodel_RVALID = gmem_offset_RVALID.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_bgmodel_WREADY() {
    bgsub_Block_proc_U0_m_axi_bgmodel_WREADY = gmem_offset_WREADY.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_ARREADY() {
    bgsub_Block_proc_U0_m_axi_frame_out_ARREADY = gmem_ARREADY.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_AWREADY() {
    bgsub_Block_proc_U0_m_axi_frame_out_AWREADY = gmem_AWREADY.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_BID() {
    bgsub_Block_proc_U0_m_axi_frame_out_BID = gmem_BID.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_BRESP() {
    bgsub_Block_proc_U0_m_axi_frame_out_BRESP = gmem_BRESP.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_BUSER() {
    bgsub_Block_proc_U0_m_axi_frame_out_BUSER = gmem_BUSER.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_BVALID() {
    bgsub_Block_proc_U0_m_axi_frame_out_BVALID = gmem_BVALID.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_RDATA() {
    bgsub_Block_proc_U0_m_axi_frame_out_RDATA = gmem_RDATA.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_RID() {
    bgsub_Block_proc_U0_m_axi_frame_out_RID = gmem_RID.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_RLAST() {
    bgsub_Block_proc_U0_m_axi_frame_out_RLAST = gmem_RLAST.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_RRESP() {
    bgsub_Block_proc_U0_m_axi_frame_out_RRESP = gmem_RRESP.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_RUSER() {
    bgsub_Block_proc_U0_m_axi_frame_out_RUSER = gmem_RUSER.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_RVALID() {
    bgsub_Block_proc_U0_m_axi_frame_out_RVALID = gmem_RVALID.read();
}

void bgsub::thread_bgsub_Block_proc_U0_m_axi_frame_out_WREADY() {
    bgsub_Block_proc_U0_m_axi_frame_out_WREADY = gmem_WREADY.read();
}

void bgsub::thread_bgsub_CRTL_BUS_s_axi_U_ap_dummy_ce() {
    bgsub_CRTL_BUS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void bgsub::thread_bgsub_gmem_m_axi_U_ap_dummy_ce() {
    bgsub_gmem_m_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void bgsub::thread_bgsub_gmem_offset_m_axi_U_ap_dummy_ce() {
    bgsub_gmem_offset_m_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void bgsub::thread_gmem_ARADDR() {
    gmem_ARADDR = bgsub_Block_proc_U0_m_axi_frame_out_ARADDR.read();
}

void bgsub::thread_gmem_ARBURST() {
    gmem_ARBURST = bgsub_Block_proc_U0_m_axi_frame_out_ARBURST.read();
}

void bgsub::thread_gmem_ARCACHE() {
    gmem_ARCACHE = bgsub_Block_proc_U0_m_axi_frame_out_ARCACHE.read();
}

void bgsub::thread_gmem_ARID() {
    gmem_ARID = bgsub_Block_proc_U0_m_axi_frame_out_ARID.read();
}

void bgsub::thread_gmem_ARLEN() {
    gmem_ARLEN = bgsub_Block_proc_U0_m_axi_frame_out_ARLEN.read();
}

void bgsub::thread_gmem_ARLOCK() {
    gmem_ARLOCK = bgsub_Block_proc_U0_m_axi_frame_out_ARLOCK.read();
}

void bgsub::thread_gmem_ARPROT() {
    gmem_ARPROT = bgsub_Block_proc_U0_m_axi_frame_out_ARPROT.read();
}

void bgsub::thread_gmem_ARQOS() {
    gmem_ARQOS = bgsub_Block_proc_U0_m_axi_frame_out_ARQOS.read();
}

void bgsub::thread_gmem_ARREGION() {
    gmem_ARREGION = bgsub_Block_proc_U0_m_axi_frame_out_ARREGION.read();
}

void bgsub::thread_gmem_ARSIZE() {
    gmem_ARSIZE = bgsub_Block_proc_U0_m_axi_frame_out_ARSIZE.read();
}

void bgsub::thread_gmem_ARUSER() {
    gmem_ARUSER = bgsub_Block_proc_U0_m_axi_frame_out_ARUSER.read();
}

void bgsub::thread_gmem_ARVALID() {
    gmem_ARVALID = bgsub_Block_proc_U0_m_axi_frame_out_ARVALID.read();
}

void bgsub::thread_gmem_AWADDR() {
    gmem_AWADDR = bgsub_Block_proc_U0_m_axi_frame_out_AWADDR.read();
}

void bgsub::thread_gmem_AWBURST() {
    gmem_AWBURST = bgsub_Block_proc_U0_m_axi_frame_out_AWBURST.read();
}

void bgsub::thread_gmem_AWCACHE() {
    gmem_AWCACHE = bgsub_Block_proc_U0_m_axi_frame_out_AWCACHE.read();
}

void bgsub::thread_gmem_AWID() {
    gmem_AWID = bgsub_Block_proc_U0_m_axi_frame_out_AWID.read();
}

void bgsub::thread_gmem_AWLEN() {
    gmem_AWLEN = bgsub_Block_proc_U0_m_axi_frame_out_AWLEN.read();
}

void bgsub::thread_gmem_AWLOCK() {
    gmem_AWLOCK = bgsub_Block_proc_U0_m_axi_frame_out_AWLOCK.read();
}

void bgsub::thread_gmem_AWPROT() {
    gmem_AWPROT = bgsub_Block_proc_U0_m_axi_frame_out_AWPROT.read();
}

void bgsub::thread_gmem_AWQOS() {
    gmem_AWQOS = bgsub_Block_proc_U0_m_axi_frame_out_AWQOS.read();
}

void bgsub::thread_gmem_AWREGION() {
    gmem_AWREGION = bgsub_Block_proc_U0_m_axi_frame_out_AWREGION.read();
}

void bgsub::thread_gmem_AWSIZE() {
    gmem_AWSIZE = bgsub_Block_proc_U0_m_axi_frame_out_AWSIZE.read();
}

void bgsub::thread_gmem_AWUSER() {
    gmem_AWUSER = bgsub_Block_proc_U0_m_axi_frame_out_AWUSER.read();
}

void bgsub::thread_gmem_AWVALID() {
    gmem_AWVALID = bgsub_Block_proc_U0_m_axi_frame_out_AWVALID.read();
}

void bgsub::thread_gmem_BREADY() {
    gmem_BREADY = bgsub_Block_proc_U0_m_axi_frame_out_BREADY.read();
}

void bgsub::thread_gmem_RREADY() {
    gmem_RREADY = bgsub_Block_proc_U0_m_axi_frame_out_RREADY.read();
}

void bgsub::thread_gmem_WDATA() {
    gmem_WDATA = bgsub_Block_proc_U0_m_axi_frame_out_WDATA.read();
}

void bgsub::thread_gmem_WID() {
    gmem_WID = bgsub_Block_proc_U0_m_axi_frame_out_WID.read();
}

void bgsub::thread_gmem_WLAST() {
    gmem_WLAST = bgsub_Block_proc_U0_m_axi_frame_out_WLAST.read();
}

void bgsub::thread_gmem_WSTRB() {
    gmem_WSTRB = bgsub_Block_proc_U0_m_axi_frame_out_WSTRB.read();
}

void bgsub::thread_gmem_WUSER() {
    gmem_WUSER = bgsub_Block_proc_U0_m_axi_frame_out_WUSER.read();
}

void bgsub::thread_gmem_WVALID() {
    gmem_WVALID = bgsub_Block_proc_U0_m_axi_frame_out_WVALID.read();
}

void bgsub::thread_gmem_offset_ARADDR() {
    gmem_offset_ARADDR = bgsub_Block_proc_U0_m_axi_bgmodel_ARADDR.read();
}

void bgsub::thread_gmem_offset_ARBURST() {
    gmem_offset_ARBURST = bgsub_Block_proc_U0_m_axi_bgmodel_ARBURST.read();
}

void bgsub::thread_gmem_offset_ARCACHE() {
    gmem_offset_ARCACHE = bgsub_Block_proc_U0_m_axi_bgmodel_ARCACHE.read();
}

void bgsub::thread_gmem_offset_ARID() {
    gmem_offset_ARID = bgsub_Block_proc_U0_m_axi_bgmodel_ARID.read();
}

void bgsub::thread_gmem_offset_ARLEN() {
    gmem_offset_ARLEN = bgsub_Block_proc_U0_m_axi_bgmodel_ARLEN.read();
}

void bgsub::thread_gmem_offset_ARLOCK() {
    gmem_offset_ARLOCK = bgsub_Block_proc_U0_m_axi_bgmodel_ARLOCK.read();
}

void bgsub::thread_gmem_offset_ARPROT() {
    gmem_offset_ARPROT = bgsub_Block_proc_U0_m_axi_bgmodel_ARPROT.read();
}

void bgsub::thread_gmem_offset_ARQOS() {
    gmem_offset_ARQOS = bgsub_Block_proc_U0_m_axi_bgmodel_ARQOS.read();
}

void bgsub::thread_gmem_offset_ARREGION() {
    gmem_offset_ARREGION = bgsub_Block_proc_U0_m_axi_bgmodel_ARREGION.read();
}

void bgsub::thread_gmem_offset_ARSIZE() {
    gmem_offset_ARSIZE = bgsub_Block_proc_U0_m_axi_bgmodel_ARSIZE.read();
}

void bgsub::thread_gmem_offset_ARUSER() {
    gmem_offset_ARUSER = bgsub_Block_proc_U0_m_axi_bgmodel_ARUSER.read();
}

void bgsub::thread_gmem_offset_ARVALID() {
    gmem_offset_ARVALID = bgsub_Block_proc_U0_m_axi_bgmodel_ARVALID.read();
}

void bgsub::thread_gmem_offset_AWADDR() {
    gmem_offset_AWADDR = bgsub_Block_proc_U0_m_axi_bgmodel_AWADDR.read();
}

void bgsub::thread_gmem_offset_AWBURST() {
    gmem_offset_AWBURST = bgsub_Block_proc_U0_m_axi_bgmodel_AWBURST.read();
}

void bgsub::thread_gmem_offset_AWCACHE() {
    gmem_offset_AWCACHE = bgsub_Block_proc_U0_m_axi_bgmodel_AWCACHE.read();
}

void bgsub::thread_gmem_offset_AWID() {
    gmem_offset_AWID = bgsub_Block_proc_U0_m_axi_bgmodel_AWID.read();
}

void bgsub::thread_gmem_offset_AWLEN() {
    gmem_offset_AWLEN = bgsub_Block_proc_U0_m_axi_bgmodel_AWLEN.read();
}

void bgsub::thread_gmem_offset_AWLOCK() {
    gmem_offset_AWLOCK = bgsub_Block_proc_U0_m_axi_bgmodel_AWLOCK.read();
}

void bgsub::thread_gmem_offset_AWPROT() {
    gmem_offset_AWPROT = bgsub_Block_proc_U0_m_axi_bgmodel_AWPROT.read();
}

void bgsub::thread_gmem_offset_AWQOS() {
    gmem_offset_AWQOS = bgsub_Block_proc_U0_m_axi_bgmodel_AWQOS.read();
}

void bgsub::thread_gmem_offset_AWREGION() {
    gmem_offset_AWREGION = bgsub_Block_proc_U0_m_axi_bgmodel_AWREGION.read();
}

void bgsub::thread_gmem_offset_AWSIZE() {
    gmem_offset_AWSIZE = bgsub_Block_proc_U0_m_axi_bgmodel_AWSIZE.read();
}

void bgsub::thread_gmem_offset_AWUSER() {
    gmem_offset_AWUSER = bgsub_Block_proc_U0_m_axi_bgmodel_AWUSER.read();
}

void bgsub::thread_gmem_offset_AWVALID() {
    gmem_offset_AWVALID = bgsub_Block_proc_U0_m_axi_bgmodel_AWVALID.read();
}

void bgsub::thread_gmem_offset_BREADY() {
    gmem_offset_BREADY = bgsub_Block_proc_U0_m_axi_bgmodel_BREADY.read();
}

void bgsub::thread_gmem_offset_RREADY() {
    gmem_offset_RREADY = bgsub_Block_proc_U0_m_axi_bgmodel_RREADY.read();
}

void bgsub::thread_gmem_offset_WDATA() {
    gmem_offset_WDATA = bgsub_Block_proc_U0_m_axi_bgmodel_WDATA.read();
}

void bgsub::thread_gmem_offset_WID() {
    gmem_offset_WID = bgsub_Block_proc_U0_m_axi_bgmodel_WID.read();
}

void bgsub::thread_gmem_offset_WLAST() {
    gmem_offset_WLAST = bgsub_Block_proc_U0_m_axi_bgmodel_WLAST.read();
}

void bgsub::thread_gmem_offset_WSTRB() {
    gmem_offset_WSTRB = bgsub_Block_proc_U0_m_axi_bgmodel_WSTRB.read();
}

void bgsub::thread_gmem_offset_WUSER() {
    gmem_offset_WUSER = bgsub_Block_proc_U0_m_axi_bgmodel_WUSER.read();
}

void bgsub::thread_gmem_offset_WVALID() {
    gmem_offset_WVALID = bgsub_Block_proc_U0_m_axi_bgmodel_WVALID.read();
}

void bgsub::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWVALID\" :  \"" << s_axi_CRTL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_AWREADY\" :  \"" << s_axi_CRTL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWADDR\" :  \"" << s_axi_CRTL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WVALID\" :  \"" << s_axi_CRTL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_WREADY\" :  \"" << s_axi_CRTL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WDATA\" :  \"" << s_axi_CRTL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WSTRB\" :  \"" << s_axi_CRTL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARVALID\" :  \"" << s_axi_CRTL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_ARREADY\" :  \"" << s_axi_CRTL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARADDR\" :  \"" << s_axi_CRTL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RVALID\" :  \"" << s_axi_CRTL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_RREADY\" :  \"" << s_axi_CRTL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RDATA\" :  \"" << s_axi_CRTL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RRESP\" :  \"" << s_axi_CRTL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BVALID\" :  \"" << s_axi_CRTL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_BREADY\" :  \"" << s_axi_CRTL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BRESP\" :  \"" << s_axi_CRTL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWVALID\" :  \"" << m_axi_gmem_offset_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_AWREADY\" :  \"" << m_axi_gmem_offset_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWADDR\" :  \"" << m_axi_gmem_offset_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWID\" :  \"" << m_axi_gmem_offset_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWLEN\" :  \"" << m_axi_gmem_offset_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWSIZE\" :  \"" << m_axi_gmem_offset_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWBURST\" :  \"" << m_axi_gmem_offset_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWLOCK\" :  \"" << m_axi_gmem_offset_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWCACHE\" :  \"" << m_axi_gmem_offset_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWPROT\" :  \"" << m_axi_gmem_offset_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWQOS\" :  \"" << m_axi_gmem_offset_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWREGION\" :  \"" << m_axi_gmem_offset_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_AWUSER\" :  \"" << m_axi_gmem_offset_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_WVALID\" :  \"" << m_axi_gmem_offset_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_WREADY\" :  \"" << m_axi_gmem_offset_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_WDATA\" :  \"" << m_axi_gmem_offset_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_WSTRB\" :  \"" << m_axi_gmem_offset_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_WLAST\" :  \"" << m_axi_gmem_offset_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_WID\" :  \"" << m_axi_gmem_offset_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_WUSER\" :  \"" << m_axi_gmem_offset_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARVALID\" :  \"" << m_axi_gmem_offset_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_ARREADY\" :  \"" << m_axi_gmem_offset_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARADDR\" :  \"" << m_axi_gmem_offset_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARID\" :  \"" << m_axi_gmem_offset_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARLEN\" :  \"" << m_axi_gmem_offset_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARSIZE\" :  \"" << m_axi_gmem_offset_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARBURST\" :  \"" << m_axi_gmem_offset_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARLOCK\" :  \"" << m_axi_gmem_offset_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARCACHE\" :  \"" << m_axi_gmem_offset_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARPROT\" :  \"" << m_axi_gmem_offset_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARQOS\" :  \"" << m_axi_gmem_offset_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARREGION\" :  \"" << m_axi_gmem_offset_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_ARUSER\" :  \"" << m_axi_gmem_offset_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_RVALID\" :  \"" << m_axi_gmem_offset_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_RREADY\" :  \"" << m_axi_gmem_offset_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_RDATA\" :  \"" << m_axi_gmem_offset_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_RLAST\" :  \"" << m_axi_gmem_offset_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_RID\" :  \"" << m_axi_gmem_offset_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_RUSER\" :  \"" << m_axi_gmem_offset_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_RRESP\" :  \"" << m_axi_gmem_offset_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_BVALID\" :  \"" << m_axi_gmem_offset_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_offset_BREADY\" :  \"" << m_axi_gmem_offset_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_BRESP\" :  \"" << m_axi_gmem_offset_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_BID\" :  \"" << m_axi_gmem_offset_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_offset_BUSER\" :  \"" << m_axi_gmem_offset_BUSER.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

