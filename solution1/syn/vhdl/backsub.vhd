-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity backsub is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_SORTKEY_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_BGMODEL_SORTKEY_ID_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_SORTKEY_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_SORTKEY_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_BGMODEL_SORTKEY_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_SORTKEY_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_SORTKEY_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_SORTKEY_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_WEIGHT_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_BGMODEL_WEIGHT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_WEIGHT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_WEIGHT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_BGMODEL_WEIGHT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_WEIGHT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_WEIGHT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_WEIGHT_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_MEAN_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_BGMODEL_MEAN_ID_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_MEAN_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_MEAN_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_BGMODEL_MEAN_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_MEAN_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_MEAN_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_MEAN_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_VAR_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_BGMODEL_VAR_ID_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_VAR_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_VAR_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_BGMODEL_VAR_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_VAR_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_VAR_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BGMODEL_VAR_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_BGMODEL_SORTKEY_PROT_VALUE : INTEGER := 0;
    C_M_AXI_BGMODEL_SORTKEY_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_BGMODEL_MEAN_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_BGMODEL_VAR_PROT_VALUE : INTEGER := 0;
    C_M_AXI_BGMODEL_MEAN_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_BGMODEL_VAR_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_BGMODEL_VAR_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_BGMODEL_WEIGHT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_BGMODEL_VAR_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_BGMODEL_WEIGHT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_BGMODEL_WEIGHT_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_BGMODEL_SORTKEY_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_BGMODEL_MEAN_PROT_VALUE : INTEGER := 0;
    C_M_AXI_BGMODEL_MEAN_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_BGMODEL_WEIGHT_USER_VALUE : INTEGER := 0;
    C_M_AXI_BGMODEL_SORTKEY_USER_VALUE : INTEGER := 0 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_AWVALID : OUT STD_LOGIC;
    m_axi_bgmodel_sortKey_AWREADY : IN STD_LOGIC;
    m_axi_bgmodel_sortKey_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_ADDR_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_bgmodel_sortKey_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_sortKey_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_sortKey_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_sortKey_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_sortKey_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_sortKey_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_sortKey_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_sortKey_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_AWUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_WVALID : OUT STD_LOGIC;
    m_axi_bgmodel_sortKey_WREADY : IN STD_LOGIC;
    m_axi_bgmodel_sortKey_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_DATA_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_DATA_WIDTH/8-1 downto 0);
    m_axi_bgmodel_sortKey_WLAST : OUT STD_LOGIC;
    m_axi_bgmodel_sortKey_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_WUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_ARVALID : OUT STD_LOGIC;
    m_axi_bgmodel_sortKey_ARREADY : IN STD_LOGIC;
    m_axi_bgmodel_sortKey_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_ADDR_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_bgmodel_sortKey_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_sortKey_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_sortKey_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_sortKey_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_sortKey_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_sortKey_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_sortKey_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_sortKey_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_ARUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_RVALID : IN STD_LOGIC;
    m_axi_bgmodel_sortKey_RREADY : OUT STD_LOGIC;
    m_axi_bgmodel_sortKey_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_DATA_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_RLAST : IN STD_LOGIC;
    m_axi_bgmodel_sortKey_RID : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_RUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_sortKey_BVALID : IN STD_LOGIC;
    m_axi_bgmodel_sortKey_BREADY : OUT STD_LOGIC;
    m_axi_bgmodel_sortKey_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_sortKey_BID : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_sortKey_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_SORTKEY_BUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_AWVALID : OUT STD_LOGIC;
    m_axi_bgmodel_weight_AWREADY : IN STD_LOGIC;
    m_axi_bgmodel_weight_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_ADDR_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_bgmodel_weight_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_weight_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_weight_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_weight_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_weight_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_weight_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_weight_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_weight_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_AWUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_WVALID : OUT STD_LOGIC;
    m_axi_bgmodel_weight_WREADY : IN STD_LOGIC;
    m_axi_bgmodel_weight_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_DATA_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_DATA_WIDTH/8-1 downto 0);
    m_axi_bgmodel_weight_WLAST : OUT STD_LOGIC;
    m_axi_bgmodel_weight_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_WUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_ARVALID : OUT STD_LOGIC;
    m_axi_bgmodel_weight_ARREADY : IN STD_LOGIC;
    m_axi_bgmodel_weight_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_ADDR_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_bgmodel_weight_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_weight_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_weight_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_weight_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_weight_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_weight_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_weight_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_weight_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_ARUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_RVALID : IN STD_LOGIC;
    m_axi_bgmodel_weight_RREADY : OUT STD_LOGIC;
    m_axi_bgmodel_weight_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_DATA_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_RLAST : IN STD_LOGIC;
    m_axi_bgmodel_weight_RID : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_RUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_weight_BVALID : IN STD_LOGIC;
    m_axi_bgmodel_weight_BREADY : OUT STD_LOGIC;
    m_axi_bgmodel_weight_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_weight_BID : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_weight_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_WEIGHT_BUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_AWVALID : OUT STD_LOGIC;
    m_axi_bgmodel_mean_AWREADY : IN STD_LOGIC;
    m_axi_bgmodel_mean_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_ADDR_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_bgmodel_mean_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_mean_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_mean_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_mean_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_mean_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_mean_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_mean_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_mean_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_AWUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_WVALID : OUT STD_LOGIC;
    m_axi_bgmodel_mean_WREADY : IN STD_LOGIC;
    m_axi_bgmodel_mean_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_DATA_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_DATA_WIDTH/8-1 downto 0);
    m_axi_bgmodel_mean_WLAST : OUT STD_LOGIC;
    m_axi_bgmodel_mean_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_WUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_ARVALID : OUT STD_LOGIC;
    m_axi_bgmodel_mean_ARREADY : IN STD_LOGIC;
    m_axi_bgmodel_mean_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_ADDR_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_bgmodel_mean_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_mean_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_mean_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_mean_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_mean_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_mean_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_mean_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_mean_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_ARUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_RVALID : IN STD_LOGIC;
    m_axi_bgmodel_mean_RREADY : OUT STD_LOGIC;
    m_axi_bgmodel_mean_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_DATA_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_RLAST : IN STD_LOGIC;
    m_axi_bgmodel_mean_RID : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_RUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_mean_BVALID : IN STD_LOGIC;
    m_axi_bgmodel_mean_BREADY : OUT STD_LOGIC;
    m_axi_bgmodel_mean_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_mean_BID : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_mean_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_MEAN_BUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_var_AWVALID : OUT STD_LOGIC;
    m_axi_bgmodel_var_AWREADY : IN STD_LOGIC;
    m_axi_bgmodel_var_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_ADDR_WIDTH-1 downto 0);
    m_axi_bgmodel_var_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_var_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_bgmodel_var_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_var_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_var_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_var_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_var_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_var_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_var_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_var_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_AWUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_var_WVALID : OUT STD_LOGIC;
    m_axi_bgmodel_var_WREADY : IN STD_LOGIC;
    m_axi_bgmodel_var_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_DATA_WIDTH-1 downto 0);
    m_axi_bgmodel_var_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_DATA_WIDTH/8-1 downto 0);
    m_axi_bgmodel_var_WLAST : OUT STD_LOGIC;
    m_axi_bgmodel_var_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_var_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_WUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_var_ARVALID : OUT STD_LOGIC;
    m_axi_bgmodel_var_ARREADY : IN STD_LOGIC;
    m_axi_bgmodel_var_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_ADDR_WIDTH-1 downto 0);
    m_axi_bgmodel_var_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_var_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_bgmodel_var_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_var_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_var_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_var_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_var_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_var_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_var_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_var_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_ARUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_var_RVALID : IN STD_LOGIC;
    m_axi_bgmodel_var_RREADY : OUT STD_LOGIC;
    m_axi_bgmodel_var_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_DATA_WIDTH-1 downto 0);
    m_axi_bgmodel_var_RLAST : IN STD_LOGIC;
    m_axi_bgmodel_var_RID : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_var_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_RUSER_WIDTH-1 downto 0);
    m_axi_bgmodel_var_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_var_BVALID : IN STD_LOGIC;
    m_axi_bgmodel_var_BREADY : OUT STD_LOGIC;
    m_axi_bgmodel_var_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_var_BID : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_ID_WIDTH-1 downto 0);
    m_axi_bgmodel_var_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BGMODEL_VAR_BUSER_WIDTH-1 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of backsub is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "backsub,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=35368206,HLS_SYN_TPT=none,HLS_SYN_MEM=144,HLS_SYN_DSP=119,HLS_SYN_FF=24559,HLS_SYN_LUT=35008}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_st50_fsm_49 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_st51_fsm_50 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_st52_fsm_51 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_st53_fsm_52 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_st54_fsm_53 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp0_stg0_fsm_54 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st73_fsm_55 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st74_fsm_56 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st75_fsm_57 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st76_fsm_58 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st77_fsm_59 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st78_fsm_60 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st79_fsm_61 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st80_fsm_62 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp1_stg0_fsm_63 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st98_fsm_64 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st99_fsm_65 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st100_fsm_66 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st101_fsm_67 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg0_fsm_68 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st121_fsm_69 : STD_LOGIC_VECTOR (79 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st122_fsm_70 : STD_LOGIC_VECTOR (79 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st123_fsm_71 : STD_LOGIC_VECTOR (79 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st124_fsm_72 : STD_LOGIC_VECTOR (79 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st125_fsm_73 : STD_LOGIC_VECTOR (79 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp3_stg0_fsm_74 : STD_LOGIC_VECTOR (79 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st146_fsm_75 : STD_LOGIC_VECTOR (79 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st147_fsm_76 : STD_LOGIC_VECTOR (79 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st148_fsm_77 : STD_LOGIC_VECTOR (79 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st149_fsm_78 : STD_LOGIC_VECTOR (79 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st150_fsm_79 : STD_LOGIC_VECTOR (79 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_25800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000100101100000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_3C00 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011110000000000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_1E00 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001111000000000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv18_25800 : STD_LOGIC_VECTOR (17 downto 0) := "100101100000000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv64_4069000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000001101001000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv14_3C00 : STD_LOGIC_VECTOR (13 downto 0) := "11110000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv29_4445 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000100010001000101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv14_780 : STD_LOGIC_VECTOR (13 downto 0) := "00011110000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv13_1E00 : STD_LOGIC_VECTOR (12 downto 0) := "1111000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv27_2223 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010001000100011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv13_3C0 : STD_LOGIC_VECTOR (12 downto 0) := "0001111000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_98 : BOOLEAN;
    signal frame_i : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_o : STD_LOGIC_VECTOR (31 downto 0);
    signal learningRate : STD_LOGIC_VECTOR (31 downto 0);
    signal nframes : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal frame_in_glob_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_in_glob_0_ce0 : STD_LOGIC;
    signal frame_in_glob_0_we0 : STD_LOGIC;
    signal frame_in_glob_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_in_glob_1_ce0 : STD_LOGIC;
    signal frame_in_glob_1_we0 : STD_LOGIC;
    signal frame_in_glob_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_in_glob_2_ce0 : STD_LOGIC;
    signal frame_in_glob_2_we0 : STD_LOGIC;
    signal frame_in_glob_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_in_glob_3_ce0 : STD_LOGIC;
    signal frame_in_glob_3_we0 : STD_LOGIC;
    signal frame_in_glob_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_in_glob_4_ce0 : STD_LOGIC;
    signal frame_in_glob_4_we0 : STD_LOGIC;
    signal frame_in_glob_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_in_glob_5_ce0 : STD_LOGIC;
    signal frame_in_glob_5_we0 : STD_LOGIC;
    signal frame_in_glob_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_in_glob_6_ce0 : STD_LOGIC;
    signal frame_in_glob_6_we0 : STD_LOGIC;
    signal frame_in_glob_6_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_in_glob_7_ce0 : STD_LOGIC;
    signal frame_in_glob_7_we0 : STD_LOGIC;
    signal frame_in_glob_7_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_in_glob_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_out_glob_0_ce0 : STD_LOGIC;
    signal frame_out_glob_0_we0 : STD_LOGIC;
    signal frame_out_glob_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_out_glob_1_ce0 : STD_LOGIC;
    signal frame_out_glob_1_we0 : STD_LOGIC;
    signal frame_out_glob_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_out_glob_2_ce0 : STD_LOGIC;
    signal frame_out_glob_2_we0 : STD_LOGIC;
    signal frame_out_glob_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_out_glob_3_ce0 : STD_LOGIC;
    signal frame_out_glob_3_we0 : STD_LOGIC;
    signal frame_out_glob_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_out_glob_4_ce0 : STD_LOGIC;
    signal frame_out_glob_4_we0 : STD_LOGIC;
    signal frame_out_glob_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_out_glob_5_ce0 : STD_LOGIC;
    signal frame_out_glob_5_we0 : STD_LOGIC;
    signal frame_out_glob_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_out_glob_6_ce0 : STD_LOGIC;
    signal frame_out_glob_6_we0 : STD_LOGIC;
    signal frame_out_glob_6_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_out_glob_7_ce0 : STD_LOGIC;
    signal frame_out_glob_7_we0 : STD_LOGIC;
    signal frame_out_glob_7_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_out_glob_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bgmo_sortKey_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_sortKey_0_ce0 : STD_LOGIC;
    signal bgmo_sortKey_0_we0 : STD_LOGIC;
    signal bgmo_sortKey_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_sortKey_1_ce0 : STD_LOGIC;
    signal bgmo_sortKey_1_we0 : STD_LOGIC;
    signal bgmo_sortKey_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_sortKey_2_ce0 : STD_LOGIC;
    signal bgmo_sortKey_2_we0 : STD_LOGIC;
    signal bgmo_sortKey_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_sortKey_3_ce0 : STD_LOGIC;
    signal bgmo_sortKey_3_we0 : STD_LOGIC;
    signal bgmo_sortKey_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_sortKey_4_ce0 : STD_LOGIC;
    signal bgmo_sortKey_4_we0 : STD_LOGIC;
    signal bgmo_sortKey_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_sortKey_5_ce0 : STD_LOGIC;
    signal bgmo_sortKey_5_we0 : STD_LOGIC;
    signal bgmo_sortKey_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_sortKey_6_ce0 : STD_LOGIC;
    signal bgmo_sortKey_6_we0 : STD_LOGIC;
    signal bgmo_sortKey_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_sortKey_7_ce0 : STD_LOGIC;
    signal bgmo_sortKey_7_we0 : STD_LOGIC;
    signal bgmo_sortKey_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_sortKey_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_weight_0_ce0 : STD_LOGIC;
    signal bgmo_weight_0_we0 : STD_LOGIC;
    signal bgmo_weight_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_weight_1_ce0 : STD_LOGIC;
    signal bgmo_weight_1_we0 : STD_LOGIC;
    signal bgmo_weight_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_weight_2_ce0 : STD_LOGIC;
    signal bgmo_weight_2_we0 : STD_LOGIC;
    signal bgmo_weight_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_weight_3_ce0 : STD_LOGIC;
    signal bgmo_weight_3_we0 : STD_LOGIC;
    signal bgmo_weight_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_weight_4_ce0 : STD_LOGIC;
    signal bgmo_weight_4_we0 : STD_LOGIC;
    signal bgmo_weight_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_weight_5_ce0 : STD_LOGIC;
    signal bgmo_weight_5_we0 : STD_LOGIC;
    signal bgmo_weight_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_weight_6_ce0 : STD_LOGIC;
    signal bgmo_weight_6_we0 : STD_LOGIC;
    signal bgmo_weight_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_weight_7_ce0 : STD_LOGIC;
    signal bgmo_weight_7_we0 : STD_LOGIC;
    signal bgmo_weight_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_weight_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_mean_0_ce0 : STD_LOGIC;
    signal bgmo_mean_0_we0 : STD_LOGIC;
    signal bgmo_mean_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_mean_1_ce0 : STD_LOGIC;
    signal bgmo_mean_1_we0 : STD_LOGIC;
    signal bgmo_mean_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_mean_2_ce0 : STD_LOGIC;
    signal bgmo_mean_2_we0 : STD_LOGIC;
    signal bgmo_mean_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_mean_3_ce0 : STD_LOGIC;
    signal bgmo_mean_3_we0 : STD_LOGIC;
    signal bgmo_mean_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_mean_4_ce0 : STD_LOGIC;
    signal bgmo_mean_4_we0 : STD_LOGIC;
    signal bgmo_mean_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_mean_5_ce0 : STD_LOGIC;
    signal bgmo_mean_5_we0 : STD_LOGIC;
    signal bgmo_mean_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_mean_6_ce0 : STD_LOGIC;
    signal bgmo_mean_6_we0 : STD_LOGIC;
    signal bgmo_mean_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_mean_7_ce0 : STD_LOGIC;
    signal bgmo_mean_7_we0 : STD_LOGIC;
    signal bgmo_mean_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_mean_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_var_0_ce0 : STD_LOGIC;
    signal bgmo_var_0_we0 : STD_LOGIC;
    signal bgmo_var_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_var_1_ce0 : STD_LOGIC;
    signal bgmo_var_1_we0 : STD_LOGIC;
    signal bgmo_var_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_var_2_ce0 : STD_LOGIC;
    signal bgmo_var_2_we0 : STD_LOGIC;
    signal bgmo_var_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_var_3_ce0 : STD_LOGIC;
    signal bgmo_var_3_we0 : STD_LOGIC;
    signal bgmo_var_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_var_4_ce0 : STD_LOGIC;
    signal bgmo_var_4_we0 : STD_LOGIC;
    signal bgmo_var_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_var_5_ce0 : STD_LOGIC;
    signal bgmo_var_5_we0 : STD_LOGIC;
    signal bgmo_var_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_var_6_ce0 : STD_LOGIC;
    signal bgmo_var_6_we0 : STD_LOGIC;
    signal bgmo_var_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal bgmo_var_7_ce0 : STD_LOGIC;
    signal bgmo_var_7_we0 : STD_LOGIC;
    signal bgmo_var_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmo_var_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal backsub_AXILiteS_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal backsub_CRTL_BUS_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_WLAST : STD_LOGIC;
    signal gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal backsub_gmem_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal bgmodel_sortKey_AWVALID : STD_LOGIC;
    signal bgmodel_sortKey_AWREADY : STD_LOGIC;
    signal bgmodel_sortKey_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_sortKey_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_sortKey_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_sortKey_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_sortKey_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_sortKey_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_sortKey_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_sortKey_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_sortKey_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_sortKey_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_WVALID : STD_LOGIC;
    signal bgmodel_sortKey_WREADY : STD_LOGIC;
    signal bgmodel_sortKey_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_sortKey_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_sortKey_WLAST : STD_LOGIC;
    signal bgmodel_sortKey_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_ARVALID : STD_LOGIC;
    signal bgmodel_sortKey_ARREADY : STD_LOGIC;
    signal bgmodel_sortKey_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_sortKey_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_sortKey_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_sortKey_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_sortKey_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_sortKey_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_sortKey_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_sortKey_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_sortKey_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_sortKey_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_RVALID : STD_LOGIC;
    signal bgmodel_sortKey_RREADY : STD_LOGIC;
    signal bgmodel_sortKey_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_sortKey_RLAST : STD_LOGIC;
    signal bgmodel_sortKey_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_sortKey_BVALID : STD_LOGIC;
    signal bgmodel_sortKey_BREADY : STD_LOGIC;
    signal bgmodel_sortKey_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_sortKey_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal backsub_bgmodel_sortKey_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal bgmodel_weight_AWVALID : STD_LOGIC;
    signal bgmodel_weight_AWREADY : STD_LOGIC;
    signal bgmodel_weight_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_weight_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_weight_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_weight_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_weight_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_weight_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_weight_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_weight_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_weight_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_weight_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_weight_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_weight_WVALID : STD_LOGIC;
    signal bgmodel_weight_WREADY : STD_LOGIC;
    signal bgmodel_weight_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_weight_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_weight_WLAST : STD_LOGIC;
    signal bgmodel_weight_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_weight_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_weight_ARVALID : STD_LOGIC;
    signal bgmodel_weight_ARREADY : STD_LOGIC;
    signal bgmodel_weight_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_weight_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_weight_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_weight_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_weight_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_weight_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_weight_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_weight_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_weight_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_weight_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_weight_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_weight_RVALID : STD_LOGIC;
    signal bgmodel_weight_RREADY : STD_LOGIC;
    signal bgmodel_weight_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_weight_RLAST : STD_LOGIC;
    signal bgmodel_weight_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_weight_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_weight_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_weight_BVALID : STD_LOGIC;
    signal bgmodel_weight_BREADY : STD_LOGIC;
    signal bgmodel_weight_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_weight_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_weight_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal backsub_bgmodel_weight_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal bgmodel_mean_AWVALID : STD_LOGIC;
    signal bgmodel_mean_AWREADY : STD_LOGIC;
    signal bgmodel_mean_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_mean_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_mean_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_mean_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_mean_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_mean_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_mean_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_mean_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_mean_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_mean_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_mean_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_mean_WVALID : STD_LOGIC;
    signal bgmodel_mean_WREADY : STD_LOGIC;
    signal bgmodel_mean_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_mean_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_mean_WLAST : STD_LOGIC;
    signal bgmodel_mean_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_mean_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_mean_ARVALID : STD_LOGIC;
    signal bgmodel_mean_ARREADY : STD_LOGIC;
    signal bgmodel_mean_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_mean_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_mean_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_mean_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_mean_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_mean_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_mean_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_mean_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_mean_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_mean_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_mean_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_mean_RVALID : STD_LOGIC;
    signal bgmodel_mean_RREADY : STD_LOGIC;
    signal bgmodel_mean_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_mean_RLAST : STD_LOGIC;
    signal bgmodel_mean_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_mean_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_mean_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_mean_BVALID : STD_LOGIC;
    signal bgmodel_mean_BREADY : STD_LOGIC;
    signal bgmodel_mean_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_mean_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_mean_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal backsub_bgmodel_mean_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal bgmodel_var_AWVALID : STD_LOGIC;
    signal bgmodel_var_AWREADY : STD_LOGIC;
    signal bgmodel_var_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_var_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_var_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_var_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_var_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_var_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_var_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_var_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_var_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_var_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_var_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_var_WVALID : STD_LOGIC;
    signal bgmodel_var_WREADY : STD_LOGIC;
    signal bgmodel_var_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_var_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_var_WLAST : STD_LOGIC;
    signal bgmodel_var_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_var_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_var_ARVALID : STD_LOGIC;
    signal bgmodel_var_ARREADY : STD_LOGIC;
    signal bgmodel_var_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_var_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_var_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_var_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_var_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_var_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_var_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_var_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal bgmodel_var_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_var_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_var_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_var_RVALID : STD_LOGIC;
    signal bgmodel_var_RREADY : STD_LOGIC;
    signal bgmodel_var_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_var_RLAST : STD_LOGIC;
    signal bgmodel_var_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_var_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_var_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_var_BVALID : STD_LOGIC;
    signal bgmodel_var_BREADY : STD_LOGIC;
    signal bgmodel_var_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal bgmodel_var_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_var_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal backsub_bgmodel_var_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal indvar2_reg_1320 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_54 : STD_LOGIC;
    signal ap_sig_bdd_1220 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal exitcond5_reg_2385 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_1266 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal phi_mul_reg_1332 : STD_LOGIC_VECTOR (28 downto 0);
    signal indvar_reg_1343 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_63 : STD_LOGIC;
    signal ap_sig_bdd_1299 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it14 : STD_LOGIC := '0';
    signal exitcond6_reg_2462 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_1336 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it16 : STD_LOGIC := '0';
    signal phi_mul1_reg_1355 : STD_LOGIC_VECTOR (26 downto 0);
    signal indvar1_reg_1377 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_pp2_stg0_fsm_68 : STD_LOGIC;
    signal ap_sig_bdd_1368 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it17 : STD_LOGIC := '0';
    signal exitcond4_reg_2529 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_gmem_WREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp2_it18 : STD_LOGIC := '0';
    signal phi_mul2_reg_1389 : STD_LOGIC_VECTOR (26 downto 0);
    signal indvar3_reg_1400 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_pp3_stg0_fsm_74 : STD_LOGIC;
    signal ap_sig_bdd_1441 : BOOLEAN;
    signal ap_reg_ppiten_pp3_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it18 : STD_LOGIC := '0';
    signal exitcond7_reg_2593 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_bgmodel_sortKey_WREADY : STD_LOGIC;
    signal ap_sig_ioackin_bgmodel_weight_WREADY : STD_LOGIC;
    signal ap_sig_ioackin_bgmodel_mean_WREADY : STD_LOGIC;
    signal ap_sig_ioackin_bgmodel_var_WREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp3_it19 : STD_LOGIC := '0';
    signal phi_mul3_reg_1412 : STD_LOGIC_VECTOR (28 downto 0);
    signal learningRate_read_reg_2255 : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_o_read_reg_2262 : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_i_read_reg_2267 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_reg_2272 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_cast_fu_1552_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_1_cast_reg_2277 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_1539 : BOOLEAN;
    signal or_cond4_fu_1608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_bgmodel_weight_AWREADY : STD_LOGIC;
    signal ap_sig_ioackin_bgmodel_sortKey_AWREADY : STD_LOGIC;
    signal ap_sig_ioackin_bgmodel_mean_AWREADY : STD_LOGIC;
    signal ap_sig_ioackin_bgmodel_var_AWREADY : STD_LOGIC;
    signal tmp_2_cast_fu_1555_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_2_cast_reg_2282 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_fu_1534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_2287 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_97_fu_1597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_2297 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2302 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1_fu_1620_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_1577 : BOOLEAN;
    signal exitcond2_fu_1614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_1626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_reg_2314 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_1597 : BOOLEAN;
    signal ap_sig_bdd_1612 : BOOLEAN;
    signal tmp_46_fu_1631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_reg_2319 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_1622 : BOOLEAN;
    signal or_cond_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_2324 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_2328 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1660_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_reg_2333 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_1637 : BOOLEAN;
    signal grp_fu_1544_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_reg_2338 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st45_fsm_44 : STD_LOGIC;
    signal ap_sig_bdd_1646 : BOOLEAN;
    signal learningRate_assign_fu_1530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal learningRate_assign_reg_2343 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st46_fsm_45 : STD_LOGIC;
    signal ap_sig_bdd_1655 : BOOLEAN;
    signal x_4_fu_1673_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_4_reg_2351 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st47_fsm_46 : STD_LOGIC;
    signal ap_sig_bdd_1664 : BOOLEAN;
    signal tmp_54_fu_1703_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_54_reg_2356 : STD_LOGIC_VECTOR (18 downto 0);
    signal exitcond1_fu_1667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bgmodel_sortKey_addr_reg_2361 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st48_fsm_47 : STD_LOGIC;
    signal ap_sig_bdd_1678 : BOOLEAN;
    signal ap_sig_ioackin_bgmodel_sortKey_ARREADY : STD_LOGIC;
    signal ap_sig_ioackin_bgmodel_weight_ARREADY : STD_LOGIC;
    signal ap_sig_ioackin_bgmodel_mean_ARREADY : STD_LOGIC;
    signal ap_sig_ioackin_bgmodel_var_ARREADY : STD_LOGIC;
    signal bgmodel_weight_addr_reg_2367 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_mean_addr_reg_2373 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_var_addr_reg_2379 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond5_fu_1744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_2385_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next2_fu_1750_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_next2_reg_2389 : STD_LOGIC_VECTOR (13 downto 0);
    signal next_mul_fu_1756_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_136_reg_2399 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it5 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it7 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it8 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it9 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it10 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it11 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it12 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it13 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it14 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it15 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 : STD_LOGIC_VECTOR (3 downto 0);
    signal bgmodel_sortKey_addr_read_reg_2403 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_weight_addr_read_reg_2415 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_mean_addr_read_reg_2427 : STD_LOGIC_VECTOR (31 downto 0);
    signal bgmodel_var_addr_read_reg_2439 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_133_fu_1848_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_133_reg_2451 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_sig_cseq_ST_st73_fsm_55 : STD_LOGIC;
    signal ap_sig_bdd_1760 : BOOLEAN;
    signal gmem_addr_reg_2456 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond6_fu_1867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_2462_pp1_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next_fu_1873_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next_reg_2466 : STD_LOGIC_VECTOR (12 downto 0);
    signal next_mul1_fu_1879_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_137_reg_2476 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it5 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it7 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it8 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it9 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it10 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it11 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it12 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it13 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it14 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_addr_read_reg_2480 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_1_fu_1919_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_1_reg_2495 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st98_fsm_64 : STD_LOGIC;
    signal ap_sig_bdd_1817 : BOOLEAN;
    signal tmp_59_fu_1953_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_59_reg_2500 : STD_LOGIC_VECTOR (13 downto 0);
    signal exitcond_fu_1913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1983_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_61_reg_2505 : STD_LOGIC_VECTOR (14 downto 0);
    signal gmem_addr_1_reg_2510 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_2006_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_reg_2515 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st99_fsm_65 : STD_LOGIC;
    signal ap_sig_bdd_1837 : BOOLEAN;
    signal tmp_62_fu_2015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_reg_2521 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond4_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_2529_pp2_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next1_fu_2029_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next1_reg_2533 : STD_LOGIC_VECTOR (12 downto 0);
    signal next_mul2_fu_2035_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_141_reg_2543 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it5 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it7 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it8 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it9 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it10 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it11 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it12 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it13 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it14 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it15 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_141_reg_2543_pp2_it16 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_102_fu_2072_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_102_reg_2588 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond7_fu_2094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_2593_pp3_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next3_fu_2100_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_next3_reg_2597 : STD_LOGIC_VECTOR (13 downto 0);
    signal next_mul3_fu_2106_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_142_reg_2607 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it5 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it7 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it8 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it9 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it10 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it11 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it12 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it13 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it14 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it15 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it16 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_142_reg_2607_pp3_it17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_2167_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_reg_2772 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_2189_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_reg_2777 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_fu_2211_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_reg_2782 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_106_fu_2233_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_106_reg_2787 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st54_fsm_53 : STD_LOGIC;
    signal ap_sig_bdd_2038 : BOOLEAN;
    signal ap_sig_cseq_ST_st80_fsm_62 : STD_LOGIC;
    signal ap_sig_bdd_2048 : BOOLEAN;
    signal ap_sig_cseq_ST_st101_fsm_67 : STD_LOGIC;
    signal ap_sig_bdd_2058 : BOOLEAN;
    signal ap_sig_ioackin_gmem_AWREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st125_fsm_73 : STD_LOGIC;
    signal ap_sig_bdd_2072 : BOOLEAN;
    signal grp_backsub_process_fu_1423_ap_start : STD_LOGIC;
    signal grp_backsub_process_fu_1423_ap_done : STD_LOGIC;
    signal grp_backsub_process_fu_1423_ap_idle : STD_LOGIC;
    signal grp_backsub_process_fu_1423_ap_ready : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_in_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_0_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_in_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_1_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_in_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_2_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_in_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_3_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_in_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_4_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_in_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_5_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_in_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_6_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_in_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_in_7_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_in_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_tmp_64 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_0_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_0_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_1_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_1_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_2_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_2_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_3_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_3_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_4_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_4_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_5_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_5_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_6_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_6_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_6_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backsub_process_fu_1423_frame_out_7_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_7_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_frame_out_7_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_process_fu_1423_tmp_641 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_backsub_process_fu_1423_learningRate : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_sortKey_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_sortKey_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_0_sortKey_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_0_sortKey_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_sortKey_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_sortKey_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_sortKey_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_1_sortKey_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_1_sortKey_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_sortKey_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_sortKey_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_sortKey_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_2_sortKey_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_2_sortKey_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_sortKey_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_sortKey_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_sortKey_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_3_sortKey_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_3_sortKey_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_sortKey_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_sortKey_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_sortKey_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_4_sortKey_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_4_sortKey_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_sortKey_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_sortKey_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_sortKey_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_5_sortKey_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_5_sortKey_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_sortKey_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_sortKey_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_sortKey_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_6_sortKey_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_6_sortKey_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_sortKey_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_sortKey_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_sortKey_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_7_sortKey_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_7_sortKey_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_sortKey_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_tmp_66 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_weight_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_weight_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_0_weight_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_0_weight_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_weight_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_weight_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_1_weight_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_1_weight_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_weight_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_weight_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_2_weight_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_2_weight_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_weight_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_weight_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_3_weight_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_3_weight_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_weight_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_weight_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_4_weight_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_4_weight_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_weight_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_weight_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_5_weight_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_5_weight_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_weight_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_weight_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_6_weight_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_6_weight_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_weight_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_weight_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_7_weight_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_7_weight_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_tmp_662 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_mean_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_mean_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_0_mean_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_0_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_mean_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_mean_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_1_mean_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_1_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_mean_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_mean_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_2_mean_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_2_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_mean_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_mean_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_3_mean_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_3_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_mean_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_mean_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_4_mean_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_4_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_mean_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_mean_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_5_mean_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_5_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_mean_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_mean_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_6_mean_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_6_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_mean_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_mean_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_7_mean_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_7_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_tmp_663 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_var_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_var_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_0_var_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_0_var_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_0_var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_var_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_var_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_1_var_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_1_var_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_1_var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_var_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_var_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_2_var_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_2_var_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_2_var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_var_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_var_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_3_var_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_3_var_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_3_var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_var_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_var_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_4_var_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_4_var_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_4_var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_var_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_var_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_5_var_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_5_var_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_5_var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_var_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_var_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_6_var_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_6_var_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_6_var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_var_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_var_ce0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_7_var_we0 : STD_LOGIC;
    signal grp_backsub_process_fu_1423_bgmodel_7_var_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_bgmodel_7_var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_process_fu_1423_tmp_664 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_reg_1277 : STD_LOGIC_VECTOR (17 downto 0);
    signal nframes_load_1_reg_1288 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_phi_fu_1302_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_reg_1299 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_reg_1308 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st150_fsm_79 : STD_LOGIC;
    signal ap_sig_bdd_2336 : BOOLEAN;
    signal ap_sig_bdd_2341 : BOOLEAN;
    signal indvar2_phi_fu_1324_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_phi_fu_1347_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_reg_1366 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st100_fsm_66 : STD_LOGIC;
    signal ap_sig_bdd_2369 : BOOLEAN;
    signal indvar1_phi_fu_1381_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar3_phi_fu_1404_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_backsub_process_fu_1423_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal newIndex28_fu_1778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex30_fu_1901_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex31_fu_2057_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex33_fu_2128_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_131_fu_1712_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_135_fu_1857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_139_fu_1993_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_bgmodel_weight_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_weight_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_weight_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_sortKey_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_sortKey_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_sortKey_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_mean_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_mean_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_mean_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_var_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_var_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_bgmodel_var_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_gmem_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_gmem_ARREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st74_fsm_56 : STD_LOGIC;
    signal ap_sig_bdd_2573 : BOOLEAN;
    signal ap_reg_ioackin_gmem_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_gmem_WREADY : STD_LOGIC := '0';
    signal grp_fu_1537_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1537_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal learningRate_to_int_fu_1568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_96_fu_1571_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_129_fu_1581_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_1591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_1585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl_fu_1679_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl2_fu_1691_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_cast_fu_1687_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl2_cast_fu_1699_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_130_fu_1709_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1772_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1772_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl3_fu_1814_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl4_fu_1826_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl3_cast_fu_1822_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl4_cast_fu_1834_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_55_fu_1838_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_132_fu_1844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_134_fu_1852_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_1895_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1895_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_140_fu_1925_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl5_fu_1929_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl6_fu_1941_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl5_cast_fu_1937_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl6_cast_fu_1949_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl7_fu_1959_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl8_fu_1971_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl7_cast_fu_1967_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl8_cast_fu_1979_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_138_fu_1989_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_61_cast_fu_2003_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_cast_fu_2012_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2051_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2051_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_102_fu_2072_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2122_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2122_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal arrayNo29_cast_fu_2164_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1537_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1544_ce : STD_LOGIC;
    signal grp_fu_1549_ce : STD_LOGIC;
    signal grp_fu_1772_ce : STD_LOGIC;
    signal grp_fu_1895_ce : STD_LOGIC;
    signal grp_fu_2051_ce : STD_LOGIC;
    signal grp_fu_2122_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_sig_bdd_2592 : BOOLEAN;
    signal ap_sig_bdd_2447 : BOOLEAN;
    signal ap_sig_bdd_2471 : BOOLEAN;
    signal ap_sig_bdd_2457 : BOOLEAN;
    signal ap_sig_bdd_2477 : BOOLEAN;

    component backsub_process IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        frame_in_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_0_ce0 : OUT STD_LOGIC;
        frame_in_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_in_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_1_ce0 : OUT STD_LOGIC;
        frame_in_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_in_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_2_ce0 : OUT STD_LOGIC;
        frame_in_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_in_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_3_ce0 : OUT STD_LOGIC;
        frame_in_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_in_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_4_ce0 : OUT STD_LOGIC;
        frame_in_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_in_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_5_ce0 : OUT STD_LOGIC;
        frame_in_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_in_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_6_ce0 : OUT STD_LOGIC;
        frame_in_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_in_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_7_ce0 : OUT STD_LOGIC;
        frame_in_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        tmp_64 : IN STD_LOGIC_VECTOR (63 downto 0);
        frame_out_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_0_ce0 : OUT STD_LOGIC;
        frame_out_0_we0 : OUT STD_LOGIC;
        frame_out_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_out_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_1_ce0 : OUT STD_LOGIC;
        frame_out_1_we0 : OUT STD_LOGIC;
        frame_out_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_out_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_2_ce0 : OUT STD_LOGIC;
        frame_out_2_we0 : OUT STD_LOGIC;
        frame_out_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_out_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_3_ce0 : OUT STD_LOGIC;
        frame_out_3_we0 : OUT STD_LOGIC;
        frame_out_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_out_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_4_ce0 : OUT STD_LOGIC;
        frame_out_4_we0 : OUT STD_LOGIC;
        frame_out_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_out_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_5_ce0 : OUT STD_LOGIC;
        frame_out_5_we0 : OUT STD_LOGIC;
        frame_out_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_out_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_6_ce0 : OUT STD_LOGIC;
        frame_out_6_we0 : OUT STD_LOGIC;
        frame_out_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_out_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_7_ce0 : OUT STD_LOGIC;
        frame_out_7_we0 : OUT STD_LOGIC;
        frame_out_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tmp_641 : IN STD_LOGIC_VECTOR (63 downto 0);
        learningRate : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_0_sortKey_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_0_sortKey_ce0 : OUT STD_LOGIC;
        bgmodel_0_sortKey_we0 : OUT STD_LOGIC;
        bgmodel_0_sortKey_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_0_sortKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_1_sortKey_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_1_sortKey_ce0 : OUT STD_LOGIC;
        bgmodel_1_sortKey_we0 : OUT STD_LOGIC;
        bgmodel_1_sortKey_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_1_sortKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_2_sortKey_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_2_sortKey_ce0 : OUT STD_LOGIC;
        bgmodel_2_sortKey_we0 : OUT STD_LOGIC;
        bgmodel_2_sortKey_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_2_sortKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_3_sortKey_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_3_sortKey_ce0 : OUT STD_LOGIC;
        bgmodel_3_sortKey_we0 : OUT STD_LOGIC;
        bgmodel_3_sortKey_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_3_sortKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_4_sortKey_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_4_sortKey_ce0 : OUT STD_LOGIC;
        bgmodel_4_sortKey_we0 : OUT STD_LOGIC;
        bgmodel_4_sortKey_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_4_sortKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_5_sortKey_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_5_sortKey_ce0 : OUT STD_LOGIC;
        bgmodel_5_sortKey_we0 : OUT STD_LOGIC;
        bgmodel_5_sortKey_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_5_sortKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_6_sortKey_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_6_sortKey_ce0 : OUT STD_LOGIC;
        bgmodel_6_sortKey_we0 : OUT STD_LOGIC;
        bgmodel_6_sortKey_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_6_sortKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_7_sortKey_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_7_sortKey_ce0 : OUT STD_LOGIC;
        bgmodel_7_sortKey_we0 : OUT STD_LOGIC;
        bgmodel_7_sortKey_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_7_sortKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_66 : IN STD_LOGIC_VECTOR (63 downto 0);
        bgmodel_0_weight_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_0_weight_ce0 : OUT STD_LOGIC;
        bgmodel_0_weight_we0 : OUT STD_LOGIC;
        bgmodel_0_weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_0_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_1_weight_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_1_weight_ce0 : OUT STD_LOGIC;
        bgmodel_1_weight_we0 : OUT STD_LOGIC;
        bgmodel_1_weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_1_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_2_weight_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_2_weight_ce0 : OUT STD_LOGIC;
        bgmodel_2_weight_we0 : OUT STD_LOGIC;
        bgmodel_2_weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_2_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_3_weight_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_3_weight_ce0 : OUT STD_LOGIC;
        bgmodel_3_weight_we0 : OUT STD_LOGIC;
        bgmodel_3_weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_3_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_4_weight_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_4_weight_ce0 : OUT STD_LOGIC;
        bgmodel_4_weight_we0 : OUT STD_LOGIC;
        bgmodel_4_weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_4_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_5_weight_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_5_weight_ce0 : OUT STD_LOGIC;
        bgmodel_5_weight_we0 : OUT STD_LOGIC;
        bgmodel_5_weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_5_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_6_weight_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_6_weight_ce0 : OUT STD_LOGIC;
        bgmodel_6_weight_we0 : OUT STD_LOGIC;
        bgmodel_6_weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_6_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_7_weight_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_7_weight_ce0 : OUT STD_LOGIC;
        bgmodel_7_weight_we0 : OUT STD_LOGIC;
        bgmodel_7_weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_7_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_662 : IN STD_LOGIC_VECTOR (63 downto 0);
        bgmodel_0_mean_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_0_mean_ce0 : OUT STD_LOGIC;
        bgmodel_0_mean_we0 : OUT STD_LOGIC;
        bgmodel_0_mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_0_mean_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_1_mean_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_1_mean_ce0 : OUT STD_LOGIC;
        bgmodel_1_mean_we0 : OUT STD_LOGIC;
        bgmodel_1_mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_1_mean_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_2_mean_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_2_mean_ce0 : OUT STD_LOGIC;
        bgmodel_2_mean_we0 : OUT STD_LOGIC;
        bgmodel_2_mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_2_mean_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_3_mean_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_3_mean_ce0 : OUT STD_LOGIC;
        bgmodel_3_mean_we0 : OUT STD_LOGIC;
        bgmodel_3_mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_3_mean_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_4_mean_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_4_mean_ce0 : OUT STD_LOGIC;
        bgmodel_4_mean_we0 : OUT STD_LOGIC;
        bgmodel_4_mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_4_mean_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_5_mean_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_5_mean_ce0 : OUT STD_LOGIC;
        bgmodel_5_mean_we0 : OUT STD_LOGIC;
        bgmodel_5_mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_5_mean_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_6_mean_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_6_mean_ce0 : OUT STD_LOGIC;
        bgmodel_6_mean_we0 : OUT STD_LOGIC;
        bgmodel_6_mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_6_mean_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_7_mean_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_7_mean_ce0 : OUT STD_LOGIC;
        bgmodel_7_mean_we0 : OUT STD_LOGIC;
        bgmodel_7_mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_7_mean_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_663 : IN STD_LOGIC_VECTOR (63 downto 0);
        bgmodel_0_var_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_0_var_ce0 : OUT STD_LOGIC;
        bgmodel_0_var_we0 : OUT STD_LOGIC;
        bgmodel_0_var_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_0_var_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_1_var_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_1_var_ce0 : OUT STD_LOGIC;
        bgmodel_1_var_we0 : OUT STD_LOGIC;
        bgmodel_1_var_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_1_var_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_2_var_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_2_var_ce0 : OUT STD_LOGIC;
        bgmodel_2_var_we0 : OUT STD_LOGIC;
        bgmodel_2_var_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_2_var_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_3_var_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_3_var_ce0 : OUT STD_LOGIC;
        bgmodel_3_var_we0 : OUT STD_LOGIC;
        bgmodel_3_var_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_3_var_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_4_var_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_4_var_ce0 : OUT STD_LOGIC;
        bgmodel_4_var_we0 : OUT STD_LOGIC;
        bgmodel_4_var_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_4_var_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_5_var_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_5_var_ce0 : OUT STD_LOGIC;
        bgmodel_5_var_we0 : OUT STD_LOGIC;
        bgmodel_5_var_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_5_var_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_6_var_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_6_var_ce0 : OUT STD_LOGIC;
        bgmodel_6_var_we0 : OUT STD_LOGIC;
        bgmodel_6_var_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_6_var_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_7_var_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        bgmodel_7_var_ce0 : OUT STD_LOGIC;
        bgmodel_7_var_we0 : OUT STD_LOGIC;
        bgmodel_7_var_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_7_var_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_664 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component backsub_fptrunc_64ns_32_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_fpext_32ns_64_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component backsub_fcmp_32ns_32ns_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component backsub_ddiv_64ns_64ns_64_31 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component backsub_sitodp_32ns_64_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component backsub_urem_14ns_12ns_14_18 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component backsub_urem_13ns_11ns_13_17 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component backsub_mux_8to1_sel32_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component backsub_mux_8to1_sel32_32_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_frame_in_glob_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component backsub_bgmo_sortKey_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        frame_i : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_o : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_CRTL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        learningRate : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_gmem_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component backsub_bgmodel_sortKey_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component backsub_bgmodel_weight_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component backsub_bgmodel_mean_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component backsub_bgmodel_var_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    frame_in_glob_0_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_in_glob_0_address0,
        ce0 => frame_in_glob_0_ce0,
        we0 => frame_in_glob_0_we0,
        d0 => frame_in_glob_0_d0,
        q0 => frame_in_glob_0_q0);

    frame_in_glob_1_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_in_glob_1_address0,
        ce0 => frame_in_glob_1_ce0,
        we0 => frame_in_glob_1_we0,
        d0 => frame_in_glob_1_d0,
        q0 => frame_in_glob_1_q0);

    frame_in_glob_2_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_in_glob_2_address0,
        ce0 => frame_in_glob_2_ce0,
        we0 => frame_in_glob_2_we0,
        d0 => frame_in_glob_2_d0,
        q0 => frame_in_glob_2_q0);

    frame_in_glob_3_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_in_glob_3_address0,
        ce0 => frame_in_glob_3_ce0,
        we0 => frame_in_glob_3_we0,
        d0 => frame_in_glob_3_d0,
        q0 => frame_in_glob_3_q0);

    frame_in_glob_4_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_in_glob_4_address0,
        ce0 => frame_in_glob_4_ce0,
        we0 => frame_in_glob_4_we0,
        d0 => frame_in_glob_4_d0,
        q0 => frame_in_glob_4_q0);

    frame_in_glob_5_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_in_glob_5_address0,
        ce0 => frame_in_glob_5_ce0,
        we0 => frame_in_glob_5_we0,
        d0 => frame_in_glob_5_d0,
        q0 => frame_in_glob_5_q0);

    frame_in_glob_6_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_in_glob_6_address0,
        ce0 => frame_in_glob_6_ce0,
        we0 => frame_in_glob_6_we0,
        d0 => frame_in_glob_6_d0,
        q0 => frame_in_glob_6_q0);

    frame_in_glob_7_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_in_glob_7_address0,
        ce0 => frame_in_glob_7_ce0,
        we0 => frame_in_glob_7_we0,
        d0 => frame_in_glob_7_d0,
        q0 => frame_in_glob_7_q0);

    frame_out_glob_0_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_out_glob_0_address0,
        ce0 => frame_out_glob_0_ce0,
        we0 => frame_out_glob_0_we0,
        d0 => frame_out_glob_0_d0,
        q0 => frame_out_glob_0_q0);

    frame_out_glob_1_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_out_glob_1_address0,
        ce0 => frame_out_glob_1_ce0,
        we0 => frame_out_glob_1_we0,
        d0 => frame_out_glob_1_d0,
        q0 => frame_out_glob_1_q0);

    frame_out_glob_2_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_out_glob_2_address0,
        ce0 => frame_out_glob_2_ce0,
        we0 => frame_out_glob_2_we0,
        d0 => frame_out_glob_2_d0,
        q0 => frame_out_glob_2_q0);

    frame_out_glob_3_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_out_glob_3_address0,
        ce0 => frame_out_glob_3_ce0,
        we0 => frame_out_glob_3_we0,
        d0 => frame_out_glob_3_d0,
        q0 => frame_out_glob_3_q0);

    frame_out_glob_4_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_out_glob_4_address0,
        ce0 => frame_out_glob_4_ce0,
        we0 => frame_out_glob_4_we0,
        d0 => frame_out_glob_4_d0,
        q0 => frame_out_glob_4_q0);

    frame_out_glob_5_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_out_glob_5_address0,
        ce0 => frame_out_glob_5_ce0,
        we0 => frame_out_glob_5_we0,
        d0 => frame_out_glob_5_d0,
        q0 => frame_out_glob_5_q0);

    frame_out_glob_6_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_out_glob_6_address0,
        ce0 => frame_out_glob_6_ce0,
        we0 => frame_out_glob_6_we0,
        d0 => frame_out_glob_6_d0,
        q0 => frame_out_glob_6_q0);

    frame_out_glob_7_U : component backsub_frame_in_glob_0
    generic map (
        DataWidth => 8,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frame_out_glob_7_address0,
        ce0 => frame_out_glob_7_ce0,
        we0 => frame_out_glob_7_we0,
        d0 => frame_out_glob_7_d0,
        q0 => frame_out_glob_7_q0);

    bgmo_sortKey_0_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_sortKey_0_address0,
        ce0 => bgmo_sortKey_0_ce0,
        we0 => bgmo_sortKey_0_we0,
        d0 => bgmo_sortKey_0_d0,
        q0 => bgmo_sortKey_0_q0);

    bgmo_sortKey_1_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_sortKey_1_address0,
        ce0 => bgmo_sortKey_1_ce0,
        we0 => bgmo_sortKey_1_we0,
        d0 => bgmo_sortKey_1_d0,
        q0 => bgmo_sortKey_1_q0);

    bgmo_sortKey_2_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_sortKey_2_address0,
        ce0 => bgmo_sortKey_2_ce0,
        we0 => bgmo_sortKey_2_we0,
        d0 => bgmo_sortKey_2_d0,
        q0 => bgmo_sortKey_2_q0);

    bgmo_sortKey_3_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_sortKey_3_address0,
        ce0 => bgmo_sortKey_3_ce0,
        we0 => bgmo_sortKey_3_we0,
        d0 => bgmo_sortKey_3_d0,
        q0 => bgmo_sortKey_3_q0);

    bgmo_sortKey_4_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_sortKey_4_address0,
        ce0 => bgmo_sortKey_4_ce0,
        we0 => bgmo_sortKey_4_we0,
        d0 => bgmo_sortKey_4_d0,
        q0 => bgmo_sortKey_4_q0);

    bgmo_sortKey_5_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_sortKey_5_address0,
        ce0 => bgmo_sortKey_5_ce0,
        we0 => bgmo_sortKey_5_we0,
        d0 => bgmo_sortKey_5_d0,
        q0 => bgmo_sortKey_5_q0);

    bgmo_sortKey_6_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_sortKey_6_address0,
        ce0 => bgmo_sortKey_6_ce0,
        we0 => bgmo_sortKey_6_we0,
        d0 => bgmo_sortKey_6_d0,
        q0 => bgmo_sortKey_6_q0);

    bgmo_sortKey_7_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_sortKey_7_address0,
        ce0 => bgmo_sortKey_7_ce0,
        we0 => bgmo_sortKey_7_we0,
        d0 => bgmo_sortKey_7_d0,
        q0 => bgmo_sortKey_7_q0);

    bgmo_weight_0_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_weight_0_address0,
        ce0 => bgmo_weight_0_ce0,
        we0 => bgmo_weight_0_we0,
        d0 => bgmo_weight_0_d0,
        q0 => bgmo_weight_0_q0);

    bgmo_weight_1_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_weight_1_address0,
        ce0 => bgmo_weight_1_ce0,
        we0 => bgmo_weight_1_we0,
        d0 => bgmo_weight_1_d0,
        q0 => bgmo_weight_1_q0);

    bgmo_weight_2_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_weight_2_address0,
        ce0 => bgmo_weight_2_ce0,
        we0 => bgmo_weight_2_we0,
        d0 => bgmo_weight_2_d0,
        q0 => bgmo_weight_2_q0);

    bgmo_weight_3_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_weight_3_address0,
        ce0 => bgmo_weight_3_ce0,
        we0 => bgmo_weight_3_we0,
        d0 => bgmo_weight_3_d0,
        q0 => bgmo_weight_3_q0);

    bgmo_weight_4_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_weight_4_address0,
        ce0 => bgmo_weight_4_ce0,
        we0 => bgmo_weight_4_we0,
        d0 => bgmo_weight_4_d0,
        q0 => bgmo_weight_4_q0);

    bgmo_weight_5_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_weight_5_address0,
        ce0 => bgmo_weight_5_ce0,
        we0 => bgmo_weight_5_we0,
        d0 => bgmo_weight_5_d0,
        q0 => bgmo_weight_5_q0);

    bgmo_weight_6_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_weight_6_address0,
        ce0 => bgmo_weight_6_ce0,
        we0 => bgmo_weight_6_we0,
        d0 => bgmo_weight_6_d0,
        q0 => bgmo_weight_6_q0);

    bgmo_weight_7_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_weight_7_address0,
        ce0 => bgmo_weight_7_ce0,
        we0 => bgmo_weight_7_we0,
        d0 => bgmo_weight_7_d0,
        q0 => bgmo_weight_7_q0);

    bgmo_mean_0_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_mean_0_address0,
        ce0 => bgmo_mean_0_ce0,
        we0 => bgmo_mean_0_we0,
        d0 => bgmo_mean_0_d0,
        q0 => bgmo_mean_0_q0);

    bgmo_mean_1_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_mean_1_address0,
        ce0 => bgmo_mean_1_ce0,
        we0 => bgmo_mean_1_we0,
        d0 => bgmo_mean_1_d0,
        q0 => bgmo_mean_1_q0);

    bgmo_mean_2_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_mean_2_address0,
        ce0 => bgmo_mean_2_ce0,
        we0 => bgmo_mean_2_we0,
        d0 => bgmo_mean_2_d0,
        q0 => bgmo_mean_2_q0);

    bgmo_mean_3_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_mean_3_address0,
        ce0 => bgmo_mean_3_ce0,
        we0 => bgmo_mean_3_we0,
        d0 => bgmo_mean_3_d0,
        q0 => bgmo_mean_3_q0);

    bgmo_mean_4_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_mean_4_address0,
        ce0 => bgmo_mean_4_ce0,
        we0 => bgmo_mean_4_we0,
        d0 => bgmo_mean_4_d0,
        q0 => bgmo_mean_4_q0);

    bgmo_mean_5_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_mean_5_address0,
        ce0 => bgmo_mean_5_ce0,
        we0 => bgmo_mean_5_we0,
        d0 => bgmo_mean_5_d0,
        q0 => bgmo_mean_5_q0);

    bgmo_mean_6_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_mean_6_address0,
        ce0 => bgmo_mean_6_ce0,
        we0 => bgmo_mean_6_we0,
        d0 => bgmo_mean_6_d0,
        q0 => bgmo_mean_6_q0);

    bgmo_mean_7_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_mean_7_address0,
        ce0 => bgmo_mean_7_ce0,
        we0 => bgmo_mean_7_we0,
        d0 => bgmo_mean_7_d0,
        q0 => bgmo_mean_7_q0);

    bgmo_var_0_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_var_0_address0,
        ce0 => bgmo_var_0_ce0,
        we0 => bgmo_var_0_we0,
        d0 => bgmo_var_0_d0,
        q0 => bgmo_var_0_q0);

    bgmo_var_1_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_var_1_address0,
        ce0 => bgmo_var_1_ce0,
        we0 => bgmo_var_1_we0,
        d0 => bgmo_var_1_d0,
        q0 => bgmo_var_1_q0);

    bgmo_var_2_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_var_2_address0,
        ce0 => bgmo_var_2_ce0,
        we0 => bgmo_var_2_we0,
        d0 => bgmo_var_2_d0,
        q0 => bgmo_var_2_q0);

    bgmo_var_3_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_var_3_address0,
        ce0 => bgmo_var_3_ce0,
        we0 => bgmo_var_3_we0,
        d0 => bgmo_var_3_d0,
        q0 => bgmo_var_3_q0);

    bgmo_var_4_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_var_4_address0,
        ce0 => bgmo_var_4_ce0,
        we0 => bgmo_var_4_we0,
        d0 => bgmo_var_4_d0,
        q0 => bgmo_var_4_q0);

    bgmo_var_5_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_var_5_address0,
        ce0 => bgmo_var_5_ce0,
        we0 => bgmo_var_5_we0,
        d0 => bgmo_var_5_d0,
        q0 => bgmo_var_5_q0);

    bgmo_var_6_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_var_6_address0,
        ce0 => bgmo_var_6_ce0,
        we0 => bgmo_var_6_we0,
        d0 => bgmo_var_6_d0,
        q0 => bgmo_var_6_q0);

    bgmo_var_7_U : component backsub_bgmo_sortKey_0
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bgmo_var_7_address0,
        ce0 => bgmo_var_7_ce0,
        we0 => bgmo_var_7_we0,
        d0 => bgmo_var_7_d0,
        q0 => bgmo_var_7_q0);

    backsub_AXILiteS_s_axi_U : component backsub_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_AXILiteS_s_axi_U_ap_dummy_ce,
        frame_i => frame_i,
        frame_o => frame_o);

    backsub_CRTL_BUS_s_axi_U : component backsub_CRTL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_CRTL_BUS_s_axi_U_ap_dummy_ce,
        learningRate => learningRate);

    backsub_gmem_m_axi_U : component backsub_gmem_m_axi
    generic map (
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_gmem_m_axi_U_ap_dummy_ce,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARID => gmem_ARID,
        I_ARLEN => gmem_ARLEN,
        I_ARSIZE => gmem_ARSIZE,
        I_ARLOCK => gmem_ARLOCK,
        I_ARCACHE => gmem_ARCACHE,
        I_ARQOS => gmem_ARQOS,
        I_ARPROT => gmem_ARPROT,
        I_ARUSER => gmem_ARUSER,
        I_ARBURST => gmem_ARBURST,
        I_ARREGION => gmem_ARREGION,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_AWADDR,
        I_AWID => gmem_AWID,
        I_AWLEN => gmem_AWLEN,
        I_AWSIZE => gmem_AWSIZE,
        I_AWLOCK => gmem_AWLOCK,
        I_AWCACHE => gmem_AWCACHE,
        I_AWQOS => gmem_AWQOS,
        I_AWPROT => gmem_AWPROT,
        I_AWUSER => gmem_AWUSER,
        I_AWBURST => gmem_AWBURST,
        I_AWREGION => gmem_AWREGION,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => gmem_WDATA,
        I_WID => gmem_WID,
        I_WUSER => gmem_WUSER,
        I_WLAST => gmem_WLAST,
        I_WSTRB => gmem_WSTRB,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);

    backsub_bgmodel_sortKey_m_axi_U : component backsub_bgmodel_sortKey_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_M_AXI_ID_WIDTH => C_M_AXI_BGMODEL_SORTKEY_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_BGMODEL_SORTKEY_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_BGMODEL_SORTKEY_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_BGMODEL_SORTKEY_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_BGMODEL_SORTKEY_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_BGMODEL_SORTKEY_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_BGMODEL_SORTKEY_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_BGMODEL_SORTKEY_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_BGMODEL_SORTKEY_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_BGMODEL_SORTKEY_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_BGMODEL_SORTKEY_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_BGMODEL_SORTKEY_CACHE_VALUE)
    port map (
        AWVALID => m_axi_bgmodel_sortKey_AWVALID,
        AWREADY => m_axi_bgmodel_sortKey_AWREADY,
        AWADDR => m_axi_bgmodel_sortKey_AWADDR,
        AWID => m_axi_bgmodel_sortKey_AWID,
        AWLEN => m_axi_bgmodel_sortKey_AWLEN,
        AWSIZE => m_axi_bgmodel_sortKey_AWSIZE,
        AWBURST => m_axi_bgmodel_sortKey_AWBURST,
        AWLOCK => m_axi_bgmodel_sortKey_AWLOCK,
        AWCACHE => m_axi_bgmodel_sortKey_AWCACHE,
        AWPROT => m_axi_bgmodel_sortKey_AWPROT,
        AWQOS => m_axi_bgmodel_sortKey_AWQOS,
        AWREGION => m_axi_bgmodel_sortKey_AWREGION,
        AWUSER => m_axi_bgmodel_sortKey_AWUSER,
        WVALID => m_axi_bgmodel_sortKey_WVALID,
        WREADY => m_axi_bgmodel_sortKey_WREADY,
        WDATA => m_axi_bgmodel_sortKey_WDATA,
        WSTRB => m_axi_bgmodel_sortKey_WSTRB,
        WLAST => m_axi_bgmodel_sortKey_WLAST,
        WID => m_axi_bgmodel_sortKey_WID,
        WUSER => m_axi_bgmodel_sortKey_WUSER,
        ARVALID => m_axi_bgmodel_sortKey_ARVALID,
        ARREADY => m_axi_bgmodel_sortKey_ARREADY,
        ARADDR => m_axi_bgmodel_sortKey_ARADDR,
        ARID => m_axi_bgmodel_sortKey_ARID,
        ARLEN => m_axi_bgmodel_sortKey_ARLEN,
        ARSIZE => m_axi_bgmodel_sortKey_ARSIZE,
        ARBURST => m_axi_bgmodel_sortKey_ARBURST,
        ARLOCK => m_axi_bgmodel_sortKey_ARLOCK,
        ARCACHE => m_axi_bgmodel_sortKey_ARCACHE,
        ARPROT => m_axi_bgmodel_sortKey_ARPROT,
        ARQOS => m_axi_bgmodel_sortKey_ARQOS,
        ARREGION => m_axi_bgmodel_sortKey_ARREGION,
        ARUSER => m_axi_bgmodel_sortKey_ARUSER,
        RVALID => m_axi_bgmodel_sortKey_RVALID,
        RREADY => m_axi_bgmodel_sortKey_RREADY,
        RDATA => m_axi_bgmodel_sortKey_RDATA,
        RLAST => m_axi_bgmodel_sortKey_RLAST,
        RID => m_axi_bgmodel_sortKey_RID,
        RUSER => m_axi_bgmodel_sortKey_RUSER,
        RRESP => m_axi_bgmodel_sortKey_RRESP,
        BVALID => m_axi_bgmodel_sortKey_BVALID,
        BREADY => m_axi_bgmodel_sortKey_BREADY,
        BRESP => m_axi_bgmodel_sortKey_BRESP,
        BID => m_axi_bgmodel_sortKey_BID,
        BUSER => m_axi_bgmodel_sortKey_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_bgmodel_sortKey_m_axi_U_ap_dummy_ce,
        I_ARVALID => bgmodel_sortKey_ARVALID,
        I_ARREADY => bgmodel_sortKey_ARREADY,
        I_ARADDR => bgmodel_sortKey_ARADDR,
        I_ARID => bgmodel_sortKey_ARID,
        I_ARLEN => bgmodel_sortKey_ARLEN,
        I_ARSIZE => bgmodel_sortKey_ARSIZE,
        I_ARLOCK => bgmodel_sortKey_ARLOCK,
        I_ARCACHE => bgmodel_sortKey_ARCACHE,
        I_ARQOS => bgmodel_sortKey_ARQOS,
        I_ARPROT => bgmodel_sortKey_ARPROT,
        I_ARUSER => bgmodel_sortKey_ARUSER,
        I_ARBURST => bgmodel_sortKey_ARBURST,
        I_ARREGION => bgmodel_sortKey_ARREGION,
        I_RVALID => bgmodel_sortKey_RVALID,
        I_RREADY => bgmodel_sortKey_RREADY,
        I_RDATA => bgmodel_sortKey_RDATA,
        I_RID => bgmodel_sortKey_RID,
        I_RUSER => bgmodel_sortKey_RUSER,
        I_RRESP => bgmodel_sortKey_RRESP,
        I_RLAST => bgmodel_sortKey_RLAST,
        I_AWVALID => bgmodel_sortKey_AWVALID,
        I_AWREADY => bgmodel_sortKey_AWREADY,
        I_AWADDR => bgmodel_sortKey_AWADDR,
        I_AWID => bgmodel_sortKey_AWID,
        I_AWLEN => bgmodel_sortKey_AWLEN,
        I_AWSIZE => bgmodel_sortKey_AWSIZE,
        I_AWLOCK => bgmodel_sortKey_AWLOCK,
        I_AWCACHE => bgmodel_sortKey_AWCACHE,
        I_AWQOS => bgmodel_sortKey_AWQOS,
        I_AWPROT => bgmodel_sortKey_AWPROT,
        I_AWUSER => bgmodel_sortKey_AWUSER,
        I_AWBURST => bgmodel_sortKey_AWBURST,
        I_AWREGION => bgmodel_sortKey_AWREGION,
        I_WVALID => bgmodel_sortKey_WVALID,
        I_WREADY => bgmodel_sortKey_WREADY,
        I_WDATA => bgmodel_sortKey_WDATA,
        I_WID => bgmodel_sortKey_WID,
        I_WUSER => bgmodel_sortKey_WUSER,
        I_WLAST => bgmodel_sortKey_WLAST,
        I_WSTRB => bgmodel_sortKey_WSTRB,
        I_BVALID => bgmodel_sortKey_BVALID,
        I_BREADY => bgmodel_sortKey_BREADY,
        I_BRESP => bgmodel_sortKey_BRESP,
        I_BID => bgmodel_sortKey_BID,
        I_BUSER => bgmodel_sortKey_BUSER);

    backsub_bgmodel_weight_m_axi_U : component backsub_bgmodel_weight_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_M_AXI_ID_WIDTH => C_M_AXI_BGMODEL_WEIGHT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_BGMODEL_WEIGHT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_BGMODEL_WEIGHT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_BGMODEL_WEIGHT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_BGMODEL_WEIGHT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_BGMODEL_WEIGHT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_BGMODEL_WEIGHT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_BGMODEL_WEIGHT_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_BGMODEL_WEIGHT_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_BGMODEL_WEIGHT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_BGMODEL_WEIGHT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_BGMODEL_WEIGHT_CACHE_VALUE)
    port map (
        AWVALID => m_axi_bgmodel_weight_AWVALID,
        AWREADY => m_axi_bgmodel_weight_AWREADY,
        AWADDR => m_axi_bgmodel_weight_AWADDR,
        AWID => m_axi_bgmodel_weight_AWID,
        AWLEN => m_axi_bgmodel_weight_AWLEN,
        AWSIZE => m_axi_bgmodel_weight_AWSIZE,
        AWBURST => m_axi_bgmodel_weight_AWBURST,
        AWLOCK => m_axi_bgmodel_weight_AWLOCK,
        AWCACHE => m_axi_bgmodel_weight_AWCACHE,
        AWPROT => m_axi_bgmodel_weight_AWPROT,
        AWQOS => m_axi_bgmodel_weight_AWQOS,
        AWREGION => m_axi_bgmodel_weight_AWREGION,
        AWUSER => m_axi_bgmodel_weight_AWUSER,
        WVALID => m_axi_bgmodel_weight_WVALID,
        WREADY => m_axi_bgmodel_weight_WREADY,
        WDATA => m_axi_bgmodel_weight_WDATA,
        WSTRB => m_axi_bgmodel_weight_WSTRB,
        WLAST => m_axi_bgmodel_weight_WLAST,
        WID => m_axi_bgmodel_weight_WID,
        WUSER => m_axi_bgmodel_weight_WUSER,
        ARVALID => m_axi_bgmodel_weight_ARVALID,
        ARREADY => m_axi_bgmodel_weight_ARREADY,
        ARADDR => m_axi_bgmodel_weight_ARADDR,
        ARID => m_axi_bgmodel_weight_ARID,
        ARLEN => m_axi_bgmodel_weight_ARLEN,
        ARSIZE => m_axi_bgmodel_weight_ARSIZE,
        ARBURST => m_axi_bgmodel_weight_ARBURST,
        ARLOCK => m_axi_bgmodel_weight_ARLOCK,
        ARCACHE => m_axi_bgmodel_weight_ARCACHE,
        ARPROT => m_axi_bgmodel_weight_ARPROT,
        ARQOS => m_axi_bgmodel_weight_ARQOS,
        ARREGION => m_axi_bgmodel_weight_ARREGION,
        ARUSER => m_axi_bgmodel_weight_ARUSER,
        RVALID => m_axi_bgmodel_weight_RVALID,
        RREADY => m_axi_bgmodel_weight_RREADY,
        RDATA => m_axi_bgmodel_weight_RDATA,
        RLAST => m_axi_bgmodel_weight_RLAST,
        RID => m_axi_bgmodel_weight_RID,
        RUSER => m_axi_bgmodel_weight_RUSER,
        RRESP => m_axi_bgmodel_weight_RRESP,
        BVALID => m_axi_bgmodel_weight_BVALID,
        BREADY => m_axi_bgmodel_weight_BREADY,
        BRESP => m_axi_bgmodel_weight_BRESP,
        BID => m_axi_bgmodel_weight_BID,
        BUSER => m_axi_bgmodel_weight_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_bgmodel_weight_m_axi_U_ap_dummy_ce,
        I_ARVALID => bgmodel_weight_ARVALID,
        I_ARREADY => bgmodel_weight_ARREADY,
        I_ARADDR => bgmodel_weight_ARADDR,
        I_ARID => bgmodel_weight_ARID,
        I_ARLEN => bgmodel_weight_ARLEN,
        I_ARSIZE => bgmodel_weight_ARSIZE,
        I_ARLOCK => bgmodel_weight_ARLOCK,
        I_ARCACHE => bgmodel_weight_ARCACHE,
        I_ARQOS => bgmodel_weight_ARQOS,
        I_ARPROT => bgmodel_weight_ARPROT,
        I_ARUSER => bgmodel_weight_ARUSER,
        I_ARBURST => bgmodel_weight_ARBURST,
        I_ARREGION => bgmodel_weight_ARREGION,
        I_RVALID => bgmodel_weight_RVALID,
        I_RREADY => bgmodel_weight_RREADY,
        I_RDATA => bgmodel_weight_RDATA,
        I_RID => bgmodel_weight_RID,
        I_RUSER => bgmodel_weight_RUSER,
        I_RRESP => bgmodel_weight_RRESP,
        I_RLAST => bgmodel_weight_RLAST,
        I_AWVALID => bgmodel_weight_AWVALID,
        I_AWREADY => bgmodel_weight_AWREADY,
        I_AWADDR => bgmodel_weight_AWADDR,
        I_AWID => bgmodel_weight_AWID,
        I_AWLEN => bgmodel_weight_AWLEN,
        I_AWSIZE => bgmodel_weight_AWSIZE,
        I_AWLOCK => bgmodel_weight_AWLOCK,
        I_AWCACHE => bgmodel_weight_AWCACHE,
        I_AWQOS => bgmodel_weight_AWQOS,
        I_AWPROT => bgmodel_weight_AWPROT,
        I_AWUSER => bgmodel_weight_AWUSER,
        I_AWBURST => bgmodel_weight_AWBURST,
        I_AWREGION => bgmodel_weight_AWREGION,
        I_WVALID => bgmodel_weight_WVALID,
        I_WREADY => bgmodel_weight_WREADY,
        I_WDATA => bgmodel_weight_WDATA,
        I_WID => bgmodel_weight_WID,
        I_WUSER => bgmodel_weight_WUSER,
        I_WLAST => bgmodel_weight_WLAST,
        I_WSTRB => bgmodel_weight_WSTRB,
        I_BVALID => bgmodel_weight_BVALID,
        I_BREADY => bgmodel_weight_BREADY,
        I_BRESP => bgmodel_weight_BRESP,
        I_BID => bgmodel_weight_BID,
        I_BUSER => bgmodel_weight_BUSER);

    backsub_bgmodel_mean_m_axi_U : component backsub_bgmodel_mean_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_M_AXI_ID_WIDTH => C_M_AXI_BGMODEL_MEAN_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_BGMODEL_MEAN_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_BGMODEL_MEAN_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_BGMODEL_MEAN_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_BGMODEL_MEAN_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_BGMODEL_MEAN_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_BGMODEL_MEAN_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_BGMODEL_MEAN_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_BGMODEL_MEAN_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_BGMODEL_MEAN_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_BGMODEL_MEAN_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_BGMODEL_MEAN_CACHE_VALUE)
    port map (
        AWVALID => m_axi_bgmodel_mean_AWVALID,
        AWREADY => m_axi_bgmodel_mean_AWREADY,
        AWADDR => m_axi_bgmodel_mean_AWADDR,
        AWID => m_axi_bgmodel_mean_AWID,
        AWLEN => m_axi_bgmodel_mean_AWLEN,
        AWSIZE => m_axi_bgmodel_mean_AWSIZE,
        AWBURST => m_axi_bgmodel_mean_AWBURST,
        AWLOCK => m_axi_bgmodel_mean_AWLOCK,
        AWCACHE => m_axi_bgmodel_mean_AWCACHE,
        AWPROT => m_axi_bgmodel_mean_AWPROT,
        AWQOS => m_axi_bgmodel_mean_AWQOS,
        AWREGION => m_axi_bgmodel_mean_AWREGION,
        AWUSER => m_axi_bgmodel_mean_AWUSER,
        WVALID => m_axi_bgmodel_mean_WVALID,
        WREADY => m_axi_bgmodel_mean_WREADY,
        WDATA => m_axi_bgmodel_mean_WDATA,
        WSTRB => m_axi_bgmodel_mean_WSTRB,
        WLAST => m_axi_bgmodel_mean_WLAST,
        WID => m_axi_bgmodel_mean_WID,
        WUSER => m_axi_bgmodel_mean_WUSER,
        ARVALID => m_axi_bgmodel_mean_ARVALID,
        ARREADY => m_axi_bgmodel_mean_ARREADY,
        ARADDR => m_axi_bgmodel_mean_ARADDR,
        ARID => m_axi_bgmodel_mean_ARID,
        ARLEN => m_axi_bgmodel_mean_ARLEN,
        ARSIZE => m_axi_bgmodel_mean_ARSIZE,
        ARBURST => m_axi_bgmodel_mean_ARBURST,
        ARLOCK => m_axi_bgmodel_mean_ARLOCK,
        ARCACHE => m_axi_bgmodel_mean_ARCACHE,
        ARPROT => m_axi_bgmodel_mean_ARPROT,
        ARQOS => m_axi_bgmodel_mean_ARQOS,
        ARREGION => m_axi_bgmodel_mean_ARREGION,
        ARUSER => m_axi_bgmodel_mean_ARUSER,
        RVALID => m_axi_bgmodel_mean_RVALID,
        RREADY => m_axi_bgmodel_mean_RREADY,
        RDATA => m_axi_bgmodel_mean_RDATA,
        RLAST => m_axi_bgmodel_mean_RLAST,
        RID => m_axi_bgmodel_mean_RID,
        RUSER => m_axi_bgmodel_mean_RUSER,
        RRESP => m_axi_bgmodel_mean_RRESP,
        BVALID => m_axi_bgmodel_mean_BVALID,
        BREADY => m_axi_bgmodel_mean_BREADY,
        BRESP => m_axi_bgmodel_mean_BRESP,
        BID => m_axi_bgmodel_mean_BID,
        BUSER => m_axi_bgmodel_mean_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_bgmodel_mean_m_axi_U_ap_dummy_ce,
        I_ARVALID => bgmodel_mean_ARVALID,
        I_ARREADY => bgmodel_mean_ARREADY,
        I_ARADDR => bgmodel_mean_ARADDR,
        I_ARID => bgmodel_mean_ARID,
        I_ARLEN => bgmodel_mean_ARLEN,
        I_ARSIZE => bgmodel_mean_ARSIZE,
        I_ARLOCK => bgmodel_mean_ARLOCK,
        I_ARCACHE => bgmodel_mean_ARCACHE,
        I_ARQOS => bgmodel_mean_ARQOS,
        I_ARPROT => bgmodel_mean_ARPROT,
        I_ARUSER => bgmodel_mean_ARUSER,
        I_ARBURST => bgmodel_mean_ARBURST,
        I_ARREGION => bgmodel_mean_ARREGION,
        I_RVALID => bgmodel_mean_RVALID,
        I_RREADY => bgmodel_mean_RREADY,
        I_RDATA => bgmodel_mean_RDATA,
        I_RID => bgmodel_mean_RID,
        I_RUSER => bgmodel_mean_RUSER,
        I_RRESP => bgmodel_mean_RRESP,
        I_RLAST => bgmodel_mean_RLAST,
        I_AWVALID => bgmodel_mean_AWVALID,
        I_AWREADY => bgmodel_mean_AWREADY,
        I_AWADDR => bgmodel_mean_AWADDR,
        I_AWID => bgmodel_mean_AWID,
        I_AWLEN => bgmodel_mean_AWLEN,
        I_AWSIZE => bgmodel_mean_AWSIZE,
        I_AWLOCK => bgmodel_mean_AWLOCK,
        I_AWCACHE => bgmodel_mean_AWCACHE,
        I_AWQOS => bgmodel_mean_AWQOS,
        I_AWPROT => bgmodel_mean_AWPROT,
        I_AWUSER => bgmodel_mean_AWUSER,
        I_AWBURST => bgmodel_mean_AWBURST,
        I_AWREGION => bgmodel_mean_AWREGION,
        I_WVALID => bgmodel_mean_WVALID,
        I_WREADY => bgmodel_mean_WREADY,
        I_WDATA => bgmodel_mean_WDATA,
        I_WID => bgmodel_mean_WID,
        I_WUSER => bgmodel_mean_WUSER,
        I_WLAST => bgmodel_mean_WLAST,
        I_WSTRB => bgmodel_mean_WSTRB,
        I_BVALID => bgmodel_mean_BVALID,
        I_BREADY => bgmodel_mean_BREADY,
        I_BRESP => bgmodel_mean_BRESP,
        I_BID => bgmodel_mean_BID,
        I_BUSER => bgmodel_mean_BUSER);

    backsub_bgmodel_var_m_axi_U : component backsub_bgmodel_var_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_M_AXI_ID_WIDTH => C_M_AXI_BGMODEL_VAR_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_BGMODEL_VAR_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_BGMODEL_VAR_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_BGMODEL_VAR_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_BGMODEL_VAR_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_BGMODEL_VAR_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_BGMODEL_VAR_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_BGMODEL_VAR_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_BGMODEL_VAR_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_BGMODEL_VAR_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_BGMODEL_VAR_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_BGMODEL_VAR_CACHE_VALUE)
    port map (
        AWVALID => m_axi_bgmodel_var_AWVALID,
        AWREADY => m_axi_bgmodel_var_AWREADY,
        AWADDR => m_axi_bgmodel_var_AWADDR,
        AWID => m_axi_bgmodel_var_AWID,
        AWLEN => m_axi_bgmodel_var_AWLEN,
        AWSIZE => m_axi_bgmodel_var_AWSIZE,
        AWBURST => m_axi_bgmodel_var_AWBURST,
        AWLOCK => m_axi_bgmodel_var_AWLOCK,
        AWCACHE => m_axi_bgmodel_var_AWCACHE,
        AWPROT => m_axi_bgmodel_var_AWPROT,
        AWQOS => m_axi_bgmodel_var_AWQOS,
        AWREGION => m_axi_bgmodel_var_AWREGION,
        AWUSER => m_axi_bgmodel_var_AWUSER,
        WVALID => m_axi_bgmodel_var_WVALID,
        WREADY => m_axi_bgmodel_var_WREADY,
        WDATA => m_axi_bgmodel_var_WDATA,
        WSTRB => m_axi_bgmodel_var_WSTRB,
        WLAST => m_axi_bgmodel_var_WLAST,
        WID => m_axi_bgmodel_var_WID,
        WUSER => m_axi_bgmodel_var_WUSER,
        ARVALID => m_axi_bgmodel_var_ARVALID,
        ARREADY => m_axi_bgmodel_var_ARREADY,
        ARADDR => m_axi_bgmodel_var_ARADDR,
        ARID => m_axi_bgmodel_var_ARID,
        ARLEN => m_axi_bgmodel_var_ARLEN,
        ARSIZE => m_axi_bgmodel_var_ARSIZE,
        ARBURST => m_axi_bgmodel_var_ARBURST,
        ARLOCK => m_axi_bgmodel_var_ARLOCK,
        ARCACHE => m_axi_bgmodel_var_ARCACHE,
        ARPROT => m_axi_bgmodel_var_ARPROT,
        ARQOS => m_axi_bgmodel_var_ARQOS,
        ARREGION => m_axi_bgmodel_var_ARREGION,
        ARUSER => m_axi_bgmodel_var_ARUSER,
        RVALID => m_axi_bgmodel_var_RVALID,
        RREADY => m_axi_bgmodel_var_RREADY,
        RDATA => m_axi_bgmodel_var_RDATA,
        RLAST => m_axi_bgmodel_var_RLAST,
        RID => m_axi_bgmodel_var_RID,
        RUSER => m_axi_bgmodel_var_RUSER,
        RRESP => m_axi_bgmodel_var_RRESP,
        BVALID => m_axi_bgmodel_var_BVALID,
        BREADY => m_axi_bgmodel_var_BREADY,
        BRESP => m_axi_bgmodel_var_BRESP,
        BID => m_axi_bgmodel_var_BID,
        BUSER => m_axi_bgmodel_var_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_bgmodel_var_m_axi_U_ap_dummy_ce,
        I_ARVALID => bgmodel_var_ARVALID,
        I_ARREADY => bgmodel_var_ARREADY,
        I_ARADDR => bgmodel_var_ARADDR,
        I_ARID => bgmodel_var_ARID,
        I_ARLEN => bgmodel_var_ARLEN,
        I_ARSIZE => bgmodel_var_ARSIZE,
        I_ARLOCK => bgmodel_var_ARLOCK,
        I_ARCACHE => bgmodel_var_ARCACHE,
        I_ARQOS => bgmodel_var_ARQOS,
        I_ARPROT => bgmodel_var_ARPROT,
        I_ARUSER => bgmodel_var_ARUSER,
        I_ARBURST => bgmodel_var_ARBURST,
        I_ARREGION => bgmodel_var_ARREGION,
        I_RVALID => bgmodel_var_RVALID,
        I_RREADY => bgmodel_var_RREADY,
        I_RDATA => bgmodel_var_RDATA,
        I_RID => bgmodel_var_RID,
        I_RUSER => bgmodel_var_RUSER,
        I_RRESP => bgmodel_var_RRESP,
        I_RLAST => bgmodel_var_RLAST,
        I_AWVALID => bgmodel_var_AWVALID,
        I_AWREADY => bgmodel_var_AWREADY,
        I_AWADDR => bgmodel_var_AWADDR,
        I_AWID => bgmodel_var_AWID,
        I_AWLEN => bgmodel_var_AWLEN,
        I_AWSIZE => bgmodel_var_AWSIZE,
        I_AWLOCK => bgmodel_var_AWLOCK,
        I_AWCACHE => bgmodel_var_AWCACHE,
        I_AWQOS => bgmodel_var_AWQOS,
        I_AWPROT => bgmodel_var_AWPROT,
        I_AWUSER => bgmodel_var_AWUSER,
        I_AWBURST => bgmodel_var_AWBURST,
        I_AWREGION => bgmodel_var_AWREGION,
        I_WVALID => bgmodel_var_WVALID,
        I_WREADY => bgmodel_var_WREADY,
        I_WDATA => bgmodel_var_WDATA,
        I_WID => bgmodel_var_WID,
        I_WUSER => bgmodel_var_WUSER,
        I_WLAST => bgmodel_var_WLAST,
        I_WSTRB => bgmodel_var_WSTRB,
        I_BVALID => bgmodel_var_BVALID,
        I_BREADY => bgmodel_var_BREADY,
        I_BRESP => bgmodel_var_BRESP,
        I_BID => bgmodel_var_BID,
        I_BUSER => bgmodel_var_BUSER);

    grp_backsub_process_fu_1423 : component backsub_process
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_backsub_process_fu_1423_ap_start,
        ap_done => grp_backsub_process_fu_1423_ap_done,
        ap_idle => grp_backsub_process_fu_1423_ap_idle,
        ap_ready => grp_backsub_process_fu_1423_ap_ready,
        frame_in_0_address0 => grp_backsub_process_fu_1423_frame_in_0_address0,
        frame_in_0_ce0 => grp_backsub_process_fu_1423_frame_in_0_ce0,
        frame_in_0_q0 => grp_backsub_process_fu_1423_frame_in_0_q0,
        frame_in_1_address0 => grp_backsub_process_fu_1423_frame_in_1_address0,
        frame_in_1_ce0 => grp_backsub_process_fu_1423_frame_in_1_ce0,
        frame_in_1_q0 => grp_backsub_process_fu_1423_frame_in_1_q0,
        frame_in_2_address0 => grp_backsub_process_fu_1423_frame_in_2_address0,
        frame_in_2_ce0 => grp_backsub_process_fu_1423_frame_in_2_ce0,
        frame_in_2_q0 => grp_backsub_process_fu_1423_frame_in_2_q0,
        frame_in_3_address0 => grp_backsub_process_fu_1423_frame_in_3_address0,
        frame_in_3_ce0 => grp_backsub_process_fu_1423_frame_in_3_ce0,
        frame_in_3_q0 => grp_backsub_process_fu_1423_frame_in_3_q0,
        frame_in_4_address0 => grp_backsub_process_fu_1423_frame_in_4_address0,
        frame_in_4_ce0 => grp_backsub_process_fu_1423_frame_in_4_ce0,
        frame_in_4_q0 => grp_backsub_process_fu_1423_frame_in_4_q0,
        frame_in_5_address0 => grp_backsub_process_fu_1423_frame_in_5_address0,
        frame_in_5_ce0 => grp_backsub_process_fu_1423_frame_in_5_ce0,
        frame_in_5_q0 => grp_backsub_process_fu_1423_frame_in_5_q0,
        frame_in_6_address0 => grp_backsub_process_fu_1423_frame_in_6_address0,
        frame_in_6_ce0 => grp_backsub_process_fu_1423_frame_in_6_ce0,
        frame_in_6_q0 => grp_backsub_process_fu_1423_frame_in_6_q0,
        frame_in_7_address0 => grp_backsub_process_fu_1423_frame_in_7_address0,
        frame_in_7_ce0 => grp_backsub_process_fu_1423_frame_in_7_ce0,
        frame_in_7_q0 => grp_backsub_process_fu_1423_frame_in_7_q0,
        tmp_64 => grp_backsub_process_fu_1423_tmp_64,
        frame_out_0_address0 => grp_backsub_process_fu_1423_frame_out_0_address0,
        frame_out_0_ce0 => grp_backsub_process_fu_1423_frame_out_0_ce0,
        frame_out_0_we0 => grp_backsub_process_fu_1423_frame_out_0_we0,
        frame_out_0_d0 => grp_backsub_process_fu_1423_frame_out_0_d0,
        frame_out_1_address0 => grp_backsub_process_fu_1423_frame_out_1_address0,
        frame_out_1_ce0 => grp_backsub_process_fu_1423_frame_out_1_ce0,
        frame_out_1_we0 => grp_backsub_process_fu_1423_frame_out_1_we0,
        frame_out_1_d0 => grp_backsub_process_fu_1423_frame_out_1_d0,
        frame_out_2_address0 => grp_backsub_process_fu_1423_frame_out_2_address0,
        frame_out_2_ce0 => grp_backsub_process_fu_1423_frame_out_2_ce0,
        frame_out_2_we0 => grp_backsub_process_fu_1423_frame_out_2_we0,
        frame_out_2_d0 => grp_backsub_process_fu_1423_frame_out_2_d0,
        frame_out_3_address0 => grp_backsub_process_fu_1423_frame_out_3_address0,
        frame_out_3_ce0 => grp_backsub_process_fu_1423_frame_out_3_ce0,
        frame_out_3_we0 => grp_backsub_process_fu_1423_frame_out_3_we0,
        frame_out_3_d0 => grp_backsub_process_fu_1423_frame_out_3_d0,
        frame_out_4_address0 => grp_backsub_process_fu_1423_frame_out_4_address0,
        frame_out_4_ce0 => grp_backsub_process_fu_1423_frame_out_4_ce0,
        frame_out_4_we0 => grp_backsub_process_fu_1423_frame_out_4_we0,
        frame_out_4_d0 => grp_backsub_process_fu_1423_frame_out_4_d0,
        frame_out_5_address0 => grp_backsub_process_fu_1423_frame_out_5_address0,
        frame_out_5_ce0 => grp_backsub_process_fu_1423_frame_out_5_ce0,
        frame_out_5_we0 => grp_backsub_process_fu_1423_frame_out_5_we0,
        frame_out_5_d0 => grp_backsub_process_fu_1423_frame_out_5_d0,
        frame_out_6_address0 => grp_backsub_process_fu_1423_frame_out_6_address0,
        frame_out_6_ce0 => grp_backsub_process_fu_1423_frame_out_6_ce0,
        frame_out_6_we0 => grp_backsub_process_fu_1423_frame_out_6_we0,
        frame_out_6_d0 => grp_backsub_process_fu_1423_frame_out_6_d0,
        frame_out_7_address0 => grp_backsub_process_fu_1423_frame_out_7_address0,
        frame_out_7_ce0 => grp_backsub_process_fu_1423_frame_out_7_ce0,
        frame_out_7_we0 => grp_backsub_process_fu_1423_frame_out_7_we0,
        frame_out_7_d0 => grp_backsub_process_fu_1423_frame_out_7_d0,
        tmp_641 => grp_backsub_process_fu_1423_tmp_641,
        learningRate => grp_backsub_process_fu_1423_learningRate,
        bgmodel_0_sortKey_address0 => grp_backsub_process_fu_1423_bgmodel_0_sortKey_address0,
        bgmodel_0_sortKey_ce0 => grp_backsub_process_fu_1423_bgmodel_0_sortKey_ce0,
        bgmodel_0_sortKey_we0 => grp_backsub_process_fu_1423_bgmodel_0_sortKey_we0,
        bgmodel_0_sortKey_d0 => grp_backsub_process_fu_1423_bgmodel_0_sortKey_d0,
        bgmodel_0_sortKey_q0 => grp_backsub_process_fu_1423_bgmodel_0_sortKey_q0,
        bgmodel_1_sortKey_address0 => grp_backsub_process_fu_1423_bgmodel_1_sortKey_address0,
        bgmodel_1_sortKey_ce0 => grp_backsub_process_fu_1423_bgmodel_1_sortKey_ce0,
        bgmodel_1_sortKey_we0 => grp_backsub_process_fu_1423_bgmodel_1_sortKey_we0,
        bgmodel_1_sortKey_d0 => grp_backsub_process_fu_1423_bgmodel_1_sortKey_d0,
        bgmodel_1_sortKey_q0 => grp_backsub_process_fu_1423_bgmodel_1_sortKey_q0,
        bgmodel_2_sortKey_address0 => grp_backsub_process_fu_1423_bgmodel_2_sortKey_address0,
        bgmodel_2_sortKey_ce0 => grp_backsub_process_fu_1423_bgmodel_2_sortKey_ce0,
        bgmodel_2_sortKey_we0 => grp_backsub_process_fu_1423_bgmodel_2_sortKey_we0,
        bgmodel_2_sortKey_d0 => grp_backsub_process_fu_1423_bgmodel_2_sortKey_d0,
        bgmodel_2_sortKey_q0 => grp_backsub_process_fu_1423_bgmodel_2_sortKey_q0,
        bgmodel_3_sortKey_address0 => grp_backsub_process_fu_1423_bgmodel_3_sortKey_address0,
        bgmodel_3_sortKey_ce0 => grp_backsub_process_fu_1423_bgmodel_3_sortKey_ce0,
        bgmodel_3_sortKey_we0 => grp_backsub_process_fu_1423_bgmodel_3_sortKey_we0,
        bgmodel_3_sortKey_d0 => grp_backsub_process_fu_1423_bgmodel_3_sortKey_d0,
        bgmodel_3_sortKey_q0 => grp_backsub_process_fu_1423_bgmodel_3_sortKey_q0,
        bgmodel_4_sortKey_address0 => grp_backsub_process_fu_1423_bgmodel_4_sortKey_address0,
        bgmodel_4_sortKey_ce0 => grp_backsub_process_fu_1423_bgmodel_4_sortKey_ce0,
        bgmodel_4_sortKey_we0 => grp_backsub_process_fu_1423_bgmodel_4_sortKey_we0,
        bgmodel_4_sortKey_d0 => grp_backsub_process_fu_1423_bgmodel_4_sortKey_d0,
        bgmodel_4_sortKey_q0 => grp_backsub_process_fu_1423_bgmodel_4_sortKey_q0,
        bgmodel_5_sortKey_address0 => grp_backsub_process_fu_1423_bgmodel_5_sortKey_address0,
        bgmodel_5_sortKey_ce0 => grp_backsub_process_fu_1423_bgmodel_5_sortKey_ce0,
        bgmodel_5_sortKey_we0 => grp_backsub_process_fu_1423_bgmodel_5_sortKey_we0,
        bgmodel_5_sortKey_d0 => grp_backsub_process_fu_1423_bgmodel_5_sortKey_d0,
        bgmodel_5_sortKey_q0 => grp_backsub_process_fu_1423_bgmodel_5_sortKey_q0,
        bgmodel_6_sortKey_address0 => grp_backsub_process_fu_1423_bgmodel_6_sortKey_address0,
        bgmodel_6_sortKey_ce0 => grp_backsub_process_fu_1423_bgmodel_6_sortKey_ce0,
        bgmodel_6_sortKey_we0 => grp_backsub_process_fu_1423_bgmodel_6_sortKey_we0,
        bgmodel_6_sortKey_d0 => grp_backsub_process_fu_1423_bgmodel_6_sortKey_d0,
        bgmodel_6_sortKey_q0 => grp_backsub_process_fu_1423_bgmodel_6_sortKey_q0,
        bgmodel_7_sortKey_address0 => grp_backsub_process_fu_1423_bgmodel_7_sortKey_address0,
        bgmodel_7_sortKey_ce0 => grp_backsub_process_fu_1423_bgmodel_7_sortKey_ce0,
        bgmodel_7_sortKey_we0 => grp_backsub_process_fu_1423_bgmodel_7_sortKey_we0,
        bgmodel_7_sortKey_d0 => grp_backsub_process_fu_1423_bgmodel_7_sortKey_d0,
        bgmodel_7_sortKey_q0 => grp_backsub_process_fu_1423_bgmodel_7_sortKey_q0,
        tmp_66 => grp_backsub_process_fu_1423_tmp_66,
        bgmodel_0_weight_address0 => grp_backsub_process_fu_1423_bgmodel_0_weight_address0,
        bgmodel_0_weight_ce0 => grp_backsub_process_fu_1423_bgmodel_0_weight_ce0,
        bgmodel_0_weight_we0 => grp_backsub_process_fu_1423_bgmodel_0_weight_we0,
        bgmodel_0_weight_d0 => grp_backsub_process_fu_1423_bgmodel_0_weight_d0,
        bgmodel_0_weight_q0 => grp_backsub_process_fu_1423_bgmodel_0_weight_q0,
        bgmodel_1_weight_address0 => grp_backsub_process_fu_1423_bgmodel_1_weight_address0,
        bgmodel_1_weight_ce0 => grp_backsub_process_fu_1423_bgmodel_1_weight_ce0,
        bgmodel_1_weight_we0 => grp_backsub_process_fu_1423_bgmodel_1_weight_we0,
        bgmodel_1_weight_d0 => grp_backsub_process_fu_1423_bgmodel_1_weight_d0,
        bgmodel_1_weight_q0 => grp_backsub_process_fu_1423_bgmodel_1_weight_q0,
        bgmodel_2_weight_address0 => grp_backsub_process_fu_1423_bgmodel_2_weight_address0,
        bgmodel_2_weight_ce0 => grp_backsub_process_fu_1423_bgmodel_2_weight_ce0,
        bgmodel_2_weight_we0 => grp_backsub_process_fu_1423_bgmodel_2_weight_we0,
        bgmodel_2_weight_d0 => grp_backsub_process_fu_1423_bgmodel_2_weight_d0,
        bgmodel_2_weight_q0 => grp_backsub_process_fu_1423_bgmodel_2_weight_q0,
        bgmodel_3_weight_address0 => grp_backsub_process_fu_1423_bgmodel_3_weight_address0,
        bgmodel_3_weight_ce0 => grp_backsub_process_fu_1423_bgmodel_3_weight_ce0,
        bgmodel_3_weight_we0 => grp_backsub_process_fu_1423_bgmodel_3_weight_we0,
        bgmodel_3_weight_d0 => grp_backsub_process_fu_1423_bgmodel_3_weight_d0,
        bgmodel_3_weight_q0 => grp_backsub_process_fu_1423_bgmodel_3_weight_q0,
        bgmodel_4_weight_address0 => grp_backsub_process_fu_1423_bgmodel_4_weight_address0,
        bgmodel_4_weight_ce0 => grp_backsub_process_fu_1423_bgmodel_4_weight_ce0,
        bgmodel_4_weight_we0 => grp_backsub_process_fu_1423_bgmodel_4_weight_we0,
        bgmodel_4_weight_d0 => grp_backsub_process_fu_1423_bgmodel_4_weight_d0,
        bgmodel_4_weight_q0 => grp_backsub_process_fu_1423_bgmodel_4_weight_q0,
        bgmodel_5_weight_address0 => grp_backsub_process_fu_1423_bgmodel_5_weight_address0,
        bgmodel_5_weight_ce0 => grp_backsub_process_fu_1423_bgmodel_5_weight_ce0,
        bgmodel_5_weight_we0 => grp_backsub_process_fu_1423_bgmodel_5_weight_we0,
        bgmodel_5_weight_d0 => grp_backsub_process_fu_1423_bgmodel_5_weight_d0,
        bgmodel_5_weight_q0 => grp_backsub_process_fu_1423_bgmodel_5_weight_q0,
        bgmodel_6_weight_address0 => grp_backsub_process_fu_1423_bgmodel_6_weight_address0,
        bgmodel_6_weight_ce0 => grp_backsub_process_fu_1423_bgmodel_6_weight_ce0,
        bgmodel_6_weight_we0 => grp_backsub_process_fu_1423_bgmodel_6_weight_we0,
        bgmodel_6_weight_d0 => grp_backsub_process_fu_1423_bgmodel_6_weight_d0,
        bgmodel_6_weight_q0 => grp_backsub_process_fu_1423_bgmodel_6_weight_q0,
        bgmodel_7_weight_address0 => grp_backsub_process_fu_1423_bgmodel_7_weight_address0,
        bgmodel_7_weight_ce0 => grp_backsub_process_fu_1423_bgmodel_7_weight_ce0,
        bgmodel_7_weight_we0 => grp_backsub_process_fu_1423_bgmodel_7_weight_we0,
        bgmodel_7_weight_d0 => grp_backsub_process_fu_1423_bgmodel_7_weight_d0,
        bgmodel_7_weight_q0 => grp_backsub_process_fu_1423_bgmodel_7_weight_q0,
        tmp_662 => grp_backsub_process_fu_1423_tmp_662,
        bgmodel_0_mean_address0 => grp_backsub_process_fu_1423_bgmodel_0_mean_address0,
        bgmodel_0_mean_ce0 => grp_backsub_process_fu_1423_bgmodel_0_mean_ce0,
        bgmodel_0_mean_we0 => grp_backsub_process_fu_1423_bgmodel_0_mean_we0,
        bgmodel_0_mean_d0 => grp_backsub_process_fu_1423_bgmodel_0_mean_d0,
        bgmodel_0_mean_q0 => grp_backsub_process_fu_1423_bgmodel_0_mean_q0,
        bgmodel_1_mean_address0 => grp_backsub_process_fu_1423_bgmodel_1_mean_address0,
        bgmodel_1_mean_ce0 => grp_backsub_process_fu_1423_bgmodel_1_mean_ce0,
        bgmodel_1_mean_we0 => grp_backsub_process_fu_1423_bgmodel_1_mean_we0,
        bgmodel_1_mean_d0 => grp_backsub_process_fu_1423_bgmodel_1_mean_d0,
        bgmodel_1_mean_q0 => grp_backsub_process_fu_1423_bgmodel_1_mean_q0,
        bgmodel_2_mean_address0 => grp_backsub_process_fu_1423_bgmodel_2_mean_address0,
        bgmodel_2_mean_ce0 => grp_backsub_process_fu_1423_bgmodel_2_mean_ce0,
        bgmodel_2_mean_we0 => grp_backsub_process_fu_1423_bgmodel_2_mean_we0,
        bgmodel_2_mean_d0 => grp_backsub_process_fu_1423_bgmodel_2_mean_d0,
        bgmodel_2_mean_q0 => grp_backsub_process_fu_1423_bgmodel_2_mean_q0,
        bgmodel_3_mean_address0 => grp_backsub_process_fu_1423_bgmodel_3_mean_address0,
        bgmodel_3_mean_ce0 => grp_backsub_process_fu_1423_bgmodel_3_mean_ce0,
        bgmodel_3_mean_we0 => grp_backsub_process_fu_1423_bgmodel_3_mean_we0,
        bgmodel_3_mean_d0 => grp_backsub_process_fu_1423_bgmodel_3_mean_d0,
        bgmodel_3_mean_q0 => grp_backsub_process_fu_1423_bgmodel_3_mean_q0,
        bgmodel_4_mean_address0 => grp_backsub_process_fu_1423_bgmodel_4_mean_address0,
        bgmodel_4_mean_ce0 => grp_backsub_process_fu_1423_bgmodel_4_mean_ce0,
        bgmodel_4_mean_we0 => grp_backsub_process_fu_1423_bgmodel_4_mean_we0,
        bgmodel_4_mean_d0 => grp_backsub_process_fu_1423_bgmodel_4_mean_d0,
        bgmodel_4_mean_q0 => grp_backsub_process_fu_1423_bgmodel_4_mean_q0,
        bgmodel_5_mean_address0 => grp_backsub_process_fu_1423_bgmodel_5_mean_address0,
        bgmodel_5_mean_ce0 => grp_backsub_process_fu_1423_bgmodel_5_mean_ce0,
        bgmodel_5_mean_we0 => grp_backsub_process_fu_1423_bgmodel_5_mean_we0,
        bgmodel_5_mean_d0 => grp_backsub_process_fu_1423_bgmodel_5_mean_d0,
        bgmodel_5_mean_q0 => grp_backsub_process_fu_1423_bgmodel_5_mean_q0,
        bgmodel_6_mean_address0 => grp_backsub_process_fu_1423_bgmodel_6_mean_address0,
        bgmodel_6_mean_ce0 => grp_backsub_process_fu_1423_bgmodel_6_mean_ce0,
        bgmodel_6_mean_we0 => grp_backsub_process_fu_1423_bgmodel_6_mean_we0,
        bgmodel_6_mean_d0 => grp_backsub_process_fu_1423_bgmodel_6_mean_d0,
        bgmodel_6_mean_q0 => grp_backsub_process_fu_1423_bgmodel_6_mean_q0,
        bgmodel_7_mean_address0 => grp_backsub_process_fu_1423_bgmodel_7_mean_address0,
        bgmodel_7_mean_ce0 => grp_backsub_process_fu_1423_bgmodel_7_mean_ce0,
        bgmodel_7_mean_we0 => grp_backsub_process_fu_1423_bgmodel_7_mean_we0,
        bgmodel_7_mean_d0 => grp_backsub_process_fu_1423_bgmodel_7_mean_d0,
        bgmodel_7_mean_q0 => grp_backsub_process_fu_1423_bgmodel_7_mean_q0,
        tmp_663 => grp_backsub_process_fu_1423_tmp_663,
        bgmodel_0_var_address0 => grp_backsub_process_fu_1423_bgmodel_0_var_address0,
        bgmodel_0_var_ce0 => grp_backsub_process_fu_1423_bgmodel_0_var_ce0,
        bgmodel_0_var_we0 => grp_backsub_process_fu_1423_bgmodel_0_var_we0,
        bgmodel_0_var_d0 => grp_backsub_process_fu_1423_bgmodel_0_var_d0,
        bgmodel_0_var_q0 => grp_backsub_process_fu_1423_bgmodel_0_var_q0,
        bgmodel_1_var_address0 => grp_backsub_process_fu_1423_bgmodel_1_var_address0,
        bgmodel_1_var_ce0 => grp_backsub_process_fu_1423_bgmodel_1_var_ce0,
        bgmodel_1_var_we0 => grp_backsub_process_fu_1423_bgmodel_1_var_we0,
        bgmodel_1_var_d0 => grp_backsub_process_fu_1423_bgmodel_1_var_d0,
        bgmodel_1_var_q0 => grp_backsub_process_fu_1423_bgmodel_1_var_q0,
        bgmodel_2_var_address0 => grp_backsub_process_fu_1423_bgmodel_2_var_address0,
        bgmodel_2_var_ce0 => grp_backsub_process_fu_1423_bgmodel_2_var_ce0,
        bgmodel_2_var_we0 => grp_backsub_process_fu_1423_bgmodel_2_var_we0,
        bgmodel_2_var_d0 => grp_backsub_process_fu_1423_bgmodel_2_var_d0,
        bgmodel_2_var_q0 => grp_backsub_process_fu_1423_bgmodel_2_var_q0,
        bgmodel_3_var_address0 => grp_backsub_process_fu_1423_bgmodel_3_var_address0,
        bgmodel_3_var_ce0 => grp_backsub_process_fu_1423_bgmodel_3_var_ce0,
        bgmodel_3_var_we0 => grp_backsub_process_fu_1423_bgmodel_3_var_we0,
        bgmodel_3_var_d0 => grp_backsub_process_fu_1423_bgmodel_3_var_d0,
        bgmodel_3_var_q0 => grp_backsub_process_fu_1423_bgmodel_3_var_q0,
        bgmodel_4_var_address0 => grp_backsub_process_fu_1423_bgmodel_4_var_address0,
        bgmodel_4_var_ce0 => grp_backsub_process_fu_1423_bgmodel_4_var_ce0,
        bgmodel_4_var_we0 => grp_backsub_process_fu_1423_bgmodel_4_var_we0,
        bgmodel_4_var_d0 => grp_backsub_process_fu_1423_bgmodel_4_var_d0,
        bgmodel_4_var_q0 => grp_backsub_process_fu_1423_bgmodel_4_var_q0,
        bgmodel_5_var_address0 => grp_backsub_process_fu_1423_bgmodel_5_var_address0,
        bgmodel_5_var_ce0 => grp_backsub_process_fu_1423_bgmodel_5_var_ce0,
        bgmodel_5_var_we0 => grp_backsub_process_fu_1423_bgmodel_5_var_we0,
        bgmodel_5_var_d0 => grp_backsub_process_fu_1423_bgmodel_5_var_d0,
        bgmodel_5_var_q0 => grp_backsub_process_fu_1423_bgmodel_5_var_q0,
        bgmodel_6_var_address0 => grp_backsub_process_fu_1423_bgmodel_6_var_address0,
        bgmodel_6_var_ce0 => grp_backsub_process_fu_1423_bgmodel_6_var_ce0,
        bgmodel_6_var_we0 => grp_backsub_process_fu_1423_bgmodel_6_var_we0,
        bgmodel_6_var_d0 => grp_backsub_process_fu_1423_bgmodel_6_var_d0,
        bgmodel_6_var_q0 => grp_backsub_process_fu_1423_bgmodel_6_var_q0,
        bgmodel_7_var_address0 => grp_backsub_process_fu_1423_bgmodel_7_var_address0,
        bgmodel_7_var_ce0 => grp_backsub_process_fu_1423_bgmodel_7_var_ce0,
        bgmodel_7_var_we0 => grp_backsub_process_fu_1423_bgmodel_7_var_we0,
        bgmodel_7_var_d0 => grp_backsub_process_fu_1423_bgmodel_7_var_d0,
        bgmodel_7_var_q0 => grp_backsub_process_fu_1423_bgmodel_7_var_q0,
        tmp_664 => grp_backsub_process_fu_1423_tmp_664);

    backsub_fptrunc_64ns_32_1_U139 : component backsub_fptrunc_64ns_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_53_phi_fu_1302_p4,
        dout => learningRate_assign_fu_1530_p1);

    backsub_fpext_32ns_64_1_U140 : component backsub_fpext_32ns_64_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => learningRate_read_reg_2255,
        dout => tmp_fu_1534_p1);

    backsub_fcmp_32ns_32ns_1_1_U141 : component backsub_fcmp_32ns_32ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_1537_p0,
        din1 => grp_fu_1537_p1,
        opcode => grp_fu_1537_opcode,
        dout => grp_fu_1537_p2);

    backsub_ddiv_64ns_64ns_64_31_U142 : component backsub_ddiv_64ns_64ns_64_31
    generic map (
        ID => 1,
        NUM_STAGE => 31,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_const_lv64_3FF0000000000000,
        din1 => tmp_51_reg_2333,
        ce => grp_fu_1544_ce,
        dout => grp_fu_1544_p2);

    backsub_sitodp_32ns_64_6_U143 : component backsub_sitodp_32ns_64_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_46_reg_2319,
        ce => grp_fu_1549_ce,
        dout => grp_fu_1549_p1);

    backsub_urem_14ns_12ns_14_18_U144 : component backsub_urem_14ns_12ns_14_18
    generic map (
        ID => 1,
        NUM_STAGE => 18,
        din0_WIDTH => 14,
        din1_WIDTH => 12,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => indvar2_phi_fu_1324_p4,
        din1 => grp_fu_1772_p1,
        ce => grp_fu_1772_ce,
        dout => grp_fu_1772_p2);

    backsub_urem_13ns_11ns_13_17_U145 : component backsub_urem_13ns_11ns_13_17
    generic map (
        ID => 1,
        NUM_STAGE => 17,
        din0_WIDTH => 13,
        din1_WIDTH => 11,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => indvar_phi_fu_1347_p4,
        din1 => grp_fu_1895_p1,
        ce => grp_fu_1895_ce,
        dout => grp_fu_1895_p2);

    backsub_urem_13ns_11ns_13_17_U146 : component backsub_urem_13ns_11ns_13_17
    generic map (
        ID => 1,
        NUM_STAGE => 17,
        din0_WIDTH => 13,
        din1_WIDTH => 11,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => indvar1_phi_fu_1381_p4,
        din1 => grp_fu_2051_p1,
        ce => grp_fu_2051_ce,
        dout => grp_fu_2051_p2);

    backsub_mux_8to1_sel32_8_1_U147 : component backsub_mux_8to1_sel32_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 32,
        dout_WIDTH => 8)
    port map (
        din1 => frame_out_glob_0_q0,
        din2 => frame_out_glob_1_q0,
        din3 => frame_out_glob_2_q0,
        din4 => frame_out_glob_3_q0,
        din5 => frame_out_glob_4_q0,
        din6 => frame_out_glob_5_q0,
        din7 => frame_out_glob_6_q0,
        din8 => frame_out_glob_7_q0,
        din9 => tmp_102_fu_2072_p9,
        dout => tmp_102_fu_2072_p10);

    backsub_urem_14ns_12ns_14_18_U148 : component backsub_urem_14ns_12ns_14_18
    generic map (
        ID => 1,
        NUM_STAGE => 18,
        din0_WIDTH => 14,
        din1_WIDTH => 12,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => indvar3_phi_fu_1404_p4,
        din1 => grp_fu_2122_p1,
        ce => grp_fu_2122_ce,
        dout => grp_fu_2122_p2);

    backsub_mux_8to1_sel32_32_1_U149 : component backsub_mux_8to1_sel32_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din1 => bgmo_sortKey_0_q0,
        din2 => bgmo_sortKey_1_q0,
        din3 => bgmo_sortKey_2_q0,
        din4 => bgmo_sortKey_3_q0,
        din5 => bgmo_sortKey_4_q0,
        din6 => bgmo_sortKey_5_q0,
        din7 => bgmo_sortKey_6_q0,
        din8 => bgmo_sortKey_7_q0,
        din9 => arrayNo29_cast_fu_2164_p1,
        dout => tmp_103_fu_2167_p10);

    backsub_mux_8to1_sel32_32_1_U150 : component backsub_mux_8to1_sel32_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din1 => bgmo_weight_0_q0,
        din2 => bgmo_weight_1_q0,
        din3 => bgmo_weight_2_q0,
        din4 => bgmo_weight_3_q0,
        din5 => bgmo_weight_4_q0,
        din6 => bgmo_weight_5_q0,
        din7 => bgmo_weight_6_q0,
        din8 => bgmo_weight_7_q0,
        din9 => arrayNo29_cast_fu_2164_p1,
        dout => tmp_104_fu_2189_p10);

    backsub_mux_8to1_sel32_32_1_U151 : component backsub_mux_8to1_sel32_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din1 => bgmo_mean_0_q0,
        din2 => bgmo_mean_1_q0,
        din3 => bgmo_mean_2_q0,
        din4 => bgmo_mean_3_q0,
        din5 => bgmo_mean_4_q0,
        din6 => bgmo_mean_5_q0,
        din7 => bgmo_mean_6_q0,
        din8 => bgmo_mean_7_q0,
        din9 => arrayNo29_cast_fu_2164_p1,
        dout => tmp_105_fu_2211_p10);

    backsub_mux_8to1_sel32_32_1_U152 : component backsub_mux_8to1_sel32_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din1 => bgmo_var_0_q0,
        din2 => bgmo_var_1_q0,
        din3 => bgmo_var_2_q0,
        din4 => bgmo_var_3_q0,
        din5 => bgmo_var_4_q0,
        din6 => bgmo_var_5_q0,
        din7 => bgmo_var_6_q0,
        din8 => bgmo_var_7_q0,
        din9 => arrayNo29_cast_fu_2164_p1,
        dout => tmp_106_fu_2233_p10);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_mean_ARREADY assign process. --
    ap_reg_ioackin_bgmodel_mean_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_mean_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47)) then
                    if (not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_ARREADY)))) then 
                        ap_reg_ioackin_bgmodel_mean_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = bgmodel_mean_ARREADY)) then 
                        ap_reg_ioackin_bgmodel_mean_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_mean_AWREADY assign process. --
    ap_reg_ioackin_bgmodel_mean_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_mean_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and not(((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY))))))) then 
                    ap_reg_ioackin_bgmodel_mean_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_1 = bgmodel_mean_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not((gmem_BVALID = ap_const_logic_0)) and (ap_const_logic_1 = bgmodel_mean_AWREADY)))) then 
                    ap_reg_ioackin_bgmodel_mean_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_mean_WREADY assign process. --
    ap_reg_ioackin_bgmodel_mean_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_mean_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and not((((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
                    ap_reg_ioackin_bgmodel_mean_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and (ap_const_logic_1 = bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and (ap_const_logic_1 = bgmodel_mean_WREADY)))) then 
                    ap_reg_ioackin_bgmodel_mean_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_sortKey_ARREADY assign process. --
    ap_reg_ioackin_bgmodel_sortKey_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_sortKey_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47)) then
                    if (not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_ARREADY)))) then 
                        ap_reg_ioackin_bgmodel_sortKey_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = bgmodel_sortKey_ARREADY)) then 
                        ap_reg_ioackin_bgmodel_sortKey_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_sortKey_AWREADY assign process. --
    ap_reg_ioackin_bgmodel_sortKey_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_sortKey_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and not(((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY))))))) then 
                    ap_reg_ioackin_bgmodel_sortKey_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_1 = bgmodel_sortKey_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not((gmem_BVALID = ap_const_logic_0)) and (ap_const_logic_1 = bgmodel_sortKey_AWREADY)))) then 
                    ap_reg_ioackin_bgmodel_sortKey_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_sortKey_WREADY assign process. --
    ap_reg_ioackin_bgmodel_sortKey_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_sortKey_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and not((((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
                    ap_reg_ioackin_bgmodel_sortKey_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and (ap_const_logic_1 = bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and (ap_const_logic_1 = bgmodel_sortKey_WREADY)))) then 
                    ap_reg_ioackin_bgmodel_sortKey_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_var_ARREADY assign process. --
    ap_reg_ioackin_bgmodel_var_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_var_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47)) then
                    if (not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_ARREADY)))) then 
                        ap_reg_ioackin_bgmodel_var_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = bgmodel_var_ARREADY)) then 
                        ap_reg_ioackin_bgmodel_var_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_var_AWREADY assign process. --
    ap_reg_ioackin_bgmodel_var_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_var_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and not(((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY))))))) then 
                    ap_reg_ioackin_bgmodel_var_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_1 = bgmodel_var_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not((gmem_BVALID = ap_const_logic_0)) and (ap_const_logic_1 = bgmodel_var_AWREADY)))) then 
                    ap_reg_ioackin_bgmodel_var_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_var_WREADY assign process. --
    ap_reg_ioackin_bgmodel_var_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_var_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and not((((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
                    ap_reg_ioackin_bgmodel_var_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and (ap_const_logic_1 = bgmodel_var_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and (ap_const_logic_1 = bgmodel_var_WREADY)))) then 
                    ap_reg_ioackin_bgmodel_var_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_weight_ARREADY assign process. --
    ap_reg_ioackin_bgmodel_weight_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_weight_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47)) then
                    if (not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_ARREADY)))) then 
                        ap_reg_ioackin_bgmodel_weight_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = bgmodel_weight_ARREADY)) then 
                        ap_reg_ioackin_bgmodel_weight_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_weight_AWREADY assign process. --
    ap_reg_ioackin_bgmodel_weight_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_weight_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and not(((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY))))))) then 
                    ap_reg_ioackin_bgmodel_weight_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_1 = bgmodel_weight_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and (ap_const_logic_1 = bgmodel_weight_AWREADY) and not((gmem_BVALID = ap_const_logic_0))))) then 
                    ap_reg_ioackin_bgmodel_weight_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_bgmodel_weight_WREADY assign process. --
    ap_reg_ioackin_bgmodel_weight_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_bgmodel_weight_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and not((((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
                    ap_reg_ioackin_bgmodel_weight_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and (ap_const_logic_1 = bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and (ap_const_logic_1 = bgmodel_weight_WREADY)))) then 
                    ap_reg_ioackin_bgmodel_weight_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_gmem_ARREADY assign process. --
    ap_reg_ioackin_gmem_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_56)) then
                    if (not((ap_const_logic_0 = ap_sig_ioackin_gmem_ARREADY))) then 
                        ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = gmem_ARREADY)) then 
                        ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_gmem_AWREADY assign process. --
    ap_reg_ioackin_gmem_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st101_fsm_67)) then
                    if (not((ap_const_logic_0 = ap_sig_ioackin_gmem_AWREADY))) then 
                        ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = gmem_AWREADY)) then 
                        ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_gmem_WREADY assign process. --
    ap_reg_ioackin_gmem_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_2592) then
                    if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                        ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = gmem_WREADY)) then 
                        ap_reg_ioackin_gmem_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_const_lv1_0 = exitcond5_fu_1744_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_const_lv1_0 = exitcond5_fu_1744_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_const_lv1_0 = exitcond5_fu_1744_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53)) then 
                    ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and not((ap_const_lv1_0 = exitcond6_fu_1867_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st80_fsm_62)) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_const_lv1_0 = exitcond6_fu_1867_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st80_fsm_62) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and not((ap_const_lv1_0 = exitcond6_fu_1867_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it10 assign process. --
    ap_reg_ppiten_pp1_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it10 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it10 <= ap_reg_ppiten_pp1_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it11 assign process. --
    ap_reg_ppiten_pp1_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it11 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it11 <= ap_reg_ppiten_pp1_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it12 assign process. --
    ap_reg_ppiten_pp1_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it12 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it12 <= ap_reg_ppiten_pp1_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it13 assign process. --
    ap_reg_ppiten_pp1_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it13 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it13 <= ap_reg_ppiten_pp1_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it14 assign process. --
    ap_reg_ppiten_pp1_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it14 <= ap_reg_ppiten_pp1_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it15 assign process. --
    ap_reg_ppiten_pp1_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it15 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it15 <= ap_reg_ppiten_pp1_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it16 assign process. --
    ap_reg_ppiten_pp1_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it16 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it16 <= ap_reg_ppiten_pp1_it15;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st80_fsm_62)) then 
                    ap_reg_ppiten_pp1_it16 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it3 assign process. --
    ap_reg_ppiten_pp1_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it4 assign process. --
    ap_reg_ppiten_pp1_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it5 assign process. --
    ap_reg_ppiten_pp1_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it6 assign process. --
    ap_reg_ppiten_pp1_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it7 assign process. --
    ap_reg_ppiten_pp1_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it8 assign process. --
    ap_reg_ppiten_pp1_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it8 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it8 <= ap_reg_ppiten_pp1_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it9 assign process. --
    ap_reg_ppiten_pp1_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it9 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then 
                    ap_reg_ppiten_pp1_it9 <= ap_reg_ppiten_pp1_it8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it0 assign process. --
    ap_reg_ppiten_pp2_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and not((ap_const_lv1_0 = exitcond4_fu_2023_p2)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st101_fsm_67) and not((ap_const_logic_0 = ap_sig_ioackin_gmem_AWREADY)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it1 assign process. --
    ap_reg_ppiten_pp2_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and (ap_const_lv1_0 = exitcond4_fu_2023_p2))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st101_fsm_67) and not((ap_const_logic_0 = ap_sig_ioackin_gmem_AWREADY))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and not((ap_const_lv1_0 = exitcond4_fu_2023_p2))))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it10 assign process. --
    ap_reg_ppiten_pp2_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it10 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it10 <= ap_reg_ppiten_pp2_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it11 assign process. --
    ap_reg_ppiten_pp2_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it11 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it11 <= ap_reg_ppiten_pp2_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it12 assign process. --
    ap_reg_ppiten_pp2_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it12 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it12 <= ap_reg_ppiten_pp2_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it13 assign process. --
    ap_reg_ppiten_pp2_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it13 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it13 <= ap_reg_ppiten_pp2_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it14 assign process. --
    ap_reg_ppiten_pp2_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it14 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it14 <= ap_reg_ppiten_pp2_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it15 assign process. --
    ap_reg_ppiten_pp2_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it15 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it15 <= ap_reg_ppiten_pp2_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it16 assign process. --
    ap_reg_ppiten_pp2_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it16 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it16 <= ap_reg_ppiten_pp2_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it17 assign process. --
    ap_reg_ppiten_pp2_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it17 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it17 <= ap_reg_ppiten_pp2_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it18 assign process. --
    ap_reg_ppiten_pp2_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it18 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it18 <= ap_reg_ppiten_pp2_it17;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st101_fsm_67) and not((ap_const_logic_0 = ap_sig_ioackin_gmem_AWREADY)))) then 
                    ap_reg_ppiten_pp2_it18 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it2 assign process. --
    ap_reg_ppiten_pp2_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it3 assign process. --
    ap_reg_ppiten_pp2_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it3 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it3 <= ap_reg_ppiten_pp2_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it4 assign process. --
    ap_reg_ppiten_pp2_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it4 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it4 <= ap_reg_ppiten_pp2_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it5 assign process. --
    ap_reg_ppiten_pp2_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it5 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it5 <= ap_reg_ppiten_pp2_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it6 assign process. --
    ap_reg_ppiten_pp2_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it6 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it6 <= ap_reg_ppiten_pp2_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it7 assign process. --
    ap_reg_ppiten_pp2_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it7 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it7 <= ap_reg_ppiten_pp2_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it8 assign process. --
    ap_reg_ppiten_pp2_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it8 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it8 <= ap_reg_ppiten_pp2_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it9 assign process. --
    ap_reg_ppiten_pp2_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it9 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then 
                    ap_reg_ppiten_pp2_it9 <= ap_reg_ppiten_pp2_it8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it0 assign process. --
    ap_reg_ppiten_pp3_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and not((ap_const_lv1_0 = exitcond7_fu_2094_p2)))) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0))))) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it1 assign process. --
    ap_reg_ppiten_pp3_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and (ap_const_lv1_0 = exitcond7_fu_2094_p2))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and not((ap_const_lv1_0 = exitcond7_fu_2094_p2))))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it10 assign process. --
    ap_reg_ppiten_pp3_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it10 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it10 <= ap_reg_ppiten_pp3_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it11 assign process. --
    ap_reg_ppiten_pp3_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it11 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it11 <= ap_reg_ppiten_pp3_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it12 assign process. --
    ap_reg_ppiten_pp3_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it12 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it12 <= ap_reg_ppiten_pp3_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it13 assign process. --
    ap_reg_ppiten_pp3_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it13 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it13 <= ap_reg_ppiten_pp3_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it14 assign process. --
    ap_reg_ppiten_pp3_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it14 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it14 <= ap_reg_ppiten_pp3_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it15 assign process. --
    ap_reg_ppiten_pp3_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it15 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it15 <= ap_reg_ppiten_pp3_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it16 assign process. --
    ap_reg_ppiten_pp3_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it16 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it16 <= ap_reg_ppiten_pp3_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it17 assign process. --
    ap_reg_ppiten_pp3_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it17 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it17 <= ap_reg_ppiten_pp3_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it18 assign process. --
    ap_reg_ppiten_pp3_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it18 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it18 <= ap_reg_ppiten_pp3_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it19 assign process. --
    ap_reg_ppiten_pp3_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it19 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it19 <= ap_reg_ppiten_pp3_it18;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0))))) then 
                    ap_reg_ppiten_pp3_it19 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it2 assign process. --
    ap_reg_ppiten_pp3_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it2 <= ap_reg_ppiten_pp3_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it3 assign process. --
    ap_reg_ppiten_pp3_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it3 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it3 <= ap_reg_ppiten_pp3_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it4 assign process. --
    ap_reg_ppiten_pp3_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it4 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it4 <= ap_reg_ppiten_pp3_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it5 assign process. --
    ap_reg_ppiten_pp3_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it5 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it5 <= ap_reg_ppiten_pp3_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it6 assign process. --
    ap_reg_ppiten_pp3_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it6 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it6 <= ap_reg_ppiten_pp3_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it7 assign process. --
    ap_reg_ppiten_pp3_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it7 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it7 <= ap_reg_ppiten_pp3_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it8 assign process. --
    ap_reg_ppiten_pp3_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it8 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it8 <= ap_reg_ppiten_pp3_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it9 assign process. --
    ap_reg_ppiten_pp3_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it9 <= ap_const_logic_0;
            else
                if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then 
                    ap_reg_ppiten_pp3_it9 <= ap_reg_ppiten_pp3_it8;
                end if; 
            end if;
        end if;
    end process;


    -- grp_backsub_process_fu_1423_ap_start_ap_start_reg assign process. --
    grp_backsub_process_fu_1423_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_backsub_process_fu_1423_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st99_fsm_65)) then 
                    grp_backsub_process_fu_1423_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_backsub_process_fu_1423_ap_ready)) then 
                    grp_backsub_process_fu_1423_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- indvar1_reg_1377 assign process. --
    indvar1_reg_1377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st101_fsm_67) and not((ap_const_logic_0 = ap_sig_ioackin_gmem_AWREADY)))) then 
                indvar1_reg_1377 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and (ap_const_lv1_0 = exitcond4_reg_2529))) then 
                indvar1_reg_1377 <= indvar_next1_reg_2533;
            end if; 
        end if;
    end process;

    -- indvar2_reg_1320 assign process. --
    indvar2_reg_1320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (exitcond5_reg_2385 = ap_const_lv1_0))) then 
                indvar2_reg_1320 <= indvar_next2_reg_2389;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53)) then 
                indvar2_reg_1320 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    -- indvar3_reg_1400 assign process. --
    indvar3_reg_1400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0))))) then 
                indvar3_reg_1400 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and (ap_const_lv1_0 = exitcond7_reg_2593))) then 
                indvar3_reg_1400 <= indvar_next3_reg_2597;
            end if; 
        end if;
    end process;

    -- indvar_reg_1343 assign process. --
    indvar_reg_1343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_const_lv1_0 = exitcond6_reg_2462))) then 
                indvar_reg_1343 <= indvar_next_reg_2466;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st80_fsm_62)) then 
                indvar_reg_1343 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- nframes_load_1_reg_1288 assign process. --
    nframes_load_1_reg_1288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = or_cond4_reg_2302)) and not(ap_sig_bdd_1612))) then 
                nframes_load_1_reg_1288 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = or_cond4_fu_1608_p2) and not(((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY)))))) then 
                nframes_load_1_reg_1288 <= nframes;
            end if; 
        end if;
    end process;

    -- p_reg_1277 assign process. --
    p_reg_1277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and not(((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY)))))) then 
                p_reg_1277 <= ap_const_lv18_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and not((((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)))))) then 
                p_reg_1277 <= p_1_fu_1620_p2;
            end if; 
        end if;
    end process;

    -- phi_mul1_reg_1355 assign process. --
    phi_mul1_reg_1355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_const_lv1_0 = exitcond6_fu_1867_p2))) then 
                phi_mul1_reg_1355 <= next_mul1_fu_1879_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st80_fsm_62)) then 
                phi_mul1_reg_1355 <= ap_const_lv27_0;
            end if; 
        end if;
    end process;

    -- phi_mul2_reg_1389 assign process. --
    phi_mul2_reg_1389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st101_fsm_67) and not((ap_const_logic_0 = ap_sig_ioackin_gmem_AWREADY)))) then 
                phi_mul2_reg_1389 <= ap_const_lv27_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and (ap_const_lv1_0 = exitcond4_fu_2023_p2))) then 
                phi_mul2_reg_1389 <= next_mul2_fu_2035_p2;
            end if; 
        end if;
    end process;

    -- phi_mul3_reg_1412 assign process. --
    phi_mul3_reg_1412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0))))) then 
                phi_mul3_reg_1412 <= ap_const_lv29_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and (ap_const_lv1_0 = exitcond7_fu_2094_p2))) then 
                phi_mul3_reg_1412 <= next_mul3_fu_2106_p2;
            end if; 
        end if;
    end process;

    -- phi_mul_reg_1332 assign process. --
    phi_mul_reg_1332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_const_lv1_0 = exitcond5_fu_1744_p2))) then 
                phi_mul_reg_1332 <= next_mul_fu_1756_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53)) then 
                phi_mul_reg_1332 <= ap_const_lv29_0;
            end if; 
        end if;
    end process;

    -- r_reg_1366 assign process. --
    r_reg_1366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and not((ap_const_lv1_0 = exitcond6_fu_1867_p2)))) then 
                r_reg_1366 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66) and not((ap_const_logic_0 = grp_backsub_process_fu_1423_ap_done)))) then 
                r_reg_1366 <= r_1_reg_2495;
            end if; 
        end if;
    end process;

    -- tmp_53_reg_1299 assign process. --
    tmp_53_reg_1299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = or_cond_fu_1649_p2)))) then 
                tmp_53_reg_1299 <= tmp_reg_2287;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) and (ap_const_lv1_0 = or_cond_reg_2324))) then 
                tmp_53_reg_1299 <= tmp_52_reg_2338;
            end if; 
        end if;
    end process;

    -- x_reg_1308 assign process. --
    x_reg_1308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st150_fsm_79) and not(ap_sig_bdd_2341))) then 
                x_reg_1308 <= x_4_reg_2351;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45)) then 
                x_reg_1308 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it1 <= exitcond4_reg_2529;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it1 <= tmp_141_reg_2543;
                exitcond4_reg_2529 <= exitcond4_fu_2023_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18)))) then
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it10 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it9;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it11 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it10;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it12 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it11;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it13 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it12;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it14 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it13;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it15 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it14;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it16 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it15;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it17 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it16;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it2 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it1;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it3 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it2;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it4 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it3;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it5 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it4;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it6 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it5;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it7 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it6;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it8 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it7;
                ap_reg_ppstg_exitcond4_reg_2529_pp2_it9 <= ap_reg_ppstg_exitcond4_reg_2529_pp2_it8;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it10 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it9;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it11 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it10;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it12 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it11;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it13 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it12;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it14 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it13;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it15 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it14;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it16 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it15;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it2 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it1;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it3 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it2;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it4 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it3;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it5 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it4;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it6 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it5;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it7 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it6;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it8 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it7;
                ap_reg_ppstg_tmp_141_reg_2543_pp2_it9 <= ap_reg_ppstg_tmp_141_reg_2543_pp2_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))))) then
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it1 <= exitcond5_reg_2385;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it1 <= tmp_136_reg_2399;
                exitcond5_reg_2385 <= exitcond5_fu_1744_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) then
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it10 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it9;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it11 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it10;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it12 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it11;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it13 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it12;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it14 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it13;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it15 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it14;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it2 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it1;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it3 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it2;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it4 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it3;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it5 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it4;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it6 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it5;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it7 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it6;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it8 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it7;
                ap_reg_ppstg_exitcond5_reg_2385_pp0_it9 <= ap_reg_ppstg_exitcond5_reg_2385_pp0_it8;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it10 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it9;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it11 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it10;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it12 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it11;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it13 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it12;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it14 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it13;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it15 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it14;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it15;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it2 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it1;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it3 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it2;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it4 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it3;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it5 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it4;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it6 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it5;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it7 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it6;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it8 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it7;
                ap_reg_ppstg_tmp_136_reg_2399_pp0_it9 <= ap_reg_ppstg_tmp_136_reg_2399_pp0_it8;
                bgmodel_mean_addr_read_reg_2427 <= bgmodel_mean_RDATA;
                bgmodel_var_addr_read_reg_2439 <= bgmodel_var_RDATA;
                bgmodel_weight_addr_read_reg_2415 <= bgmodel_weight_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it1 <= exitcond6_reg_2462;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it1 <= tmp_137_reg_2476;
                exitcond6_reg_2462 <= exitcond6_fu_1867_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) then
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it10 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it9;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it11 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it10;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it12 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it11;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it13 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it12;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it14 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it13;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it2 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it1;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it3 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it2;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it4 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it3;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it5 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it4;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it6 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it5;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it7 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it6;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it8 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it7;
                ap_reg_ppstg_exitcond6_reg_2462_pp1_it9 <= ap_reg_ppstg_exitcond6_reg_2462_pp1_it8;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it10 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it9;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it11 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it10;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it12 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it11;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it13 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it12;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it14 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it13;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it14;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it2 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it1;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it3 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it2;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it4 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it3;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it5 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it4;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it6 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it5;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it7 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it6;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it8 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it7;
                ap_reg_ppstg_tmp_137_reg_2476_pp1_it9 <= ap_reg_ppstg_tmp_137_reg_2476_pp1_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))))) then
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it1 <= exitcond7_reg_2593;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it1 <= tmp_142_reg_2607;
                exitcond7_reg_2593 <= exitcond7_fu_2094_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))) then
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it10 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it9;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it11 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it10;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it12 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it11;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it13 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it12;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it14 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it13;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it15 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it14;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it16 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it15;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it17 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it16;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it18 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it17;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it2 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it1;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it3 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it2;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it4 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it3;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it5 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it4;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it6 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it5;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it7 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it6;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it8 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it7;
                ap_reg_ppstg_exitcond7_reg_2593_pp3_it9 <= ap_reg_ppstg_exitcond7_reg_2593_pp3_it8;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it10 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it9;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it11 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it10;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it12 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it11;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it13 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it12;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it14 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it13;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it15 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it14;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it16 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it15;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it17 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it16;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it2 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it1;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it3 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it2;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it4 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it3;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it5 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it4;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it6 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it5;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it7 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it6;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it8 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it7;
                ap_reg_ppstg_tmp_142_reg_2607_pp3_it9 <= ap_reg_ppstg_tmp_142_reg_2607_pp3_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_ARREADY))))) then
                    bgmodel_mean_addr_reg_2373(31 downto 10) <= tmp_131_fu_1712_p1(32 - 1 downto 0)(31 downto 10);
                    bgmodel_sortKey_addr_reg_2361(31 downto 10) <= tmp_131_fu_1712_p1(32 - 1 downto 0)(31 downto 10);
                    bgmodel_var_addr_reg_2379(31 downto 10) <= tmp_131_fu_1712_p1(32 - 1 downto 0)(31 downto 10);
                    bgmodel_weight_addr_reg_2367(31 downto 10) <= tmp_131_fu_1712_p1(32 - 1 downto 0)(31 downto 10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_ppstg_exitcond5_reg_2385_pp0_it15 = ap_const_lv1_0) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))))) then
                bgmodel_sortKey_addr_read_reg_2403 <= bgmodel_sortKey_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                frame_i_read_reg_2267 <= frame_i;
                frame_o_read_reg_2262 <= frame_o;
                learningRate_read_reg_2255 <= learningRate;
                tmp_98_reg_2272 <= grp_fu_1537_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_64) and not((ap_const_lv1_0 = exitcond_fu_1913_p2)))) then
                gmem_addr_1_reg_2510 <= tmp_139_fu_1993_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_2462_pp1_it14) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then
                gmem_addr_read_reg_2480 <= gmem_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st73_fsm_55)) then
                gmem_addr_reg_2456 <= tmp_135_fu_1857_p1(32 - 1 downto 0);
                    tmp_133_reg_2451(31 downto 9) <= tmp_133_fu_1848_p1(31 downto 9);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then
                indvar_next1_reg_2533 <= indvar_next1_fu_2029_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))))) then
                indvar_next2_reg_2389 <= indvar_next2_fu_1750_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))))) then
                indvar_next3_reg_2597 <= indvar_next3_fu_2100_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then
                indvar_next_reg_2466 <= indvar_next_fu_1873_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45)) then
                learningRate_assign_reg_2343 <= learningRate_assign_fu_1530_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                nframes <= tmp_46_fu_1631_p2;
                or_cond_reg_2324 <= or_cond_fu_1649_p2;
                tmp_46_reg_2319 <= tmp_46_fu_1631_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY)))))) then
                or_cond4_reg_2302 <= or_cond4_fu_1608_p2;
                tmp_1_cast_reg_2277 <= tmp_1_cast_fu_1552_p1;
                tmp_2_cast_reg_2282 <= tmp_2_cast_fu_1555_p1;
                tmp_97_reg_2297 <= tmp_97_fu_1597_p2;
                tmp_reg_2287 <= tmp_fu_1534_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_64)) then
                r_1_reg_2495 <= r_1_fu_1919_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(ap_sig_bdd_1612))) then
                tmp_101_reg_2314 <= tmp_101_fu_1626_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it16))) then
                tmp_102_reg_2588 <= tmp_102_fu_2072_p10;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it17))) then
                tmp_103_reg_2772 <= tmp_103_fu_2167_p10;
                tmp_104_reg_2777 <= tmp_104_fu_2189_p10;
                tmp_105_reg_2782 <= tmp_105_fu_2211_p10;
                tmp_106_reg_2787 <= tmp_106_fu_2233_p10;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_const_lv1_0 = exitcond5_fu_1744_p2))) then
                tmp_136_reg_2399 <= phi_mul_reg_1332(28 downto 25);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_const_lv1_0 = exitcond6_fu_1867_p2))) then
                tmp_137_reg_2476 <= phi_mul1_reg_1355(26 downto 23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and (ap_const_lv1_0 = exitcond4_fu_2023_p2))) then
                tmp_141_reg_2543 <= phi_mul2_reg_1389(26 downto 23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and (ap_const_lv1_0 = exitcond7_fu_2094_p2))) then
                tmp_142_reg_2607 <= phi_mul3_reg_1412(28 downto 25);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = or_cond_fu_1649_p2))) then
                tmp_49_reg_2328 <= tmp_49_fu_1654_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then
                tmp_51_reg_2333 <= tmp_51_fu_1660_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then
                tmp_52_reg_2338 <= grp_fu_1544_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_46) and (ap_const_lv1_0 = exitcond1_fu_1667_p2))) then
                    tmp_54_reg_2356(18 downto 10) <= tmp_54_fu_1703_p2(18 downto 10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_64) and (ap_const_lv1_0 = exitcond_fu_1913_p2))) then
                    tmp_59_reg_2500(13 downto 6) <= tmp_59_fu_1953_p2(13 downto 6);
                    tmp_61_reg_2505(14 downto 7) <= tmp_61_fu_1983_p2(14 downto 7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st99_fsm_65)) then
                    tmp_60_reg_2515(31 downto 6) <= tmp_60_fu_2006_p1(31 downto 6);
                    tmp_62_reg_2521(31 downto 7) <= tmp_62_fu_2015_p1(31 downto 7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_46)) then
                x_4_reg_2351 <= x_4_fu_1673_p2;
            end if;
        end if;
    end process;
    tmp_54_reg_2356(9 downto 0) <= "0000000000";
    bgmodel_sortKey_addr_reg_2361(9 downto 0) <= "0000000000";
    bgmodel_weight_addr_reg_2367(9 downto 0) <= "0000000000";
    bgmodel_mean_addr_reg_2373(9 downto 0) <= "0000000000";
    bgmodel_var_addr_reg_2379(9 downto 0) <= "0000000000";
    tmp_133_reg_2451(8 downto 0) <= "000000000";
    tmp_133_reg_2451(33 downto 32) <= "00";
    tmp_59_reg_2500(5 downto 0) <= "000000";
    tmp_61_reg_2505(6 downto 0) <= "0000000";
    tmp_60_reg_2515(5 downto 0) <= "000000";
    tmp_60_reg_2515(63 downto 32) <= "00000000000000000000000000000000";
    tmp_62_reg_2521(6 downto 0) <= "0000000";
    tmp_62_reg_2521(63 downto 32) <= "00000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, gmem_BVALID, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, ap_reg_ppiten_pp2_it0, ap_reg_ppiten_pp2_it1, ap_reg_ppiten_pp2_it17, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18, ap_reg_ppiten_pp3_it0, ap_reg_ppiten_pp3_it1, ap_reg_ppiten_pp3_it18, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, or_cond4_fu_1608_p2, ap_sig_ioackin_bgmodel_weight_AWREADY, ap_sig_ioackin_bgmodel_sortKey_AWREADY, ap_sig_ioackin_bgmodel_mean_AWREADY, ap_sig_ioackin_bgmodel_var_AWREADY, exitcond2_fu_1614_p2, ap_sig_bdd_1612, or_cond_fu_1649_p2, exitcond1_fu_1667_p2, ap_sig_ioackin_bgmodel_sortKey_ARREADY, ap_sig_ioackin_bgmodel_weight_ARREADY, ap_sig_ioackin_bgmodel_mean_ARREADY, ap_sig_ioackin_bgmodel_var_ARREADY, exitcond5_fu_1744_p2, exitcond6_fu_1867_p2, exitcond_fu_1913_p2, exitcond4_fu_2023_p2, exitcond7_fu_2094_p2, ap_sig_ioackin_gmem_AWREADY, grp_backsub_process_fu_1423_ap_done, ap_sig_bdd_2341, ap_sig_ioackin_gmem_ARREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and not(((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY)))))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                elsif (((ap_const_lv1_0 = or_cond4_fu_1608_p2) and not(((not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY)) or (not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY)))))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (((ap_const_lv1_0 = exitcond2_fu_1614_p2) and not((((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)))))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                elsif ((not((((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)) or ((ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY) and (ap_const_lv1_0 = exitcond2_fu_1614_p2)))) and not((ap_const_lv1_0 = exitcond2_fu_1614_p2)))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (not(ap_sig_bdd_1612)) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_lv1_0 = or_cond_fu_1649_p2))) then
                    ap_NS_fsm <= ap_ST_st46_fsm_45;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_1667_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st48_fsm_47;
                end if;
            when ap_ST_st48_fsm_47 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_st49_fsm_48;
                else
                    ap_NS_fsm <= ap_ST_st48_fsm_47;
                end if;
            when ap_ST_st49_fsm_48 => 
                ap_NS_fsm <= ap_ST_st50_fsm_49;
            when ap_ST_st50_fsm_49 => 
                ap_NS_fsm <= ap_ST_st51_fsm_50;
            when ap_ST_st51_fsm_50 => 
                ap_NS_fsm <= ap_ST_st52_fsm_51;
            when ap_ST_st52_fsm_51 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when ap_ST_st53_fsm_52 => 
                ap_NS_fsm <= ap_ST_st54_fsm_53;
            when ap_ST_st54_fsm_53 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_54;
            when ap_ST_pp0_stg0_fsm_54 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_const_lv1_0 = exitcond5_fu_1744_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_54;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_const_lv1_0 = exitcond5_fu_1744_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st73_fsm_55;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_54;
                end if;
            when ap_ST_st73_fsm_55 => 
                ap_NS_fsm <= ap_ST_st74_fsm_56;
            when ap_ST_st74_fsm_56 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_gmem_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st75_fsm_57;
                else
                    ap_NS_fsm <= ap_ST_st74_fsm_56;
                end if;
            when ap_ST_st75_fsm_57 => 
                ap_NS_fsm <= ap_ST_st76_fsm_58;
            when ap_ST_st76_fsm_58 => 
                ap_NS_fsm <= ap_ST_st77_fsm_59;
            when ap_ST_st77_fsm_59 => 
                ap_NS_fsm <= ap_ST_st78_fsm_60;
            when ap_ST_st78_fsm_60 => 
                ap_NS_fsm <= ap_ST_st79_fsm_61;
            when ap_ST_st79_fsm_61 => 
                ap_NS_fsm <= ap_ST_st80_fsm_62;
            when ap_ST_st80_fsm_62 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_63;
            when ap_ST_pp1_stg0_fsm_63 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and not((ap_const_lv1_0 = exitcond6_fu_1867_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_63;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and not((ap_const_lv1_0 = exitcond6_fu_1867_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_st98_fsm_64;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_63;
                end if;
            when ap_ST_st98_fsm_64 => 
                if (not((ap_const_lv1_0 = exitcond_fu_1913_p2))) then
                    ap_NS_fsm <= ap_ST_st101_fsm_67;
                else
                    ap_NS_fsm <= ap_ST_st99_fsm_65;
                end if;
            when ap_ST_st99_fsm_65 => 
                ap_NS_fsm <= ap_ST_st100_fsm_66;
            when ap_ST_st100_fsm_66 => 
                if (not((ap_const_logic_0 = grp_backsub_process_fu_1423_ap_done))) then
                    ap_NS_fsm <= ap_ST_st98_fsm_64;
                else
                    ap_NS_fsm <= ap_ST_st100_fsm_66;
                end if;
            when ap_ST_st101_fsm_67 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_gmem_AWREADY))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_68;
                else
                    ap_NS_fsm <= ap_ST_st101_fsm_67;
                end if;
            when ap_ST_pp2_stg0_fsm_68 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it18) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it17)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and not((ap_const_lv1_0 = exitcond4_fu_2023_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_68;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it18) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it17))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))) and not((ap_const_lv1_0 = exitcond4_fu_2023_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then
                    ap_NS_fsm <= ap_ST_st121_fsm_69;
                else
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_68;
                end if;
            when ap_ST_st121_fsm_69 => 
                ap_NS_fsm <= ap_ST_st122_fsm_70;
            when ap_ST_st122_fsm_70 => 
                ap_NS_fsm <= ap_ST_st123_fsm_71;
            when ap_ST_st123_fsm_71 => 
                ap_NS_fsm <= ap_ST_st124_fsm_72;
            when ap_ST_st124_fsm_72 => 
                ap_NS_fsm <= ap_ST_st125_fsm_73;
            when ap_ST_st125_fsm_73 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_74;
                else
                    ap_NS_fsm <= ap_ST_st125_fsm_73;
                end if;
            when ap_ST_pp3_stg0_fsm_74 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it18)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and not((ap_const_lv1_0 = exitcond7_fu_2094_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_74;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it18))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))) and not((ap_const_lv1_0 = exitcond7_fu_2094_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then
                    ap_NS_fsm <= ap_ST_st146_fsm_75;
                else
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_74;
                end if;
            when ap_ST_st146_fsm_75 => 
                ap_NS_fsm <= ap_ST_st147_fsm_76;
            when ap_ST_st147_fsm_76 => 
                ap_NS_fsm <= ap_ST_st148_fsm_77;
            when ap_ST_st148_fsm_77 => 
                ap_NS_fsm <= ap_ST_st149_fsm_78;
            when ap_ST_st149_fsm_78 => 
                ap_NS_fsm <= ap_ST_st150_fsm_79;
            when ap_ST_st150_fsm_79 => 
                if (not(ap_sig_bdd_2341)) then
                    ap_NS_fsm <= ap_ST_st47_fsm_46;
                else
                    ap_NS_fsm <= ap_ST_st150_fsm_79;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_sig_cseq_ST_st47_fsm_46, exitcond1_fu_1667_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_46) and not((ap_const_lv1_0 = exitcond1_fu_1667_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st47_fsm_46, exitcond1_fu_1667_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_46) and not((ap_const_lv1_0 = exitcond1_fu_1667_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_1220 assign process. --
    ap_sig_bdd_1220_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1220 <= (ap_const_lv1_1 = ap_CS_fsm(54 downto 54));
    end process;


    -- ap_sig_bdd_1266 assign process. --
    ap_sig_bdd_1266_assign_proc : process(bgmodel_sortKey_RVALID, bgmodel_weight_RVALID, bgmodel_mean_RVALID, bgmodel_var_RVALID, ap_reg_ppstg_exitcond5_reg_2385_pp0_it15)
    begin
                ap_sig_bdd_1266 <= (((bgmodel_sortKey_RVALID = ap_const_logic_0) and (ap_reg_ppstg_exitcond5_reg_2385_pp0_it15 = ap_const_lv1_0)) or (bgmodel_weight_RVALID = ap_const_logic_0) or (bgmodel_mean_RVALID = ap_const_logic_0) or (bgmodel_var_RVALID = ap_const_logic_0));
    end process;


    -- ap_sig_bdd_1299 assign process. --
    ap_sig_bdd_1299_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1299 <= (ap_const_lv1_1 = ap_CS_fsm(63 downto 63));
    end process;


    -- ap_sig_bdd_1336 assign process. --
    ap_sig_bdd_1336_assign_proc : process(gmem_RVALID, ap_reg_ppstg_exitcond6_reg_2462_pp1_it14)
    begin
                ap_sig_bdd_1336 <= ((gmem_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_2462_pp1_it14));
    end process;


    -- ap_sig_bdd_1368 assign process. --
    ap_sig_bdd_1368_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1368 <= (ap_const_lv1_1 = ap_CS_fsm(68 downto 68));
    end process;


    -- ap_sig_bdd_1441 assign process. --
    ap_sig_bdd_1441_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1441 <= (ap_const_lv1_1 = ap_CS_fsm(74 downto 74));
    end process;


    -- ap_sig_bdd_1539 assign process. --
    ap_sig_bdd_1539_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1539 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_1577 assign process. --
    ap_sig_bdd_1577_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1577 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_1597 assign process. --
    ap_sig_bdd_1597_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1597 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_1612 assign process. --
    ap_sig_bdd_1612_assign_proc : process(bgmodel_sortKey_BVALID, bgmodel_weight_BVALID, bgmodel_mean_BVALID, bgmodel_var_BVALID, or_cond4_reg_2302)
    begin
                ap_sig_bdd_1612 <= (((bgmodel_var_BVALID = ap_const_logic_0) and not((ap_const_lv1_0 = or_cond4_reg_2302))) or (not((ap_const_lv1_0 = or_cond4_reg_2302)) and (bgmodel_mean_BVALID = ap_const_logic_0)) or (not((ap_const_lv1_0 = or_cond4_reg_2302)) and (bgmodel_sortKey_BVALID = ap_const_logic_0)) or (not((ap_const_lv1_0 = or_cond4_reg_2302)) and (bgmodel_weight_BVALID = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_1622 assign process. --
    ap_sig_bdd_1622_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1622 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_1637 assign process. --
    ap_sig_bdd_1637_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1637 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_1646 assign process. --
    ap_sig_bdd_1646_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1646 <= (ap_const_lv1_1 = ap_CS_fsm(44 downto 44));
    end process;


    -- ap_sig_bdd_1655 assign process. --
    ap_sig_bdd_1655_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1655 <= (ap_const_lv1_1 = ap_CS_fsm(45 downto 45));
    end process;


    -- ap_sig_bdd_1664 assign process. --
    ap_sig_bdd_1664_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1664 <= (ap_const_lv1_1 = ap_CS_fsm(46 downto 46));
    end process;


    -- ap_sig_bdd_1678 assign process. --
    ap_sig_bdd_1678_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1678 <= (ap_const_lv1_1 = ap_CS_fsm(47 downto 47));
    end process;


    -- ap_sig_bdd_1760 assign process. --
    ap_sig_bdd_1760_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1760 <= (ap_const_lv1_1 = ap_CS_fsm(55 downto 55));
    end process;


    -- ap_sig_bdd_1817 assign process. --
    ap_sig_bdd_1817_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1817 <= (ap_const_lv1_1 = ap_CS_fsm(64 downto 64));
    end process;


    -- ap_sig_bdd_1837 assign process. --
    ap_sig_bdd_1837_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1837 <= (ap_const_lv1_1 = ap_CS_fsm(65 downto 65));
    end process;


    -- ap_sig_bdd_2038 assign process. --
    ap_sig_bdd_2038_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2038 <= (ap_const_lv1_1 = ap_CS_fsm(53 downto 53));
    end process;


    -- ap_sig_bdd_2048 assign process. --
    ap_sig_bdd_2048_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2048 <= (ap_const_lv1_1 = ap_CS_fsm(62 downto 62));
    end process;


    -- ap_sig_bdd_2058 assign process. --
    ap_sig_bdd_2058_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2058 <= (ap_const_lv1_1 = ap_CS_fsm(67 downto 67));
    end process;


    -- ap_sig_bdd_2072 assign process. --
    ap_sig_bdd_2072_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2072 <= (ap_const_lv1_1 = ap_CS_fsm(73 downto 73));
    end process;


    -- ap_sig_bdd_2336 assign process. --
    ap_sig_bdd_2336_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2336 <= (ap_const_lv1_1 = ap_CS_fsm(79 downto 79));
    end process;


    -- ap_sig_bdd_2341 assign process. --
    ap_sig_bdd_2341_assign_proc : process(bgmodel_sortKey_BVALID, bgmodel_weight_BVALID, bgmodel_mean_BVALID, bgmodel_var_BVALID)
    begin
                ap_sig_bdd_2341 <= ((bgmodel_var_BVALID = ap_const_logic_0) or (bgmodel_mean_BVALID = ap_const_logic_0) or (bgmodel_sortKey_BVALID = ap_const_logic_0) or (bgmodel_weight_BVALID = ap_const_logic_0));
    end process;


    -- ap_sig_bdd_2369 assign process. --
    ap_sig_bdd_2369_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2369 <= (ap_const_lv1_1 = ap_CS_fsm(66 downto 66));
    end process;


    -- ap_sig_bdd_2447 assign process. --
    ap_sig_bdd_2447_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, or_cond4_fu_1608_p2)
    begin
                ap_sig_bdd_2447 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)));
    end process;


    -- ap_sig_bdd_2457 assign process. --
    ap_sig_bdd_2457_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, exitcond2_fu_1614_p2)
    begin
                ap_sig_bdd_2457 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2));
    end process;


    -- ap_sig_bdd_2471 assign process. --
    ap_sig_bdd_2471_assign_proc : process(gmem_BVALID, ap_sig_cseq_ST_st125_fsm_73)
    begin
                ap_sig_bdd_2471 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not((gmem_BVALID = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_2477 assign process. --
    ap_sig_bdd_2477_assign_proc : process(ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_reg_ppiten_pp3_it19)
    begin
                ap_sig_bdd_2477 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19));
    end process;


    -- ap_sig_bdd_2573 assign process. --
    ap_sig_bdd_2573_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2573 <= (ap_const_lv1_1 = ap_CS_fsm(56 downto 56));
    end process;


    -- ap_sig_bdd_2592 assign process. --
    ap_sig_bdd_2592_assign_proc : process(ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_reg_ppiten_pp2_it18)
    begin
                ap_sig_bdd_2592 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18));
    end process;


    -- ap_sig_bdd_98 assign process. --
    ap_sig_bdd_98_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_98 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_54 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_54_assign_proc : process(ap_sig_bdd_1220)
    begin
        if (ap_sig_bdd_1220) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_54 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_54 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_63 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_63_assign_proc : process(ap_sig_bdd_1299)
    begin
        if (ap_sig_bdd_1299) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_63 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_63 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg0_fsm_68 assign process. --
    ap_sig_cseq_ST_pp2_stg0_fsm_68_assign_proc : process(ap_sig_bdd_1368)
    begin
        if (ap_sig_bdd_1368) then 
            ap_sig_cseq_ST_pp2_stg0_fsm_68 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg0_fsm_68 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp3_stg0_fsm_74 assign process. --
    ap_sig_cseq_ST_pp3_stg0_fsm_74_assign_proc : process(ap_sig_bdd_1441)
    begin
        if (ap_sig_bdd_1441) then 
            ap_sig_cseq_ST_pp3_stg0_fsm_74 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp3_stg0_fsm_74 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st100_fsm_66 assign process. --
    ap_sig_cseq_ST_st100_fsm_66_assign_proc : process(ap_sig_bdd_2369)
    begin
        if (ap_sig_bdd_2369) then 
            ap_sig_cseq_ST_st100_fsm_66 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st100_fsm_66 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st101_fsm_67 assign process. --
    ap_sig_cseq_ST_st101_fsm_67_assign_proc : process(ap_sig_bdd_2058)
    begin
        if (ap_sig_bdd_2058) then 
            ap_sig_cseq_ST_st101_fsm_67 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st101_fsm_67 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st125_fsm_73 assign process. --
    ap_sig_cseq_ST_st125_fsm_73_assign_proc : process(ap_sig_bdd_2072)
    begin
        if (ap_sig_bdd_2072) then 
            ap_sig_cseq_ST_st125_fsm_73 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st125_fsm_73 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_13 assign process. --
    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_bdd_1637)
    begin
        if (ap_sig_bdd_1637) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st150_fsm_79 assign process. --
    ap_sig_cseq_ST_st150_fsm_79_assign_proc : process(ap_sig_bdd_2336)
    begin
        if (ap_sig_bdd_2336) then 
            ap_sig_cseq_ST_st150_fsm_79 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st150_fsm_79 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_98)
    begin
        if (ap_sig_bdd_98) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_1539)
    begin
        if (ap_sig_bdd_1539) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_1577)
    begin
        if (ap_sig_bdd_1577) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st45_fsm_44 assign process. --
    ap_sig_cseq_ST_st45_fsm_44_assign_proc : process(ap_sig_bdd_1646)
    begin
        if (ap_sig_bdd_1646) then 
            ap_sig_cseq_ST_st45_fsm_44 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st45_fsm_44 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st46_fsm_45 assign process. --
    ap_sig_cseq_ST_st46_fsm_45_assign_proc : process(ap_sig_bdd_1655)
    begin
        if (ap_sig_bdd_1655) then 
            ap_sig_cseq_ST_st46_fsm_45 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st46_fsm_45 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st47_fsm_46 assign process. --
    ap_sig_cseq_ST_st47_fsm_46_assign_proc : process(ap_sig_bdd_1664)
    begin
        if (ap_sig_bdd_1664) then 
            ap_sig_cseq_ST_st47_fsm_46 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st47_fsm_46 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st48_fsm_47 assign process. --
    ap_sig_cseq_ST_st48_fsm_47_assign_proc : process(ap_sig_bdd_1678)
    begin
        if (ap_sig_bdd_1678) then 
            ap_sig_cseq_ST_st48_fsm_47 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st48_fsm_47 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st54_fsm_53 assign process. --
    ap_sig_cseq_ST_st54_fsm_53_assign_proc : process(ap_sig_bdd_2038)
    begin
        if (ap_sig_bdd_2038) then 
            ap_sig_cseq_ST_st54_fsm_53 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st54_fsm_53 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st73_fsm_55 assign process. --
    ap_sig_cseq_ST_st73_fsm_55_assign_proc : process(ap_sig_bdd_1760)
    begin
        if (ap_sig_bdd_1760) then 
            ap_sig_cseq_ST_st73_fsm_55 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st73_fsm_55 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st74_fsm_56 assign process. --
    ap_sig_cseq_ST_st74_fsm_56_assign_proc : process(ap_sig_bdd_2573)
    begin
        if (ap_sig_bdd_2573) then 
            ap_sig_cseq_ST_st74_fsm_56 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st74_fsm_56 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_1597)
    begin
        if (ap_sig_bdd_1597) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st80_fsm_62 assign process. --
    ap_sig_cseq_ST_st80_fsm_62_assign_proc : process(ap_sig_bdd_2048)
    begin
        if (ap_sig_bdd_2048) then 
            ap_sig_cseq_ST_st80_fsm_62 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st80_fsm_62 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_1622)
    begin
        if (ap_sig_bdd_1622) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st98_fsm_64 assign process. --
    ap_sig_cseq_ST_st98_fsm_64_assign_proc : process(ap_sig_bdd_1817)
    begin
        if (ap_sig_bdd_1817) then 
            ap_sig_cseq_ST_st98_fsm_64 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st98_fsm_64 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st99_fsm_65 assign process. --
    ap_sig_cseq_ST_st99_fsm_65_assign_proc : process(ap_sig_bdd_1837)
    begin
        if (ap_sig_bdd_1837) then 
            ap_sig_cseq_ST_st99_fsm_65 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st99_fsm_65 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_mean_ARREADY assign process. --
    ap_sig_ioackin_bgmodel_mean_ARREADY_assign_proc : process(bgmodel_mean_ARREADY, ap_reg_ioackin_bgmodel_mean_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_ARREADY)) then 
            ap_sig_ioackin_bgmodel_mean_ARREADY <= bgmodel_mean_ARREADY;
        else 
            ap_sig_ioackin_bgmodel_mean_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_mean_AWREADY assign process. --
    ap_sig_ioackin_bgmodel_mean_AWREADY_assign_proc : process(bgmodel_mean_AWREADY, ap_reg_ioackin_bgmodel_mean_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_AWREADY)) then 
            ap_sig_ioackin_bgmodel_mean_AWREADY <= bgmodel_mean_AWREADY;
        else 
            ap_sig_ioackin_bgmodel_mean_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_mean_WREADY assign process. --
    ap_sig_ioackin_bgmodel_mean_WREADY_assign_proc : process(bgmodel_mean_WREADY, ap_reg_ioackin_bgmodel_mean_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_WREADY)) then 
            ap_sig_ioackin_bgmodel_mean_WREADY <= bgmodel_mean_WREADY;
        else 
            ap_sig_ioackin_bgmodel_mean_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_sortKey_ARREADY assign process. --
    ap_sig_ioackin_bgmodel_sortKey_ARREADY_assign_proc : process(bgmodel_sortKey_ARREADY, ap_reg_ioackin_bgmodel_sortKey_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_ARREADY)) then 
            ap_sig_ioackin_bgmodel_sortKey_ARREADY <= bgmodel_sortKey_ARREADY;
        else 
            ap_sig_ioackin_bgmodel_sortKey_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_sortKey_AWREADY assign process. --
    ap_sig_ioackin_bgmodel_sortKey_AWREADY_assign_proc : process(bgmodel_sortKey_AWREADY, ap_reg_ioackin_bgmodel_sortKey_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_AWREADY)) then 
            ap_sig_ioackin_bgmodel_sortKey_AWREADY <= bgmodel_sortKey_AWREADY;
        else 
            ap_sig_ioackin_bgmodel_sortKey_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_sortKey_WREADY assign process. --
    ap_sig_ioackin_bgmodel_sortKey_WREADY_assign_proc : process(bgmodel_sortKey_WREADY, ap_reg_ioackin_bgmodel_sortKey_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_WREADY)) then 
            ap_sig_ioackin_bgmodel_sortKey_WREADY <= bgmodel_sortKey_WREADY;
        else 
            ap_sig_ioackin_bgmodel_sortKey_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_var_ARREADY assign process. --
    ap_sig_ioackin_bgmodel_var_ARREADY_assign_proc : process(bgmodel_var_ARREADY, ap_reg_ioackin_bgmodel_var_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_ARREADY)) then 
            ap_sig_ioackin_bgmodel_var_ARREADY <= bgmodel_var_ARREADY;
        else 
            ap_sig_ioackin_bgmodel_var_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_var_AWREADY assign process. --
    ap_sig_ioackin_bgmodel_var_AWREADY_assign_proc : process(bgmodel_var_AWREADY, ap_reg_ioackin_bgmodel_var_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_AWREADY)) then 
            ap_sig_ioackin_bgmodel_var_AWREADY <= bgmodel_var_AWREADY;
        else 
            ap_sig_ioackin_bgmodel_var_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_var_WREADY assign process. --
    ap_sig_ioackin_bgmodel_var_WREADY_assign_proc : process(bgmodel_var_WREADY, ap_reg_ioackin_bgmodel_var_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_WREADY)) then 
            ap_sig_ioackin_bgmodel_var_WREADY <= bgmodel_var_WREADY;
        else 
            ap_sig_ioackin_bgmodel_var_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_weight_ARREADY assign process. --
    ap_sig_ioackin_bgmodel_weight_ARREADY_assign_proc : process(bgmodel_weight_ARREADY, ap_reg_ioackin_bgmodel_weight_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_ARREADY)) then 
            ap_sig_ioackin_bgmodel_weight_ARREADY <= bgmodel_weight_ARREADY;
        else 
            ap_sig_ioackin_bgmodel_weight_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_weight_AWREADY assign process. --
    ap_sig_ioackin_bgmodel_weight_AWREADY_assign_proc : process(bgmodel_weight_AWREADY, ap_reg_ioackin_bgmodel_weight_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_AWREADY)) then 
            ap_sig_ioackin_bgmodel_weight_AWREADY <= bgmodel_weight_AWREADY;
        else 
            ap_sig_ioackin_bgmodel_weight_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_bgmodel_weight_WREADY assign process. --
    ap_sig_ioackin_bgmodel_weight_WREADY_assign_proc : process(bgmodel_weight_WREADY, ap_reg_ioackin_bgmodel_weight_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_WREADY)) then 
            ap_sig_ioackin_bgmodel_weight_WREADY <= bgmodel_weight_WREADY;
        else 
            ap_sig_ioackin_bgmodel_weight_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_gmem_ARREADY assign process. --
    ap_sig_ioackin_gmem_ARREADY_assign_proc : process(gmem_ARREADY, ap_reg_ioackin_gmem_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_gmem_ARREADY)) then 
            ap_sig_ioackin_gmem_ARREADY <= gmem_ARREADY;
        else 
            ap_sig_ioackin_gmem_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_gmem_AWREADY assign process. --
    ap_sig_ioackin_gmem_AWREADY_assign_proc : process(gmem_AWREADY, ap_reg_ioackin_gmem_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_gmem_AWREADY)) then 
            ap_sig_ioackin_gmem_AWREADY <= gmem_AWREADY;
        else 
            ap_sig_ioackin_gmem_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_gmem_WREADY assign process. --
    ap_sig_ioackin_gmem_WREADY_assign_proc : process(gmem_WREADY, ap_reg_ioackin_gmem_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_gmem_WREADY)) then 
            ap_sig_ioackin_gmem_WREADY <= gmem_WREADY;
        else 
            ap_sig_ioackin_gmem_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    arrayNo29_cast_fu_2164_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_142_reg_2607_pp3_it17),32));
    backsub_AXILiteS_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    backsub_CRTL_BUS_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    backsub_bgmodel_mean_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    backsub_bgmodel_sortKey_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    backsub_bgmodel_var_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    backsub_bgmodel_weight_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    backsub_gmem_m_axi_U_ap_dummy_ce <= ap_const_logic_1;

    -- bgmo_mean_0_address0 assign process. --
    bgmo_mean_0_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_0_mean_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_0_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_mean_0_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_0_address0 <= grp_backsub_process_fu_1423_bgmodel_0_mean_address0;
        else 
            bgmo_mean_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_0_ce0 assign process. --
    bgmo_mean_0_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_0_mean_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_mean_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_0_ce0 <= grp_backsub_process_fu_1423_bgmodel_0_mean_ce0;
        else 
            bgmo_mean_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_0_d0 assign process. --
    bgmo_mean_0_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_mean_addr_read_reg_2427, grp_backsub_process_fu_1423_bgmodel_0_mean_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_0_d0 <= bgmodel_mean_addr_read_reg_2427;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_0_d0 <= grp_backsub_process_fu_1423_bgmodel_0_mean_d0;
        else 
            bgmo_mean_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_0_we0 assign process. --
    bgmo_mean_0_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_0_mean_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_0)))) then 
            bgmo_mean_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_0_we0 <= grp_backsub_process_fu_1423_bgmodel_0_mean_we0;
        else 
            bgmo_mean_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_1_address0 assign process. --
    bgmo_mean_1_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_1_mean_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_1_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_mean_1_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_1_address0 <= grp_backsub_process_fu_1423_bgmodel_1_mean_address0;
        else 
            bgmo_mean_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_1_ce0 assign process. --
    bgmo_mean_1_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_1_mean_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_mean_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_1_ce0 <= grp_backsub_process_fu_1423_bgmodel_1_mean_ce0;
        else 
            bgmo_mean_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_1_d0 assign process. --
    bgmo_mean_1_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_mean_addr_read_reg_2427, grp_backsub_process_fu_1423_bgmodel_1_mean_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_1_d0 <= bgmodel_mean_addr_read_reg_2427;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_1_d0 <= grp_backsub_process_fu_1423_bgmodel_1_mean_d0;
        else 
            bgmo_mean_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_1_we0 assign process. --
    bgmo_mean_1_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_1_mean_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_1)))) then 
            bgmo_mean_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_1_we0 <= grp_backsub_process_fu_1423_bgmodel_1_mean_we0;
        else 
            bgmo_mean_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_2_address0 assign process. --
    bgmo_mean_2_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_2_mean_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_2_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_mean_2_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_2_address0 <= grp_backsub_process_fu_1423_bgmodel_2_mean_address0;
        else 
            bgmo_mean_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_2_ce0 assign process. --
    bgmo_mean_2_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_2_mean_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_mean_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_2_ce0 <= grp_backsub_process_fu_1423_bgmodel_2_mean_ce0;
        else 
            bgmo_mean_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_2_d0 assign process. --
    bgmo_mean_2_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_mean_addr_read_reg_2427, grp_backsub_process_fu_1423_bgmodel_2_mean_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_2_d0 <= bgmodel_mean_addr_read_reg_2427;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_2_d0 <= grp_backsub_process_fu_1423_bgmodel_2_mean_d0;
        else 
            bgmo_mean_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_2_we0 assign process. --
    bgmo_mean_2_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_2_mean_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_2)))) then 
            bgmo_mean_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_2_we0 <= grp_backsub_process_fu_1423_bgmodel_2_mean_we0;
        else 
            bgmo_mean_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_3_address0 assign process. --
    bgmo_mean_3_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_3_mean_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_3_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_mean_3_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_3_address0 <= grp_backsub_process_fu_1423_bgmodel_3_mean_address0;
        else 
            bgmo_mean_3_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_3_ce0 assign process. --
    bgmo_mean_3_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_3_mean_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_mean_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_3_ce0 <= grp_backsub_process_fu_1423_bgmodel_3_mean_ce0;
        else 
            bgmo_mean_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_3_d0 assign process. --
    bgmo_mean_3_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_mean_addr_read_reg_2427, grp_backsub_process_fu_1423_bgmodel_3_mean_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_3_d0 <= bgmodel_mean_addr_read_reg_2427;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_3_d0 <= grp_backsub_process_fu_1423_bgmodel_3_mean_d0;
        else 
            bgmo_mean_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_3_we0 assign process. --
    bgmo_mean_3_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_3_mean_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_3)))) then 
            bgmo_mean_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_3_we0 <= grp_backsub_process_fu_1423_bgmodel_3_mean_we0;
        else 
            bgmo_mean_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_4_address0 assign process. --
    bgmo_mean_4_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_4_mean_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_4_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_mean_4_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_4_address0 <= grp_backsub_process_fu_1423_bgmodel_4_mean_address0;
        else 
            bgmo_mean_4_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_4_ce0 assign process. --
    bgmo_mean_4_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_4_mean_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_mean_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_4_ce0 <= grp_backsub_process_fu_1423_bgmodel_4_mean_ce0;
        else 
            bgmo_mean_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_4_d0 assign process. --
    bgmo_mean_4_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_mean_addr_read_reg_2427, grp_backsub_process_fu_1423_bgmodel_4_mean_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_4_d0 <= bgmodel_mean_addr_read_reg_2427;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_4_d0 <= grp_backsub_process_fu_1423_bgmodel_4_mean_d0;
        else 
            bgmo_mean_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_4_we0 assign process. --
    bgmo_mean_4_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_4_mean_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_4)))) then 
            bgmo_mean_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_4_we0 <= grp_backsub_process_fu_1423_bgmodel_4_mean_we0;
        else 
            bgmo_mean_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_5_address0 assign process. --
    bgmo_mean_5_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_5_mean_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_5_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_mean_5_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_5_address0 <= grp_backsub_process_fu_1423_bgmodel_5_mean_address0;
        else 
            bgmo_mean_5_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_5_ce0 assign process. --
    bgmo_mean_5_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_5_mean_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_mean_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_5_ce0 <= grp_backsub_process_fu_1423_bgmodel_5_mean_ce0;
        else 
            bgmo_mean_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_5_d0 assign process. --
    bgmo_mean_5_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_mean_addr_read_reg_2427, grp_backsub_process_fu_1423_bgmodel_5_mean_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_5_d0 <= bgmodel_mean_addr_read_reg_2427;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_5_d0 <= grp_backsub_process_fu_1423_bgmodel_5_mean_d0;
        else 
            bgmo_mean_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_5_we0 assign process. --
    bgmo_mean_5_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_5_mean_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_5)))) then 
            bgmo_mean_5_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_5_we0 <= grp_backsub_process_fu_1423_bgmodel_5_mean_we0;
        else 
            bgmo_mean_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_6_address0 assign process. --
    bgmo_mean_6_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_6_mean_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_6_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_mean_6_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_6_address0 <= grp_backsub_process_fu_1423_bgmodel_6_mean_address0;
        else 
            bgmo_mean_6_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_6_ce0 assign process. --
    bgmo_mean_6_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_6_mean_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_mean_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_6_ce0 <= grp_backsub_process_fu_1423_bgmodel_6_mean_ce0;
        else 
            bgmo_mean_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_6_d0 assign process. --
    bgmo_mean_6_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_mean_addr_read_reg_2427, grp_backsub_process_fu_1423_bgmodel_6_mean_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_6_d0 <= bgmodel_mean_addr_read_reg_2427;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_6_d0 <= grp_backsub_process_fu_1423_bgmodel_6_mean_d0;
        else 
            bgmo_mean_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_6_we0 assign process. --
    bgmo_mean_6_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_6_mean_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_6)))) then 
            bgmo_mean_6_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_6_we0 <= grp_backsub_process_fu_1423_bgmodel_6_mean_we0;
        else 
            bgmo_mean_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_7_address0 assign process. --
    bgmo_mean_7_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_7_mean_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_7_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_mean_7_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_7_address0 <= grp_backsub_process_fu_1423_bgmodel_7_mean_address0;
        else 
            bgmo_mean_7_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_7_ce0 assign process. --
    bgmo_mean_7_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_7_mean_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_mean_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_7_ce0 <= grp_backsub_process_fu_1423_bgmodel_7_mean_ce0;
        else 
            bgmo_mean_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_mean_7_d0 assign process. --
    bgmo_mean_7_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_mean_addr_read_reg_2427, grp_backsub_process_fu_1423_bgmodel_7_mean_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_mean_7_d0 <= bgmodel_mean_addr_read_reg_2427;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_7_d0 <= grp_backsub_process_fu_1423_bgmodel_7_mean_d0;
        else 
            bgmo_mean_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_mean_7_we0 assign process. --
    bgmo_mean_7_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_7_mean_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_6)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_5)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_4)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_3)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_2)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_1)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_0))))) then 
            bgmo_mean_7_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_mean_7_we0 <= grp_backsub_process_fu_1423_bgmodel_7_mean_we0;
        else 
            bgmo_mean_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_0_address0 assign process. --
    bgmo_sortKey_0_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_0_sortKey_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_0_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_sortKey_0_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_0_address0 <= grp_backsub_process_fu_1423_bgmodel_0_sortKey_address0;
        else 
            bgmo_sortKey_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_0_ce0 assign process. --
    bgmo_sortKey_0_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_0_sortKey_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_sortKey_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_0_ce0 <= grp_backsub_process_fu_1423_bgmodel_0_sortKey_ce0;
        else 
            bgmo_sortKey_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_0_d0 assign process. --
    bgmo_sortKey_0_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_sortKey_addr_read_reg_2403, grp_backsub_process_fu_1423_bgmodel_0_sortKey_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_0_d0 <= bgmodel_sortKey_addr_read_reg_2403;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_0_d0 <= grp_backsub_process_fu_1423_bgmodel_0_sortKey_d0;
        else 
            bgmo_sortKey_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_0_we0 assign process. --
    bgmo_sortKey_0_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_0_sortKey_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_0)))) then 
            bgmo_sortKey_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_0_we0 <= grp_backsub_process_fu_1423_bgmodel_0_sortKey_we0;
        else 
            bgmo_sortKey_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_1_address0 assign process. --
    bgmo_sortKey_1_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_1_sortKey_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_1_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_sortKey_1_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_1_address0 <= grp_backsub_process_fu_1423_bgmodel_1_sortKey_address0;
        else 
            bgmo_sortKey_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_1_ce0 assign process. --
    bgmo_sortKey_1_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_1_sortKey_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_sortKey_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_1_ce0 <= grp_backsub_process_fu_1423_bgmodel_1_sortKey_ce0;
        else 
            bgmo_sortKey_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_1_d0 assign process. --
    bgmo_sortKey_1_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_sortKey_addr_read_reg_2403, grp_backsub_process_fu_1423_bgmodel_1_sortKey_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_1_d0 <= bgmodel_sortKey_addr_read_reg_2403;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_1_d0 <= grp_backsub_process_fu_1423_bgmodel_1_sortKey_d0;
        else 
            bgmo_sortKey_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_1_we0 assign process. --
    bgmo_sortKey_1_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_1_sortKey_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_1)))) then 
            bgmo_sortKey_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_1_we0 <= grp_backsub_process_fu_1423_bgmodel_1_sortKey_we0;
        else 
            bgmo_sortKey_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_2_address0 assign process. --
    bgmo_sortKey_2_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_2_sortKey_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_2_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_sortKey_2_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_2_address0 <= grp_backsub_process_fu_1423_bgmodel_2_sortKey_address0;
        else 
            bgmo_sortKey_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_2_ce0 assign process. --
    bgmo_sortKey_2_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_2_sortKey_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_sortKey_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_2_ce0 <= grp_backsub_process_fu_1423_bgmodel_2_sortKey_ce0;
        else 
            bgmo_sortKey_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_2_d0 assign process. --
    bgmo_sortKey_2_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_sortKey_addr_read_reg_2403, grp_backsub_process_fu_1423_bgmodel_2_sortKey_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_2_d0 <= bgmodel_sortKey_addr_read_reg_2403;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_2_d0 <= grp_backsub_process_fu_1423_bgmodel_2_sortKey_d0;
        else 
            bgmo_sortKey_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_2_we0 assign process. --
    bgmo_sortKey_2_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_2_sortKey_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_2)))) then 
            bgmo_sortKey_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_2_we0 <= grp_backsub_process_fu_1423_bgmodel_2_sortKey_we0;
        else 
            bgmo_sortKey_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_3_address0 assign process. --
    bgmo_sortKey_3_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_3_sortKey_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_3_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_sortKey_3_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_3_address0 <= grp_backsub_process_fu_1423_bgmodel_3_sortKey_address0;
        else 
            bgmo_sortKey_3_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_3_ce0 assign process. --
    bgmo_sortKey_3_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_3_sortKey_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_sortKey_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_3_ce0 <= grp_backsub_process_fu_1423_bgmodel_3_sortKey_ce0;
        else 
            bgmo_sortKey_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_3_d0 assign process. --
    bgmo_sortKey_3_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_sortKey_addr_read_reg_2403, grp_backsub_process_fu_1423_bgmodel_3_sortKey_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_3_d0 <= bgmodel_sortKey_addr_read_reg_2403;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_3_d0 <= grp_backsub_process_fu_1423_bgmodel_3_sortKey_d0;
        else 
            bgmo_sortKey_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_3_we0 assign process. --
    bgmo_sortKey_3_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_3_sortKey_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_3)))) then 
            bgmo_sortKey_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_3_we0 <= grp_backsub_process_fu_1423_bgmodel_3_sortKey_we0;
        else 
            bgmo_sortKey_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_4_address0 assign process. --
    bgmo_sortKey_4_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_4_sortKey_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_4_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_sortKey_4_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_4_address0 <= grp_backsub_process_fu_1423_bgmodel_4_sortKey_address0;
        else 
            bgmo_sortKey_4_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_4_ce0 assign process. --
    bgmo_sortKey_4_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_4_sortKey_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_sortKey_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_4_ce0 <= grp_backsub_process_fu_1423_bgmodel_4_sortKey_ce0;
        else 
            bgmo_sortKey_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_4_d0 assign process. --
    bgmo_sortKey_4_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_sortKey_addr_read_reg_2403, grp_backsub_process_fu_1423_bgmodel_4_sortKey_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_4_d0 <= bgmodel_sortKey_addr_read_reg_2403;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_4_d0 <= grp_backsub_process_fu_1423_bgmodel_4_sortKey_d0;
        else 
            bgmo_sortKey_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_4_we0 assign process. --
    bgmo_sortKey_4_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_4_sortKey_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_4)))) then 
            bgmo_sortKey_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_4_we0 <= grp_backsub_process_fu_1423_bgmodel_4_sortKey_we0;
        else 
            bgmo_sortKey_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_5_address0 assign process. --
    bgmo_sortKey_5_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_5_sortKey_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_5_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_sortKey_5_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_5_address0 <= grp_backsub_process_fu_1423_bgmodel_5_sortKey_address0;
        else 
            bgmo_sortKey_5_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_5_ce0 assign process. --
    bgmo_sortKey_5_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_5_sortKey_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_sortKey_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_5_ce0 <= grp_backsub_process_fu_1423_bgmodel_5_sortKey_ce0;
        else 
            bgmo_sortKey_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_5_d0 assign process. --
    bgmo_sortKey_5_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_sortKey_addr_read_reg_2403, grp_backsub_process_fu_1423_bgmodel_5_sortKey_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_5_d0 <= bgmodel_sortKey_addr_read_reg_2403;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_5_d0 <= grp_backsub_process_fu_1423_bgmodel_5_sortKey_d0;
        else 
            bgmo_sortKey_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_5_we0 assign process. --
    bgmo_sortKey_5_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_5_sortKey_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_5)))) then 
            bgmo_sortKey_5_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_5_we0 <= grp_backsub_process_fu_1423_bgmodel_5_sortKey_we0;
        else 
            bgmo_sortKey_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_6_address0 assign process. --
    bgmo_sortKey_6_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_6_sortKey_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_6_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_sortKey_6_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_6_address0 <= grp_backsub_process_fu_1423_bgmodel_6_sortKey_address0;
        else 
            bgmo_sortKey_6_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_6_ce0 assign process. --
    bgmo_sortKey_6_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_6_sortKey_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_sortKey_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_6_ce0 <= grp_backsub_process_fu_1423_bgmodel_6_sortKey_ce0;
        else 
            bgmo_sortKey_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_6_d0 assign process. --
    bgmo_sortKey_6_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_sortKey_addr_read_reg_2403, grp_backsub_process_fu_1423_bgmodel_6_sortKey_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_6_d0 <= bgmodel_sortKey_addr_read_reg_2403;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_6_d0 <= grp_backsub_process_fu_1423_bgmodel_6_sortKey_d0;
        else 
            bgmo_sortKey_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_6_we0 assign process. --
    bgmo_sortKey_6_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_6_sortKey_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_6)))) then 
            bgmo_sortKey_6_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_6_we0 <= grp_backsub_process_fu_1423_bgmodel_6_sortKey_we0;
        else 
            bgmo_sortKey_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_7_address0 assign process. --
    bgmo_sortKey_7_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_7_sortKey_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_7_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_sortKey_7_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_7_address0 <= grp_backsub_process_fu_1423_bgmodel_7_sortKey_address0;
        else 
            bgmo_sortKey_7_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_7_ce0 assign process. --
    bgmo_sortKey_7_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_7_sortKey_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_sortKey_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_7_ce0 <= grp_backsub_process_fu_1423_bgmodel_7_sortKey_ce0;
        else 
            bgmo_sortKey_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_sortKey_7_d0 assign process. --
    bgmo_sortKey_7_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_sortKey_addr_read_reg_2403, grp_backsub_process_fu_1423_bgmodel_7_sortKey_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_sortKey_7_d0 <= bgmodel_sortKey_addr_read_reg_2403;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_7_d0 <= grp_backsub_process_fu_1423_bgmodel_7_sortKey_d0;
        else 
            bgmo_sortKey_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_sortKey_7_we0 assign process. --
    bgmo_sortKey_7_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_7_sortKey_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_6)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_5)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_4)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_3)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_2)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_1)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_0))))) then 
            bgmo_sortKey_7_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_sortKey_7_we0 <= grp_backsub_process_fu_1423_bgmodel_7_sortKey_we0;
        else 
            bgmo_sortKey_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_0_address0 assign process. --
    bgmo_var_0_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_0_var_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_0_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_var_0_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_0_address0 <= grp_backsub_process_fu_1423_bgmodel_0_var_address0;
        else 
            bgmo_var_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_0_ce0 assign process. --
    bgmo_var_0_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_0_var_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_var_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_0_ce0 <= grp_backsub_process_fu_1423_bgmodel_0_var_ce0;
        else 
            bgmo_var_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_0_d0 assign process. --
    bgmo_var_0_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_var_addr_read_reg_2439, grp_backsub_process_fu_1423_bgmodel_0_var_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_0_d0 <= bgmodel_var_addr_read_reg_2439;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_0_d0 <= grp_backsub_process_fu_1423_bgmodel_0_var_d0;
        else 
            bgmo_var_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_0_we0 assign process. --
    bgmo_var_0_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_0_var_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_0)))) then 
            bgmo_var_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_0_we0 <= grp_backsub_process_fu_1423_bgmodel_0_var_we0;
        else 
            bgmo_var_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_1_address0 assign process. --
    bgmo_var_1_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_1_var_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_1_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_var_1_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_1_address0 <= grp_backsub_process_fu_1423_bgmodel_1_var_address0;
        else 
            bgmo_var_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_1_ce0 assign process. --
    bgmo_var_1_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_1_var_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_var_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_1_ce0 <= grp_backsub_process_fu_1423_bgmodel_1_var_ce0;
        else 
            bgmo_var_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_1_d0 assign process. --
    bgmo_var_1_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_var_addr_read_reg_2439, grp_backsub_process_fu_1423_bgmodel_1_var_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_1_d0 <= bgmodel_var_addr_read_reg_2439;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_1_d0 <= grp_backsub_process_fu_1423_bgmodel_1_var_d0;
        else 
            bgmo_var_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_1_we0 assign process. --
    bgmo_var_1_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_1_var_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_1)))) then 
            bgmo_var_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_1_we0 <= grp_backsub_process_fu_1423_bgmodel_1_var_we0;
        else 
            bgmo_var_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_2_address0 assign process. --
    bgmo_var_2_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_2_var_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_2_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_var_2_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_2_address0 <= grp_backsub_process_fu_1423_bgmodel_2_var_address0;
        else 
            bgmo_var_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_2_ce0 assign process. --
    bgmo_var_2_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_2_var_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_var_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_2_ce0 <= grp_backsub_process_fu_1423_bgmodel_2_var_ce0;
        else 
            bgmo_var_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_2_d0 assign process. --
    bgmo_var_2_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_var_addr_read_reg_2439, grp_backsub_process_fu_1423_bgmodel_2_var_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_2_d0 <= bgmodel_var_addr_read_reg_2439;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_2_d0 <= grp_backsub_process_fu_1423_bgmodel_2_var_d0;
        else 
            bgmo_var_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_2_we0 assign process. --
    bgmo_var_2_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_2_var_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_2)))) then 
            bgmo_var_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_2_we0 <= grp_backsub_process_fu_1423_bgmodel_2_var_we0;
        else 
            bgmo_var_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_3_address0 assign process. --
    bgmo_var_3_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_3_var_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_3_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_var_3_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_3_address0 <= grp_backsub_process_fu_1423_bgmodel_3_var_address0;
        else 
            bgmo_var_3_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_3_ce0 assign process. --
    bgmo_var_3_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_3_var_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_var_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_3_ce0 <= grp_backsub_process_fu_1423_bgmodel_3_var_ce0;
        else 
            bgmo_var_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_3_d0 assign process. --
    bgmo_var_3_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_var_addr_read_reg_2439, grp_backsub_process_fu_1423_bgmodel_3_var_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_3_d0 <= bgmodel_var_addr_read_reg_2439;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_3_d0 <= grp_backsub_process_fu_1423_bgmodel_3_var_d0;
        else 
            bgmo_var_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_3_we0 assign process. --
    bgmo_var_3_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_3_var_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_3)))) then 
            bgmo_var_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_3_we0 <= grp_backsub_process_fu_1423_bgmodel_3_var_we0;
        else 
            bgmo_var_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_4_address0 assign process. --
    bgmo_var_4_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_4_var_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_4_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_var_4_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_4_address0 <= grp_backsub_process_fu_1423_bgmodel_4_var_address0;
        else 
            bgmo_var_4_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_4_ce0 assign process. --
    bgmo_var_4_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_4_var_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_var_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_4_ce0 <= grp_backsub_process_fu_1423_bgmodel_4_var_ce0;
        else 
            bgmo_var_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_4_d0 assign process. --
    bgmo_var_4_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_var_addr_read_reg_2439, grp_backsub_process_fu_1423_bgmodel_4_var_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_4_d0 <= bgmodel_var_addr_read_reg_2439;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_4_d0 <= grp_backsub_process_fu_1423_bgmodel_4_var_d0;
        else 
            bgmo_var_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_4_we0 assign process. --
    bgmo_var_4_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_4_var_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_4)))) then 
            bgmo_var_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_4_we0 <= grp_backsub_process_fu_1423_bgmodel_4_var_we0;
        else 
            bgmo_var_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_5_address0 assign process. --
    bgmo_var_5_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_5_var_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_5_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_var_5_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_5_address0 <= grp_backsub_process_fu_1423_bgmodel_5_var_address0;
        else 
            bgmo_var_5_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_5_ce0 assign process. --
    bgmo_var_5_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_5_var_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_var_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_5_ce0 <= grp_backsub_process_fu_1423_bgmodel_5_var_ce0;
        else 
            bgmo_var_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_5_d0 assign process. --
    bgmo_var_5_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_var_addr_read_reg_2439, grp_backsub_process_fu_1423_bgmodel_5_var_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_5_d0 <= bgmodel_var_addr_read_reg_2439;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_5_d0 <= grp_backsub_process_fu_1423_bgmodel_5_var_d0;
        else 
            bgmo_var_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_5_we0 assign process. --
    bgmo_var_5_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_5_var_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_5)))) then 
            bgmo_var_5_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_5_we0 <= grp_backsub_process_fu_1423_bgmodel_5_var_we0;
        else 
            bgmo_var_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_6_address0 assign process. --
    bgmo_var_6_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_6_var_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_6_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_var_6_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_6_address0 <= grp_backsub_process_fu_1423_bgmodel_6_var_address0;
        else 
            bgmo_var_6_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_6_ce0 assign process. --
    bgmo_var_6_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_6_var_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_var_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_6_ce0 <= grp_backsub_process_fu_1423_bgmodel_6_var_ce0;
        else 
            bgmo_var_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_6_d0 assign process. --
    bgmo_var_6_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_var_addr_read_reg_2439, grp_backsub_process_fu_1423_bgmodel_6_var_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_6_d0 <= bgmodel_var_addr_read_reg_2439;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_6_d0 <= grp_backsub_process_fu_1423_bgmodel_6_var_d0;
        else 
            bgmo_var_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_6_we0 assign process. --
    bgmo_var_6_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_6_var_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_6)))) then 
            bgmo_var_6_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_6_we0 <= grp_backsub_process_fu_1423_bgmodel_6_var_we0;
        else 
            bgmo_var_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_7_address0 assign process. --
    bgmo_var_7_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_7_var_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_7_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_var_7_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_7_address0 <= grp_backsub_process_fu_1423_bgmodel_7_var_address0;
        else 
            bgmo_var_7_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_7_ce0 assign process. --
    bgmo_var_7_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_7_var_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_var_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_7_ce0 <= grp_backsub_process_fu_1423_bgmodel_7_var_ce0;
        else 
            bgmo_var_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_var_7_d0 assign process. --
    bgmo_var_7_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_var_addr_read_reg_2439, grp_backsub_process_fu_1423_bgmodel_7_var_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_var_7_d0 <= bgmodel_var_addr_read_reg_2439;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_7_d0 <= grp_backsub_process_fu_1423_bgmodel_7_var_d0;
        else 
            bgmo_var_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_var_7_we0 assign process. --
    bgmo_var_7_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_7_var_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_6)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_5)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_4)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_3)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_2)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_1)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_0))))) then 
            bgmo_var_7_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_var_7_we0 <= grp_backsub_process_fu_1423_bgmodel_7_var_we0;
        else 
            bgmo_var_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_0_address0 assign process. --
    bgmo_weight_0_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_0_weight_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_0_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_weight_0_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_0_address0 <= grp_backsub_process_fu_1423_bgmodel_0_weight_address0;
        else 
            bgmo_weight_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_0_ce0 assign process. --
    bgmo_weight_0_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_0_weight_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_weight_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_0_ce0 <= grp_backsub_process_fu_1423_bgmodel_0_weight_ce0;
        else 
            bgmo_weight_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_0_d0 assign process. --
    bgmo_weight_0_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_weight_addr_read_reg_2415, grp_backsub_process_fu_1423_bgmodel_0_weight_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_0_d0 <= bgmodel_weight_addr_read_reg_2415;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_0_d0 <= grp_backsub_process_fu_1423_bgmodel_0_weight_d0;
        else 
            bgmo_weight_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_0_we0 assign process. --
    bgmo_weight_0_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_0_weight_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_0)))) then 
            bgmo_weight_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_0_we0 <= grp_backsub_process_fu_1423_bgmodel_0_weight_we0;
        else 
            bgmo_weight_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_1_address0 assign process. --
    bgmo_weight_1_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_1_weight_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_1_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_weight_1_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_1_address0 <= grp_backsub_process_fu_1423_bgmodel_1_weight_address0;
        else 
            bgmo_weight_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_1_ce0 assign process. --
    bgmo_weight_1_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_1_weight_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_weight_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_1_ce0 <= grp_backsub_process_fu_1423_bgmodel_1_weight_ce0;
        else 
            bgmo_weight_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_1_d0 assign process. --
    bgmo_weight_1_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_weight_addr_read_reg_2415, grp_backsub_process_fu_1423_bgmodel_1_weight_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_1_d0 <= bgmodel_weight_addr_read_reg_2415;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_1_d0 <= grp_backsub_process_fu_1423_bgmodel_1_weight_d0;
        else 
            bgmo_weight_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_1_we0 assign process. --
    bgmo_weight_1_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_1_weight_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_1)))) then 
            bgmo_weight_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_1_we0 <= grp_backsub_process_fu_1423_bgmodel_1_weight_we0;
        else 
            bgmo_weight_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_2_address0 assign process. --
    bgmo_weight_2_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_2_weight_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_2_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_weight_2_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_2_address0 <= grp_backsub_process_fu_1423_bgmodel_2_weight_address0;
        else 
            bgmo_weight_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_2_ce0 assign process. --
    bgmo_weight_2_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_2_weight_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_weight_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_2_ce0 <= grp_backsub_process_fu_1423_bgmodel_2_weight_ce0;
        else 
            bgmo_weight_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_2_d0 assign process. --
    bgmo_weight_2_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_weight_addr_read_reg_2415, grp_backsub_process_fu_1423_bgmodel_2_weight_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_2_d0 <= bgmodel_weight_addr_read_reg_2415;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_2_d0 <= grp_backsub_process_fu_1423_bgmodel_2_weight_d0;
        else 
            bgmo_weight_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_2_we0 assign process. --
    bgmo_weight_2_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_2_weight_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_2)))) then 
            bgmo_weight_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_2_we0 <= grp_backsub_process_fu_1423_bgmodel_2_weight_we0;
        else 
            bgmo_weight_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_3_address0 assign process. --
    bgmo_weight_3_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_3_weight_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_3_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_weight_3_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_3_address0 <= grp_backsub_process_fu_1423_bgmodel_3_weight_address0;
        else 
            bgmo_weight_3_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_3_ce0 assign process. --
    bgmo_weight_3_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_3_weight_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_weight_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_3_ce0 <= grp_backsub_process_fu_1423_bgmodel_3_weight_ce0;
        else 
            bgmo_weight_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_3_d0 assign process. --
    bgmo_weight_3_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_weight_addr_read_reg_2415, grp_backsub_process_fu_1423_bgmodel_3_weight_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_3_d0 <= bgmodel_weight_addr_read_reg_2415;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_3_d0 <= grp_backsub_process_fu_1423_bgmodel_3_weight_d0;
        else 
            bgmo_weight_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_3_we0 assign process. --
    bgmo_weight_3_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_3_weight_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_3)))) then 
            bgmo_weight_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_3_we0 <= grp_backsub_process_fu_1423_bgmodel_3_weight_we0;
        else 
            bgmo_weight_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_4_address0 assign process. --
    bgmo_weight_4_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_4_weight_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_4_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_weight_4_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_4_address0 <= grp_backsub_process_fu_1423_bgmodel_4_weight_address0;
        else 
            bgmo_weight_4_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_4_ce0 assign process. --
    bgmo_weight_4_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_4_weight_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_weight_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_4_ce0 <= grp_backsub_process_fu_1423_bgmodel_4_weight_ce0;
        else 
            bgmo_weight_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_4_d0 assign process. --
    bgmo_weight_4_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_weight_addr_read_reg_2415, grp_backsub_process_fu_1423_bgmodel_4_weight_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_4_d0 <= bgmodel_weight_addr_read_reg_2415;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_4_d0 <= grp_backsub_process_fu_1423_bgmodel_4_weight_d0;
        else 
            bgmo_weight_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_4_we0 assign process. --
    bgmo_weight_4_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_4_weight_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_4)))) then 
            bgmo_weight_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_4_we0 <= grp_backsub_process_fu_1423_bgmodel_4_weight_we0;
        else 
            bgmo_weight_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_5_address0 assign process. --
    bgmo_weight_5_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_5_weight_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_5_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_weight_5_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_5_address0 <= grp_backsub_process_fu_1423_bgmodel_5_weight_address0;
        else 
            bgmo_weight_5_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_5_ce0 assign process. --
    bgmo_weight_5_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_5_weight_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_weight_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_5_ce0 <= grp_backsub_process_fu_1423_bgmodel_5_weight_ce0;
        else 
            bgmo_weight_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_5_d0 assign process. --
    bgmo_weight_5_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_weight_addr_read_reg_2415, grp_backsub_process_fu_1423_bgmodel_5_weight_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_5_d0 <= bgmodel_weight_addr_read_reg_2415;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_5_d0 <= grp_backsub_process_fu_1423_bgmodel_5_weight_d0;
        else 
            bgmo_weight_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_5_we0 assign process. --
    bgmo_weight_5_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_5_weight_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_5)))) then 
            bgmo_weight_5_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_5_we0 <= grp_backsub_process_fu_1423_bgmodel_5_weight_we0;
        else 
            bgmo_weight_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_6_address0 assign process. --
    bgmo_weight_6_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_6_weight_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_6_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_weight_6_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_6_address0 <= grp_backsub_process_fu_1423_bgmodel_6_weight_address0;
        else 
            bgmo_weight_6_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_6_ce0 assign process. --
    bgmo_weight_6_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_6_weight_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_weight_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_6_ce0 <= grp_backsub_process_fu_1423_bgmodel_6_weight_ce0;
        else 
            bgmo_weight_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_6_d0 assign process. --
    bgmo_weight_6_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_weight_addr_read_reg_2415, grp_backsub_process_fu_1423_bgmodel_6_weight_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_6_d0 <= bgmodel_weight_addr_read_reg_2415;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_6_d0 <= grp_backsub_process_fu_1423_bgmodel_6_weight_d0;
        else 
            bgmo_weight_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_6_we0 assign process. --
    bgmo_weight_6_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_6_weight_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and (ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_6)))) then 
            bgmo_weight_6_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_6_we0 <= grp_backsub_process_fu_1423_bgmodel_6_weight_we0;
        else 
            bgmo_weight_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_7_address0 assign process. --
    bgmo_weight_7_address0_assign_proc : process(ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, grp_backsub_process_fu_1423_bgmodel_7_weight_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex28_fu_1778_p1, newIndex33_fu_2128_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_7_address0 <= newIndex28_fu_1778_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17)) then 
            bgmo_weight_7_address0 <= newIndex33_fu_2128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_7_address0 <= grp_backsub_process_fu_1423_bgmodel_7_weight_address0;
        else 
            bgmo_weight_7_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_7_ce0 assign process. --
    bgmo_weight_7_ce0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp3_it17, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19, grp_backsub_process_fu_1423_bgmodel_7_weight_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it17) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19)))))) then 
            bgmo_weight_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_7_ce0 <= grp_backsub_process_fu_1423_bgmodel_7_weight_ce0;
        else 
            bgmo_weight_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmo_weight_7_d0 assign process. --
    bgmo_weight_7_d0_assign_proc : process(ap_reg_ppiten_pp0_it17, bgmodel_weight_addr_read_reg_2415, grp_backsub_process_fu_1423_bgmodel_7_weight_d0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it17)) then 
            bgmo_weight_7_d0 <= bgmodel_weight_addr_read_reg_2415;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_7_d0 <= grp_backsub_process_fu_1423_bgmodel_7_weight_d0;
        else 
            bgmo_weight_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- bgmo_weight_7_we0 assign process. --
    bgmo_weight_7_we0_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppstg_tmp_136_reg_2399_pp0_it16, grp_backsub_process_fu_1423_bgmodel_7_weight_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_6)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_5)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_4)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_3)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_2)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_1)) and not((ap_reg_ppstg_tmp_136_reg_2399_pp0_it16 = ap_const_lv4_0))))) then 
            bgmo_weight_7_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            bgmo_weight_7_we0 <= grp_backsub_process_fu_1423_bgmodel_7_weight_we0;
        else 
            bgmo_weight_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bgmodel_mean_ARADDR <= tmp_131_fu_1712_p1(32 - 1 downto 0);
    bgmodel_mean_ARBURST <= ap_const_lv2_0;
    bgmodel_mean_ARCACHE <= ap_const_lv4_0;
    bgmodel_mean_ARID <= ap_const_lv1_0;
    bgmodel_mean_ARLEN <= ap_const_lv32_3C00;
    bgmodel_mean_ARLOCK <= ap_const_lv2_0;
    bgmodel_mean_ARPROT <= ap_const_lv3_0;
    bgmodel_mean_ARQOS <= ap_const_lv4_0;
    bgmodel_mean_ARREGION <= ap_const_lv4_0;
    bgmodel_mean_ARSIZE <= ap_const_lv3_0;
    bgmodel_mean_ARUSER <= ap_const_lv1_0;

    -- bgmodel_mean_ARVALID assign process. --
    bgmodel_mean_ARVALID_assign_proc : process(ap_sig_cseq_ST_st48_fsm_47, ap_reg_ioackin_bgmodel_mean_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_ARREADY))) then 
            bgmodel_mean_ARVALID <= ap_const_logic_1;
        else 
            bgmodel_mean_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_mean_AWADDR assign process. --
    bgmodel_mean_AWADDR_assign_proc : process(bgmodel_mean_addr_reg_2373, ap_reg_ioackin_bgmodel_mean_AWREADY, ap_sig_bdd_2447, ap_sig_bdd_2471)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_AWREADY)) then
            if (ap_sig_bdd_2471) then 
                bgmodel_mean_AWADDR <= bgmodel_mean_addr_reg_2373;
            elsif (ap_sig_bdd_2447) then 
                bgmodel_mean_AWADDR <= ap_const_lv32_0;
            else 
                bgmodel_mean_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_mean_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_mean_AWBURST <= ap_const_lv2_0;
    bgmodel_mean_AWCACHE <= ap_const_lv4_0;
    bgmodel_mean_AWID <= ap_const_lv1_0;

    -- bgmodel_mean_AWLEN assign process. --
    bgmodel_mean_AWLEN_assign_proc : process(ap_reg_ioackin_bgmodel_mean_AWREADY, ap_sig_bdd_2447, ap_sig_bdd_2471)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_AWREADY)) then
            if (ap_sig_bdd_2471) then 
                bgmodel_mean_AWLEN <= ap_const_lv32_3C00;
            elsif (ap_sig_bdd_2447) then 
                bgmodel_mean_AWLEN <= ap_const_lv32_25800;
            else 
                bgmodel_mean_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_mean_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_mean_AWLOCK <= ap_const_lv2_0;
    bgmodel_mean_AWPROT <= ap_const_lv3_0;
    bgmodel_mean_AWQOS <= ap_const_lv4_0;
    bgmodel_mean_AWREGION <= ap_const_lv4_0;
    bgmodel_mean_AWSIZE <= ap_const_lv3_0;
    bgmodel_mean_AWUSER <= ap_const_lv1_0;

    -- bgmodel_mean_AWVALID assign process. --
    bgmodel_mean_AWVALID_assign_proc : process(gmem_BVALID, ap_sig_cseq_ST_st2_fsm_1, or_cond4_fu_1608_p2, ap_sig_cseq_ST_st125_fsm_73, ap_reg_ioackin_bgmodel_mean_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not((gmem_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_AWREADY)))) then 
            bgmodel_mean_AWVALID <= ap_const_logic_1;
        else 
            bgmodel_mean_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_mean_BREADY assign process. --
    bgmodel_mean_BREADY_assign_proc : process(or_cond4_reg_2302, ap_sig_cseq_ST_st7_fsm_6, ap_sig_bdd_1612, ap_sig_cseq_ST_st150_fsm_79, ap_sig_bdd_2341)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = or_cond4_reg_2302)) and not(ap_sig_bdd_1612)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st150_fsm_79) and not(ap_sig_bdd_2341)))) then 
            bgmodel_mean_BREADY <= ap_const_logic_1;
        else 
            bgmodel_mean_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_mean_RREADY assign process. --
    bgmodel_mean_RREADY_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))))) then 
            bgmodel_mean_RREADY <= ap_const_logic_1;
        else 
            bgmodel_mean_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_mean_WDATA assign process. --
    bgmodel_mean_WDATA_assign_proc : process(tmp_105_reg_2782, ap_reg_ioackin_bgmodel_mean_WREADY, ap_sig_bdd_2457, ap_sig_bdd_2477)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_WREADY)) then
            if (ap_sig_bdd_2477) then 
                bgmodel_mean_WDATA <= tmp_105_reg_2782;
            elsif (ap_sig_bdd_2457) then 
                bgmodel_mean_WDATA <= ap_const_lv32_0;
            else 
                bgmodel_mean_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_mean_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_mean_WID <= ap_const_lv1_0;
    bgmodel_mean_WLAST <= ap_const_logic_0;
    bgmodel_mean_WSTRB <= ap_const_lv4_F;
    bgmodel_mean_WUSER <= ap_const_lv1_0;

    -- bgmodel_mean_WVALID assign process. --
    bgmodel_mean_WVALID_assign_proc : process(ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_reg_ppiten_pp3_it19, ap_sig_cseq_ST_st3_fsm_2, exitcond2_fu_1614_p2, ap_reg_ioackin_bgmodel_mean_WREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_mean_WREADY)))) then 
            bgmodel_mean_WVALID <= ap_const_logic_1;
        else 
            bgmodel_mean_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    bgmodel_sortKey_ARADDR <= tmp_131_fu_1712_p1(32 - 1 downto 0);
    bgmodel_sortKey_ARBURST <= ap_const_lv2_0;
    bgmodel_sortKey_ARCACHE <= ap_const_lv4_0;
    bgmodel_sortKey_ARID <= ap_const_lv1_0;
    bgmodel_sortKey_ARLEN <= ap_const_lv32_3C00;
    bgmodel_sortKey_ARLOCK <= ap_const_lv2_0;
    bgmodel_sortKey_ARPROT <= ap_const_lv3_0;
    bgmodel_sortKey_ARQOS <= ap_const_lv4_0;
    bgmodel_sortKey_ARREGION <= ap_const_lv4_0;
    bgmodel_sortKey_ARSIZE <= ap_const_lv3_0;
    bgmodel_sortKey_ARUSER <= ap_const_lv1_0;

    -- bgmodel_sortKey_ARVALID assign process. --
    bgmodel_sortKey_ARVALID_assign_proc : process(ap_sig_cseq_ST_st48_fsm_47, ap_reg_ioackin_bgmodel_sortKey_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_ARREADY))) then 
            bgmodel_sortKey_ARVALID <= ap_const_logic_1;
        else 
            bgmodel_sortKey_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_sortKey_AWADDR assign process. --
    bgmodel_sortKey_AWADDR_assign_proc : process(bgmodel_sortKey_addr_reg_2361, ap_reg_ioackin_bgmodel_sortKey_AWREADY, ap_sig_bdd_2447, ap_sig_bdd_2471)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_AWREADY)) then
            if (ap_sig_bdd_2471) then 
                bgmodel_sortKey_AWADDR <= bgmodel_sortKey_addr_reg_2361;
            elsif (ap_sig_bdd_2447) then 
                bgmodel_sortKey_AWADDR <= ap_const_lv32_0;
            else 
                bgmodel_sortKey_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_sortKey_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_sortKey_AWBURST <= ap_const_lv2_0;
    bgmodel_sortKey_AWCACHE <= ap_const_lv4_0;
    bgmodel_sortKey_AWID <= ap_const_lv1_0;

    -- bgmodel_sortKey_AWLEN assign process. --
    bgmodel_sortKey_AWLEN_assign_proc : process(ap_reg_ioackin_bgmodel_sortKey_AWREADY, ap_sig_bdd_2447, ap_sig_bdd_2471)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_AWREADY)) then
            if (ap_sig_bdd_2471) then 
                bgmodel_sortKey_AWLEN <= ap_const_lv32_3C00;
            elsif (ap_sig_bdd_2447) then 
                bgmodel_sortKey_AWLEN <= ap_const_lv32_25800;
            else 
                bgmodel_sortKey_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_sortKey_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_sortKey_AWLOCK <= ap_const_lv2_0;
    bgmodel_sortKey_AWPROT <= ap_const_lv3_0;
    bgmodel_sortKey_AWQOS <= ap_const_lv4_0;
    bgmodel_sortKey_AWREGION <= ap_const_lv4_0;
    bgmodel_sortKey_AWSIZE <= ap_const_lv3_0;
    bgmodel_sortKey_AWUSER <= ap_const_lv1_0;

    -- bgmodel_sortKey_AWVALID assign process. --
    bgmodel_sortKey_AWVALID_assign_proc : process(gmem_BVALID, ap_sig_cseq_ST_st2_fsm_1, or_cond4_fu_1608_p2, ap_sig_cseq_ST_st125_fsm_73, ap_reg_ioackin_bgmodel_sortKey_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not((gmem_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_AWREADY)))) then 
            bgmodel_sortKey_AWVALID <= ap_const_logic_1;
        else 
            bgmodel_sortKey_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_sortKey_BREADY assign process. --
    bgmodel_sortKey_BREADY_assign_proc : process(or_cond4_reg_2302, ap_sig_cseq_ST_st7_fsm_6, ap_sig_bdd_1612, ap_sig_cseq_ST_st150_fsm_79, ap_sig_bdd_2341)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = or_cond4_reg_2302)) and not(ap_sig_bdd_1612)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st150_fsm_79) and not(ap_sig_bdd_2341)))) then 
            bgmodel_sortKey_BREADY <= ap_const_logic_1;
        else 
            bgmodel_sortKey_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_sortKey_RREADY assign process. --
    bgmodel_sortKey_RREADY_assign_proc : process(ap_reg_ppstg_exitcond5_reg_2385_pp0_it15, ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16)
    begin
        if (((ap_reg_ppstg_exitcond5_reg_2385_pp0_it15 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))))) then 
            bgmodel_sortKey_RREADY <= ap_const_logic_1;
        else 
            bgmodel_sortKey_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_sortKey_WDATA assign process. --
    bgmodel_sortKey_WDATA_assign_proc : process(tmp_103_reg_2772, ap_reg_ioackin_bgmodel_sortKey_WREADY, ap_sig_bdd_2457, ap_sig_bdd_2477)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_WREADY)) then
            if (ap_sig_bdd_2477) then 
                bgmodel_sortKey_WDATA <= tmp_103_reg_2772;
            elsif (ap_sig_bdd_2457) then 
                bgmodel_sortKey_WDATA <= ap_const_lv32_0;
            else 
                bgmodel_sortKey_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_sortKey_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_sortKey_WID <= ap_const_lv1_0;
    bgmodel_sortKey_WLAST <= ap_const_logic_0;
    bgmodel_sortKey_WSTRB <= ap_const_lv4_F;
    bgmodel_sortKey_WUSER <= ap_const_lv1_0;

    -- bgmodel_sortKey_WVALID assign process. --
    bgmodel_sortKey_WVALID_assign_proc : process(ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_reg_ppiten_pp3_it19, ap_sig_cseq_ST_st3_fsm_2, exitcond2_fu_1614_p2, ap_reg_ioackin_bgmodel_sortKey_WREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_sortKey_WREADY)))) then 
            bgmodel_sortKey_WVALID <= ap_const_logic_1;
        else 
            bgmodel_sortKey_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    bgmodel_var_ARADDR <= tmp_131_fu_1712_p1(32 - 1 downto 0);
    bgmodel_var_ARBURST <= ap_const_lv2_0;
    bgmodel_var_ARCACHE <= ap_const_lv4_0;
    bgmodel_var_ARID <= ap_const_lv1_0;
    bgmodel_var_ARLEN <= ap_const_lv32_3C00;
    bgmodel_var_ARLOCK <= ap_const_lv2_0;
    bgmodel_var_ARPROT <= ap_const_lv3_0;
    bgmodel_var_ARQOS <= ap_const_lv4_0;
    bgmodel_var_ARREGION <= ap_const_lv4_0;
    bgmodel_var_ARSIZE <= ap_const_lv3_0;
    bgmodel_var_ARUSER <= ap_const_lv1_0;

    -- bgmodel_var_ARVALID assign process. --
    bgmodel_var_ARVALID_assign_proc : process(ap_sig_cseq_ST_st48_fsm_47, ap_reg_ioackin_bgmodel_var_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_ARREADY))) then 
            bgmodel_var_ARVALID <= ap_const_logic_1;
        else 
            bgmodel_var_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_var_AWADDR assign process. --
    bgmodel_var_AWADDR_assign_proc : process(bgmodel_var_addr_reg_2379, ap_reg_ioackin_bgmodel_var_AWREADY, ap_sig_bdd_2447, ap_sig_bdd_2471)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_AWREADY)) then
            if (ap_sig_bdd_2471) then 
                bgmodel_var_AWADDR <= bgmodel_var_addr_reg_2379;
            elsif (ap_sig_bdd_2447) then 
                bgmodel_var_AWADDR <= ap_const_lv32_0;
            else 
                bgmodel_var_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_var_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_var_AWBURST <= ap_const_lv2_0;
    bgmodel_var_AWCACHE <= ap_const_lv4_0;
    bgmodel_var_AWID <= ap_const_lv1_0;

    -- bgmodel_var_AWLEN assign process. --
    bgmodel_var_AWLEN_assign_proc : process(ap_reg_ioackin_bgmodel_var_AWREADY, ap_sig_bdd_2447, ap_sig_bdd_2471)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_AWREADY)) then
            if (ap_sig_bdd_2471) then 
                bgmodel_var_AWLEN <= ap_const_lv32_3C00;
            elsif (ap_sig_bdd_2447) then 
                bgmodel_var_AWLEN <= ap_const_lv32_25800;
            else 
                bgmodel_var_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_var_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_var_AWLOCK <= ap_const_lv2_0;
    bgmodel_var_AWPROT <= ap_const_lv3_0;
    bgmodel_var_AWQOS <= ap_const_lv4_0;
    bgmodel_var_AWREGION <= ap_const_lv4_0;
    bgmodel_var_AWSIZE <= ap_const_lv3_0;
    bgmodel_var_AWUSER <= ap_const_lv1_0;

    -- bgmodel_var_AWVALID assign process. --
    bgmodel_var_AWVALID_assign_proc : process(gmem_BVALID, ap_sig_cseq_ST_st2_fsm_1, or_cond4_fu_1608_p2, ap_sig_cseq_ST_st125_fsm_73, ap_reg_ioackin_bgmodel_var_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not((gmem_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_AWREADY)))) then 
            bgmodel_var_AWVALID <= ap_const_logic_1;
        else 
            bgmodel_var_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_var_BREADY assign process. --
    bgmodel_var_BREADY_assign_proc : process(or_cond4_reg_2302, ap_sig_cseq_ST_st7_fsm_6, ap_sig_bdd_1612, ap_sig_cseq_ST_st150_fsm_79, ap_sig_bdd_2341)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = or_cond4_reg_2302)) and not(ap_sig_bdd_1612)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st150_fsm_79) and not(ap_sig_bdd_2341)))) then 
            bgmodel_var_BREADY <= ap_const_logic_1;
        else 
            bgmodel_var_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_var_RREADY assign process. --
    bgmodel_var_RREADY_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))))) then 
            bgmodel_var_RREADY <= ap_const_logic_1;
        else 
            bgmodel_var_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_var_WDATA assign process. --
    bgmodel_var_WDATA_assign_proc : process(tmp_106_reg_2787, ap_reg_ioackin_bgmodel_var_WREADY, ap_sig_bdd_2457, ap_sig_bdd_2477)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_WREADY)) then
            if (ap_sig_bdd_2477) then 
                bgmodel_var_WDATA <= tmp_106_reg_2787;
            elsif (ap_sig_bdd_2457) then 
                bgmodel_var_WDATA <= ap_const_lv32_0;
            else 
                bgmodel_var_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_var_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_var_WID <= ap_const_lv1_0;
    bgmodel_var_WLAST <= ap_const_logic_0;
    bgmodel_var_WSTRB <= ap_const_lv4_F;
    bgmodel_var_WUSER <= ap_const_lv1_0;

    -- bgmodel_var_WVALID assign process. --
    bgmodel_var_WVALID_assign_proc : process(ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_reg_ppiten_pp3_it19, ap_sig_cseq_ST_st3_fsm_2, exitcond2_fu_1614_p2, ap_reg_ioackin_bgmodel_var_WREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_var_WREADY)))) then 
            bgmodel_var_WVALID <= ap_const_logic_1;
        else 
            bgmodel_var_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    bgmodel_weight_ARADDR <= tmp_131_fu_1712_p1(32 - 1 downto 0);
    bgmodel_weight_ARBURST <= ap_const_lv2_0;
    bgmodel_weight_ARCACHE <= ap_const_lv4_0;
    bgmodel_weight_ARID <= ap_const_lv1_0;
    bgmodel_weight_ARLEN <= ap_const_lv32_3C00;
    bgmodel_weight_ARLOCK <= ap_const_lv2_0;
    bgmodel_weight_ARPROT <= ap_const_lv3_0;
    bgmodel_weight_ARQOS <= ap_const_lv4_0;
    bgmodel_weight_ARREGION <= ap_const_lv4_0;
    bgmodel_weight_ARSIZE <= ap_const_lv3_0;
    bgmodel_weight_ARUSER <= ap_const_lv1_0;

    -- bgmodel_weight_ARVALID assign process. --
    bgmodel_weight_ARVALID_assign_proc : process(ap_sig_cseq_ST_st48_fsm_47, ap_reg_ioackin_bgmodel_weight_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_ARREADY))) then 
            bgmodel_weight_ARVALID <= ap_const_logic_1;
        else 
            bgmodel_weight_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_weight_AWADDR assign process. --
    bgmodel_weight_AWADDR_assign_proc : process(bgmodel_weight_addr_reg_2367, ap_reg_ioackin_bgmodel_weight_AWREADY, ap_sig_bdd_2447, ap_sig_bdd_2471)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_AWREADY)) then
            if (ap_sig_bdd_2471) then 
                bgmodel_weight_AWADDR <= bgmodel_weight_addr_reg_2367;
            elsif (ap_sig_bdd_2447) then 
                bgmodel_weight_AWADDR <= ap_const_lv32_0;
            else 
                bgmodel_weight_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_weight_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_weight_AWBURST <= ap_const_lv2_0;
    bgmodel_weight_AWCACHE <= ap_const_lv4_0;
    bgmodel_weight_AWID <= ap_const_lv1_0;

    -- bgmodel_weight_AWLEN assign process. --
    bgmodel_weight_AWLEN_assign_proc : process(ap_reg_ioackin_bgmodel_weight_AWREADY, ap_sig_bdd_2447, ap_sig_bdd_2471)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_AWREADY)) then
            if (ap_sig_bdd_2471) then 
                bgmodel_weight_AWLEN <= ap_const_lv32_3C00;
            elsif (ap_sig_bdd_2447) then 
                bgmodel_weight_AWLEN <= ap_const_lv32_25800;
            else 
                bgmodel_weight_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_weight_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_weight_AWLOCK <= ap_const_lv2_0;
    bgmodel_weight_AWPROT <= ap_const_lv3_0;
    bgmodel_weight_AWQOS <= ap_const_lv4_0;
    bgmodel_weight_AWREGION <= ap_const_lv4_0;
    bgmodel_weight_AWSIZE <= ap_const_lv3_0;
    bgmodel_weight_AWUSER <= ap_const_lv1_0;

    -- bgmodel_weight_AWVALID assign process. --
    bgmodel_weight_AWVALID_assign_proc : process(gmem_BVALID, ap_sig_cseq_ST_st2_fsm_1, or_cond4_fu_1608_p2, ap_sig_cseq_ST_st125_fsm_73, ap_reg_ioackin_bgmodel_weight_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = or_cond4_fu_1608_p2)) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_AWREADY) and not((gmem_BVALID = ap_const_logic_0))))) then 
            bgmodel_weight_AWVALID <= ap_const_logic_1;
        else 
            bgmodel_weight_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_weight_BREADY assign process. --
    bgmodel_weight_BREADY_assign_proc : process(or_cond4_reg_2302, ap_sig_cseq_ST_st7_fsm_6, ap_sig_bdd_1612, ap_sig_cseq_ST_st150_fsm_79, ap_sig_bdd_2341)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = or_cond4_reg_2302)) and not(ap_sig_bdd_1612)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st150_fsm_79) and not(ap_sig_bdd_2341)))) then 
            bgmodel_weight_BREADY <= ap_const_logic_1;
        else 
            bgmodel_weight_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_weight_RREADY assign process. --
    bgmodel_weight_RREADY_assign_proc : process(ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))))) then 
            bgmodel_weight_RREADY <= ap_const_logic_1;
        else 
            bgmodel_weight_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- bgmodel_weight_WDATA assign process. --
    bgmodel_weight_WDATA_assign_proc : process(tmp_104_reg_2777, ap_reg_ioackin_bgmodel_weight_WREADY, ap_sig_bdd_2457, ap_sig_bdd_2477)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_WREADY)) then
            if (ap_sig_bdd_2477) then 
                bgmodel_weight_WDATA <= tmp_104_reg_2777;
            elsif (ap_sig_bdd_2457) then 
                bgmodel_weight_WDATA <= ap_const_lv32_0;
            else 
                bgmodel_weight_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            bgmodel_weight_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bgmodel_weight_WID <= ap_const_lv1_0;
    bgmodel_weight_WLAST <= ap_const_logic_0;
    bgmodel_weight_WSTRB <= ap_const_lv4_F;
    bgmodel_weight_WUSER <= ap_const_lv1_0;

    -- bgmodel_weight_WVALID assign process. --
    bgmodel_weight_WVALID_assign_proc : process(ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_reg_ppiten_pp3_it19, ap_sig_cseq_ST_st3_fsm_2, exitcond2_fu_1614_p2, ap_reg_ioackin_bgmodel_weight_WREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond2_fu_1614_p2) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19) and (ap_const_logic_0 = ap_reg_ioackin_bgmodel_weight_WREADY)))) then 
            bgmodel_weight_WVALID <= ap_const_logic_1;
        else 
            bgmodel_weight_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_1667_p2 <= "1" when (x_reg_1308 = ap_const_lv4_A) else "0";
    exitcond2_fu_1614_p2 <= "1" when (p_reg_1277 = ap_const_lv18_25800) else "0";
    exitcond4_fu_2023_p2 <= "1" when (indvar1_phi_fu_1381_p4 = ap_const_lv13_1E00) else "0";
    exitcond5_fu_1744_p2 <= "1" when (indvar2_phi_fu_1324_p4 = ap_const_lv14_3C00) else "0";
    exitcond6_fu_1867_p2 <= "1" when (indvar_phi_fu_1347_p4 = ap_const_lv13_1E00) else "0";
    exitcond7_fu_2094_p2 <= "1" when (indvar3_phi_fu_1404_p4 = ap_const_lv14_3C00) else "0";
    exitcond_fu_1913_p2 <= "1" when (r_reg_1366 = ap_const_lv4_8) else "0";

    -- frame_in_glob_0_address0 assign process. --
    frame_in_glob_0_address0_assign_proc : process(ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_0_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex30_fu_1901_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            frame_in_glob_0_address0 <= newIndex30_fu_1901_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_0_address0 <= grp_backsub_process_fu_1423_frame_in_0_address0;
        else 
            frame_in_glob_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_in_glob_0_ce0 assign process. --
    frame_in_glob_0_ce0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_0_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            frame_in_glob_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_0_ce0 <= grp_backsub_process_fu_1423_frame_in_0_ce0;
        else 
            frame_in_glob_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_in_glob_0_d0 <= gmem_addr_read_reg_2480;

    -- frame_in_glob_0_we0 assign process. --
    frame_in_glob_0_we0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, ap_reg_ppstg_tmp_137_reg_2476_pp1_it15)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_0)))) then 
            frame_in_glob_0_we0 <= ap_const_logic_1;
        else 
            frame_in_glob_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_in_glob_1_address0 assign process. --
    frame_in_glob_1_address0_assign_proc : process(ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_1_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex30_fu_1901_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            frame_in_glob_1_address0 <= newIndex30_fu_1901_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_1_address0 <= grp_backsub_process_fu_1423_frame_in_1_address0;
        else 
            frame_in_glob_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_in_glob_1_ce0 assign process. --
    frame_in_glob_1_ce0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_1_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            frame_in_glob_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_1_ce0 <= grp_backsub_process_fu_1423_frame_in_1_ce0;
        else 
            frame_in_glob_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_in_glob_1_d0 <= gmem_addr_read_reg_2480;

    -- frame_in_glob_1_we0 assign process. --
    frame_in_glob_1_we0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, ap_reg_ppstg_tmp_137_reg_2476_pp1_it15)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_1)))) then 
            frame_in_glob_1_we0 <= ap_const_logic_1;
        else 
            frame_in_glob_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_in_glob_2_address0 assign process. --
    frame_in_glob_2_address0_assign_proc : process(ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_2_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex30_fu_1901_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            frame_in_glob_2_address0 <= newIndex30_fu_1901_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_2_address0 <= grp_backsub_process_fu_1423_frame_in_2_address0;
        else 
            frame_in_glob_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_in_glob_2_ce0 assign process. --
    frame_in_glob_2_ce0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_2_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            frame_in_glob_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_2_ce0 <= grp_backsub_process_fu_1423_frame_in_2_ce0;
        else 
            frame_in_glob_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_in_glob_2_d0 <= gmem_addr_read_reg_2480;

    -- frame_in_glob_2_we0 assign process. --
    frame_in_glob_2_we0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, ap_reg_ppstg_tmp_137_reg_2476_pp1_it15)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_2)))) then 
            frame_in_glob_2_we0 <= ap_const_logic_1;
        else 
            frame_in_glob_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_in_glob_3_address0 assign process. --
    frame_in_glob_3_address0_assign_proc : process(ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_3_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex30_fu_1901_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            frame_in_glob_3_address0 <= newIndex30_fu_1901_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_3_address0 <= grp_backsub_process_fu_1423_frame_in_3_address0;
        else 
            frame_in_glob_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_in_glob_3_ce0 assign process. --
    frame_in_glob_3_ce0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_3_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            frame_in_glob_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_3_ce0 <= grp_backsub_process_fu_1423_frame_in_3_ce0;
        else 
            frame_in_glob_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_in_glob_3_d0 <= gmem_addr_read_reg_2480;

    -- frame_in_glob_3_we0 assign process. --
    frame_in_glob_3_we0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, ap_reg_ppstg_tmp_137_reg_2476_pp1_it15)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_3)))) then 
            frame_in_glob_3_we0 <= ap_const_logic_1;
        else 
            frame_in_glob_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_in_glob_4_address0 assign process. --
    frame_in_glob_4_address0_assign_proc : process(ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_4_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex30_fu_1901_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            frame_in_glob_4_address0 <= newIndex30_fu_1901_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_4_address0 <= grp_backsub_process_fu_1423_frame_in_4_address0;
        else 
            frame_in_glob_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_in_glob_4_ce0 assign process. --
    frame_in_glob_4_ce0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_4_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            frame_in_glob_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_4_ce0 <= grp_backsub_process_fu_1423_frame_in_4_ce0;
        else 
            frame_in_glob_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_in_glob_4_d0 <= gmem_addr_read_reg_2480;

    -- frame_in_glob_4_we0 assign process. --
    frame_in_glob_4_we0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, ap_reg_ppstg_tmp_137_reg_2476_pp1_it15)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_4)))) then 
            frame_in_glob_4_we0 <= ap_const_logic_1;
        else 
            frame_in_glob_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_in_glob_5_address0 assign process. --
    frame_in_glob_5_address0_assign_proc : process(ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_5_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex30_fu_1901_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            frame_in_glob_5_address0 <= newIndex30_fu_1901_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_5_address0 <= grp_backsub_process_fu_1423_frame_in_5_address0;
        else 
            frame_in_glob_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_in_glob_5_ce0 assign process. --
    frame_in_glob_5_ce0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_5_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            frame_in_glob_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_5_ce0 <= grp_backsub_process_fu_1423_frame_in_5_ce0;
        else 
            frame_in_glob_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_in_glob_5_d0 <= gmem_addr_read_reg_2480;

    -- frame_in_glob_5_we0 assign process. --
    frame_in_glob_5_we0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, ap_reg_ppstg_tmp_137_reg_2476_pp1_it15)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_5)))) then 
            frame_in_glob_5_we0 <= ap_const_logic_1;
        else 
            frame_in_glob_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_in_glob_6_address0 assign process. --
    frame_in_glob_6_address0_assign_proc : process(ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_6_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex30_fu_1901_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            frame_in_glob_6_address0 <= newIndex30_fu_1901_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_6_address0 <= grp_backsub_process_fu_1423_frame_in_6_address0;
        else 
            frame_in_glob_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_in_glob_6_ce0 assign process. --
    frame_in_glob_6_ce0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_6_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            frame_in_glob_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_6_ce0 <= grp_backsub_process_fu_1423_frame_in_6_ce0;
        else 
            frame_in_glob_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_in_glob_6_d0 <= gmem_addr_read_reg_2480;

    -- frame_in_glob_6_we0 assign process. --
    frame_in_glob_6_we0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, ap_reg_ppstg_tmp_137_reg_2476_pp1_it15)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and (ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_6)))) then 
            frame_in_glob_6_we0 <= ap_const_logic_1;
        else 
            frame_in_glob_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_in_glob_7_address0 assign process. --
    frame_in_glob_7_address0_assign_proc : process(ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_7_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex30_fu_1901_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            frame_in_glob_7_address0 <= newIndex30_fu_1901_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_7_address0 <= grp_backsub_process_fu_1423_frame_in_7_address0;
        else 
            frame_in_glob_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_in_glob_7_ce0 assign process. --
    frame_in_glob_7_ce0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, grp_backsub_process_fu_1423_frame_in_7_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            frame_in_glob_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_in_glob_7_ce0 <= grp_backsub_process_fu_1423_frame_in_7_ce0;
        else 
            frame_in_glob_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_in_glob_7_d0 <= gmem_addr_read_reg_2480;

    -- frame_in_glob_7_we0 assign process. --
    frame_in_glob_7_we0_assign_proc : process(ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16, ap_reg_ppstg_tmp_137_reg_2476_pp1_it15)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))) and not((ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_6)) and not((ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_5)) and not((ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_4)) and not((ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_3)) and not((ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_2)) and not((ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_1)) and not((ap_reg_ppstg_tmp_137_reg_2476_pp1_it15 = ap_const_lv4_0))))) then 
            frame_in_glob_7_we0 <= ap_const_logic_1;
        else 
            frame_in_glob_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_out_glob_0_address0 assign process. --
    frame_out_glob_0_address0_assign_proc : process(ap_reg_ppiten_pp2_it16, grp_backsub_process_fu_1423_frame_out_0_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex31_fu_2057_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it16)) then 
            frame_out_glob_0_address0 <= newIndex31_fu_2057_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_0_address0 <= grp_backsub_process_fu_1423_frame_out_0_address0;
        else 
            frame_out_glob_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_out_glob_0_ce0 assign process. --
    frame_out_glob_0_ce0_assign_proc : process(ap_reg_ppiten_pp2_it16, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18, grp_backsub_process_fu_1423_frame_out_0_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it16) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then 
            frame_out_glob_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_0_ce0 <= grp_backsub_process_fu_1423_frame_out_0_ce0;
        else 
            frame_out_glob_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_out_glob_0_d0 <= grp_backsub_process_fu_1423_frame_out_0_d0;

    -- frame_out_glob_0_we0 assign process. --
    frame_out_glob_0_we0_assign_proc : process(grp_backsub_process_fu_1423_frame_out_0_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_0_we0 <= grp_backsub_process_fu_1423_frame_out_0_we0;
        else 
            frame_out_glob_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_out_glob_1_address0 assign process. --
    frame_out_glob_1_address0_assign_proc : process(ap_reg_ppiten_pp2_it16, grp_backsub_process_fu_1423_frame_out_1_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex31_fu_2057_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it16)) then 
            frame_out_glob_1_address0 <= newIndex31_fu_2057_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_1_address0 <= grp_backsub_process_fu_1423_frame_out_1_address0;
        else 
            frame_out_glob_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_out_glob_1_ce0 assign process. --
    frame_out_glob_1_ce0_assign_proc : process(ap_reg_ppiten_pp2_it16, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18, grp_backsub_process_fu_1423_frame_out_1_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it16) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then 
            frame_out_glob_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_1_ce0 <= grp_backsub_process_fu_1423_frame_out_1_ce0;
        else 
            frame_out_glob_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_out_glob_1_d0 <= grp_backsub_process_fu_1423_frame_out_1_d0;

    -- frame_out_glob_1_we0 assign process. --
    frame_out_glob_1_we0_assign_proc : process(grp_backsub_process_fu_1423_frame_out_1_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_1_we0 <= grp_backsub_process_fu_1423_frame_out_1_we0;
        else 
            frame_out_glob_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_out_glob_2_address0 assign process. --
    frame_out_glob_2_address0_assign_proc : process(ap_reg_ppiten_pp2_it16, grp_backsub_process_fu_1423_frame_out_2_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex31_fu_2057_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it16)) then 
            frame_out_glob_2_address0 <= newIndex31_fu_2057_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_2_address0 <= grp_backsub_process_fu_1423_frame_out_2_address0;
        else 
            frame_out_glob_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_out_glob_2_ce0 assign process. --
    frame_out_glob_2_ce0_assign_proc : process(ap_reg_ppiten_pp2_it16, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18, grp_backsub_process_fu_1423_frame_out_2_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it16) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then 
            frame_out_glob_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_2_ce0 <= grp_backsub_process_fu_1423_frame_out_2_ce0;
        else 
            frame_out_glob_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_out_glob_2_d0 <= grp_backsub_process_fu_1423_frame_out_2_d0;

    -- frame_out_glob_2_we0 assign process. --
    frame_out_glob_2_we0_assign_proc : process(grp_backsub_process_fu_1423_frame_out_2_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_2_we0 <= grp_backsub_process_fu_1423_frame_out_2_we0;
        else 
            frame_out_glob_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_out_glob_3_address0 assign process. --
    frame_out_glob_3_address0_assign_proc : process(ap_reg_ppiten_pp2_it16, grp_backsub_process_fu_1423_frame_out_3_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex31_fu_2057_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it16)) then 
            frame_out_glob_3_address0 <= newIndex31_fu_2057_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_3_address0 <= grp_backsub_process_fu_1423_frame_out_3_address0;
        else 
            frame_out_glob_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_out_glob_3_ce0 assign process. --
    frame_out_glob_3_ce0_assign_proc : process(ap_reg_ppiten_pp2_it16, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18, grp_backsub_process_fu_1423_frame_out_3_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it16) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then 
            frame_out_glob_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_3_ce0 <= grp_backsub_process_fu_1423_frame_out_3_ce0;
        else 
            frame_out_glob_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_out_glob_3_d0 <= grp_backsub_process_fu_1423_frame_out_3_d0;

    -- frame_out_glob_3_we0 assign process. --
    frame_out_glob_3_we0_assign_proc : process(grp_backsub_process_fu_1423_frame_out_3_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_3_we0 <= grp_backsub_process_fu_1423_frame_out_3_we0;
        else 
            frame_out_glob_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_out_glob_4_address0 assign process. --
    frame_out_glob_4_address0_assign_proc : process(ap_reg_ppiten_pp2_it16, grp_backsub_process_fu_1423_frame_out_4_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex31_fu_2057_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it16)) then 
            frame_out_glob_4_address0 <= newIndex31_fu_2057_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_4_address0 <= grp_backsub_process_fu_1423_frame_out_4_address0;
        else 
            frame_out_glob_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_out_glob_4_ce0 assign process. --
    frame_out_glob_4_ce0_assign_proc : process(ap_reg_ppiten_pp2_it16, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18, grp_backsub_process_fu_1423_frame_out_4_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it16) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then 
            frame_out_glob_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_4_ce0 <= grp_backsub_process_fu_1423_frame_out_4_ce0;
        else 
            frame_out_glob_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_out_glob_4_d0 <= grp_backsub_process_fu_1423_frame_out_4_d0;

    -- frame_out_glob_4_we0 assign process. --
    frame_out_glob_4_we0_assign_proc : process(grp_backsub_process_fu_1423_frame_out_4_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_4_we0 <= grp_backsub_process_fu_1423_frame_out_4_we0;
        else 
            frame_out_glob_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_out_glob_5_address0 assign process. --
    frame_out_glob_5_address0_assign_proc : process(ap_reg_ppiten_pp2_it16, grp_backsub_process_fu_1423_frame_out_5_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex31_fu_2057_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it16)) then 
            frame_out_glob_5_address0 <= newIndex31_fu_2057_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_5_address0 <= grp_backsub_process_fu_1423_frame_out_5_address0;
        else 
            frame_out_glob_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_out_glob_5_ce0 assign process. --
    frame_out_glob_5_ce0_assign_proc : process(ap_reg_ppiten_pp2_it16, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18, grp_backsub_process_fu_1423_frame_out_5_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it16) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then 
            frame_out_glob_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_5_ce0 <= grp_backsub_process_fu_1423_frame_out_5_ce0;
        else 
            frame_out_glob_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_out_glob_5_d0 <= grp_backsub_process_fu_1423_frame_out_5_d0;

    -- frame_out_glob_5_we0 assign process. --
    frame_out_glob_5_we0_assign_proc : process(grp_backsub_process_fu_1423_frame_out_5_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_5_we0 <= grp_backsub_process_fu_1423_frame_out_5_we0;
        else 
            frame_out_glob_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_out_glob_6_address0 assign process. --
    frame_out_glob_6_address0_assign_proc : process(ap_reg_ppiten_pp2_it16, grp_backsub_process_fu_1423_frame_out_6_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex31_fu_2057_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it16)) then 
            frame_out_glob_6_address0 <= newIndex31_fu_2057_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_6_address0 <= grp_backsub_process_fu_1423_frame_out_6_address0;
        else 
            frame_out_glob_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_out_glob_6_ce0 assign process. --
    frame_out_glob_6_ce0_assign_proc : process(ap_reg_ppiten_pp2_it16, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18, grp_backsub_process_fu_1423_frame_out_6_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it16) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then 
            frame_out_glob_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_6_ce0 <= grp_backsub_process_fu_1423_frame_out_6_ce0;
        else 
            frame_out_glob_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_out_glob_6_d0 <= grp_backsub_process_fu_1423_frame_out_6_d0;

    -- frame_out_glob_6_we0 assign process. --
    frame_out_glob_6_we0_assign_proc : process(grp_backsub_process_fu_1423_frame_out_6_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_6_we0 <= grp_backsub_process_fu_1423_frame_out_6_we0;
        else 
            frame_out_glob_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_out_glob_7_address0 assign process. --
    frame_out_glob_7_address0_assign_proc : process(ap_reg_ppiten_pp2_it16, grp_backsub_process_fu_1423_frame_out_7_address0, ap_sig_cseq_ST_st100_fsm_66, newIndex31_fu_2057_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it16)) then 
            frame_out_glob_7_address0 <= newIndex31_fu_2057_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_7_address0 <= grp_backsub_process_fu_1423_frame_out_7_address0;
        else 
            frame_out_glob_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- frame_out_glob_7_ce0 assign process. --
    frame_out_glob_7_ce0_assign_proc : process(ap_reg_ppiten_pp2_it16, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18, grp_backsub_process_fu_1423_frame_out_7_ce0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it16) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then 
            frame_out_glob_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_7_ce0 <= grp_backsub_process_fu_1423_frame_out_7_ce0;
        else 
            frame_out_glob_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    frame_out_glob_7_d0 <= grp_backsub_process_fu_1423_frame_out_7_d0;

    -- frame_out_glob_7_we0 assign process. --
    frame_out_glob_7_we0_assign_proc : process(grp_backsub_process_fu_1423_frame_out_7_we0, ap_sig_cseq_ST_st100_fsm_66)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_66)) then 
            frame_out_glob_7_we0 <= grp_backsub_process_fu_1423_frame_out_7_we0;
        else 
            frame_out_glob_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    gmem_ARADDR <= gmem_addr_reg_2456;
    gmem_ARBURST <= ap_const_lv2_0;
    gmem_ARCACHE <= ap_const_lv4_0;
    gmem_ARID <= ap_const_lv1_0;
    gmem_ARLEN <= ap_const_lv32_1E00;
    gmem_ARLOCK <= ap_const_lv2_0;
    gmem_ARPROT <= ap_const_lv3_0;
    gmem_ARQOS <= ap_const_lv4_0;
    gmem_ARREGION <= ap_const_lv4_0;
    gmem_ARSIZE <= ap_const_lv3_0;
    gmem_ARUSER <= ap_const_lv1_0;

    -- gmem_ARVALID assign process. --
    gmem_ARVALID_assign_proc : process(ap_reg_ioackin_gmem_ARREADY, ap_sig_cseq_ST_st74_fsm_56)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_56) and (ap_const_logic_0 = ap_reg_ioackin_gmem_ARREADY))) then 
            gmem_ARVALID <= ap_const_logic_1;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    gmem_AWADDR <= gmem_addr_1_reg_2510;
    gmem_AWBURST <= ap_const_lv2_0;
    gmem_AWCACHE <= ap_const_lv4_0;
    gmem_AWID <= ap_const_lv1_0;
    gmem_AWLEN <= ap_const_lv32_1E00;
    gmem_AWLOCK <= ap_const_lv2_0;
    gmem_AWPROT <= ap_const_lv3_0;
    gmem_AWQOS <= ap_const_lv4_0;
    gmem_AWREGION <= ap_const_lv4_0;
    gmem_AWSIZE <= ap_const_lv3_0;
    gmem_AWUSER <= ap_const_lv1_0;

    -- gmem_AWVALID assign process. --
    gmem_AWVALID_assign_proc : process(ap_sig_cseq_ST_st101_fsm_67, ap_reg_ioackin_gmem_AWREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st101_fsm_67) and (ap_const_logic_0 = ap_reg_ioackin_gmem_AWREADY))) then 
            gmem_AWVALID <= ap_const_logic_1;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- gmem_BREADY assign process. --
    gmem_BREADY_assign_proc : process(gmem_BVALID, ap_sig_ioackin_bgmodel_weight_AWREADY, ap_sig_ioackin_bgmodel_sortKey_AWREADY, ap_sig_ioackin_bgmodel_mean_AWREADY, ap_sig_ioackin_bgmodel_var_AWREADY, ap_sig_cseq_ST_st125_fsm_73)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st125_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_AWREADY) or (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_AWREADY) or (gmem_BVALID = ap_const_logic_0))))) then 
            gmem_BREADY <= ap_const_logic_1;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- gmem_RREADY assign process. --
    gmem_RREADY_assign_proc : process(ap_reg_ppstg_exitcond6_reg_2462_pp1_it14, ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_2462_pp1_it14) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            gmem_RREADY <= ap_const_logic_1;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    gmem_WDATA <= tmp_102_reg_2588;
    gmem_WID <= ap_const_lv1_0;
    gmem_WLAST <= ap_const_logic_0;
    gmem_WSTRB <= ap_const_lv1_1;
    gmem_WUSER <= ap_const_lv1_0;

    -- gmem_WVALID assign process. --
    gmem_WVALID_assign_proc : process(ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_reg_ppiten_pp2_it18, ap_reg_ioackin_gmem_WREADY)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18) and (ap_const_logic_0 = ap_reg_ioackin_gmem_WREADY))) then 
            gmem_WVALID <= ap_const_logic_1;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_backsub_process_fu_1423_ap_start <= grp_backsub_process_fu_1423_ap_start_ap_start_reg;
    grp_backsub_process_fu_1423_bgmodel_0_mean_q0 <= bgmo_mean_0_q0;
    grp_backsub_process_fu_1423_bgmodel_0_sortKey_q0 <= bgmo_sortKey_0_q0;
    grp_backsub_process_fu_1423_bgmodel_0_var_q0 <= bgmo_var_0_q0;
    grp_backsub_process_fu_1423_bgmodel_0_weight_q0 <= bgmo_weight_0_q0;
    grp_backsub_process_fu_1423_bgmodel_1_mean_q0 <= bgmo_mean_1_q0;
    grp_backsub_process_fu_1423_bgmodel_1_sortKey_q0 <= bgmo_sortKey_1_q0;
    grp_backsub_process_fu_1423_bgmodel_1_var_q0 <= bgmo_var_1_q0;
    grp_backsub_process_fu_1423_bgmodel_1_weight_q0 <= bgmo_weight_1_q0;
    grp_backsub_process_fu_1423_bgmodel_2_mean_q0 <= bgmo_mean_2_q0;
    grp_backsub_process_fu_1423_bgmodel_2_sortKey_q0 <= bgmo_sortKey_2_q0;
    grp_backsub_process_fu_1423_bgmodel_2_var_q0 <= bgmo_var_2_q0;
    grp_backsub_process_fu_1423_bgmodel_2_weight_q0 <= bgmo_weight_2_q0;
    grp_backsub_process_fu_1423_bgmodel_3_mean_q0 <= bgmo_mean_3_q0;
    grp_backsub_process_fu_1423_bgmodel_3_sortKey_q0 <= bgmo_sortKey_3_q0;
    grp_backsub_process_fu_1423_bgmodel_3_var_q0 <= bgmo_var_3_q0;
    grp_backsub_process_fu_1423_bgmodel_3_weight_q0 <= bgmo_weight_3_q0;
    grp_backsub_process_fu_1423_bgmodel_4_mean_q0 <= bgmo_mean_4_q0;
    grp_backsub_process_fu_1423_bgmodel_4_sortKey_q0 <= bgmo_sortKey_4_q0;
    grp_backsub_process_fu_1423_bgmodel_4_var_q0 <= bgmo_var_4_q0;
    grp_backsub_process_fu_1423_bgmodel_4_weight_q0 <= bgmo_weight_4_q0;
    grp_backsub_process_fu_1423_bgmodel_5_mean_q0 <= bgmo_mean_5_q0;
    grp_backsub_process_fu_1423_bgmodel_5_sortKey_q0 <= bgmo_sortKey_5_q0;
    grp_backsub_process_fu_1423_bgmodel_5_var_q0 <= bgmo_var_5_q0;
    grp_backsub_process_fu_1423_bgmodel_5_weight_q0 <= bgmo_weight_5_q0;
    grp_backsub_process_fu_1423_bgmodel_6_mean_q0 <= bgmo_mean_6_q0;
    grp_backsub_process_fu_1423_bgmodel_6_sortKey_q0 <= bgmo_sortKey_6_q0;
    grp_backsub_process_fu_1423_bgmodel_6_var_q0 <= bgmo_var_6_q0;
    grp_backsub_process_fu_1423_bgmodel_6_weight_q0 <= bgmo_weight_6_q0;
    grp_backsub_process_fu_1423_bgmodel_7_mean_q0 <= bgmo_mean_7_q0;
    grp_backsub_process_fu_1423_bgmodel_7_sortKey_q0 <= bgmo_sortKey_7_q0;
    grp_backsub_process_fu_1423_bgmodel_7_var_q0 <= bgmo_var_7_q0;
    grp_backsub_process_fu_1423_bgmodel_7_weight_q0 <= bgmo_weight_7_q0;
    grp_backsub_process_fu_1423_frame_in_0_q0 <= frame_in_glob_0_q0;
    grp_backsub_process_fu_1423_frame_in_1_q0 <= frame_in_glob_1_q0;
    grp_backsub_process_fu_1423_frame_in_2_q0 <= frame_in_glob_2_q0;
    grp_backsub_process_fu_1423_frame_in_3_q0 <= frame_in_glob_3_q0;
    grp_backsub_process_fu_1423_frame_in_4_q0 <= frame_in_glob_4_q0;
    grp_backsub_process_fu_1423_frame_in_5_q0 <= frame_in_glob_5_q0;
    grp_backsub_process_fu_1423_frame_in_6_q0 <= frame_in_glob_6_q0;
    grp_backsub_process_fu_1423_frame_in_7_q0 <= frame_in_glob_7_q0;
    grp_backsub_process_fu_1423_learningRate <= learningRate_assign_reg_2343;
    grp_backsub_process_fu_1423_tmp_64 <= tmp_60_reg_2515;
    grp_backsub_process_fu_1423_tmp_641 <= tmp_60_reg_2515;
    grp_backsub_process_fu_1423_tmp_66 <= tmp_62_reg_2521;
    grp_backsub_process_fu_1423_tmp_662 <= tmp_62_reg_2521;
    grp_backsub_process_fu_1423_tmp_663 <= tmp_62_reg_2521;
    grp_backsub_process_fu_1423_tmp_664 <= tmp_62_reg_2521;
    grp_fu_1537_opcode <= ap_const_lv5_3;

    -- grp_fu_1537_p0 assign process. --
    grp_fu_1537_p0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, learningRate, learningRate_read_reg_2255, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            grp_fu_1537_p0 <= learningRate_read_reg_2255;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_1537_p0 <= learningRate;
        else 
            grp_fu_1537_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_1537_p1 assign process. --
    grp_fu_1537_p1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            grp_fu_1537_p1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_1537_p1 <= ap_const_lv32_3F800000;
        else 
            grp_fu_1537_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1544_ce <= ap_const_logic_1;
    grp_fu_1549_ce <= ap_const_logic_1;

    -- grp_fu_1772_ce assign process. --
    grp_fu_1772_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_54, ap_sig_bdd_1266, ap_reg_ppiten_pp0_it16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and not((ap_sig_bdd_1266 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it16))))) then 
            grp_fu_1772_ce <= ap_const_logic_1;
        else 
            grp_fu_1772_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1772_p1 <= ap_const_lv14_780(12 - 1 downto 0);

    -- grp_fu_1895_ce assign process. --
    grp_fu_1895_ce_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_63, ap_sig_bdd_1336, ap_reg_ppiten_pp1_it15)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and not((ap_sig_bdd_1336 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it15))))) then 
            grp_fu_1895_ce <= ap_const_logic_1;
        else 
            grp_fu_1895_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1895_p1 <= ap_const_lv13_3C0(11 - 1 downto 0);

    -- grp_fu_2051_ce assign process. --
    grp_fu_2051_ce_assign_proc : process(ap_sig_cseq_ST_pp2_stg0_fsm_68, ap_reg_ppstg_exitcond4_reg_2529_pp2_it17, ap_sig_ioackin_gmem_WREADY, ap_reg_ppiten_pp2_it18)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_2529_pp2_it17) and (ap_const_logic_0 = ap_sig_ioackin_gmem_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it18))))) then 
            grp_fu_2051_ce <= ap_const_logic_1;
        else 
            grp_fu_2051_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2051_p1 <= ap_const_lv13_3C0(11 - 1 downto 0);

    -- grp_fu_2122_ce assign process. --
    grp_fu_2122_ce_assign_proc : process(ap_sig_cseq_ST_pp3_stg0_fsm_74, ap_reg_ppstg_exitcond7_reg_2593_pp3_it18, ap_sig_ioackin_bgmodel_sortKey_WREADY, ap_sig_ioackin_bgmodel_weight_WREADY, ap_sig_ioackin_bgmodel_mean_WREADY, ap_sig_ioackin_bgmodel_var_WREADY, ap_reg_ppiten_pp3_it19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and not(((((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_sortKey_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_weight_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_mean_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_2593_pp3_it18) and (ap_const_logic_0 = ap_sig_ioackin_bgmodel_var_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it19))))) then 
            grp_fu_2122_ce <= ap_const_logic_1;
        else 
            grp_fu_2122_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2122_p1 <= ap_const_lv14_780(12 - 1 downto 0);

    -- indvar1_phi_fu_1381_p4 assign process. --
    indvar1_phi_fu_1381_p4_assign_proc : process(indvar1_reg_1377, ap_sig_cseq_ST_pp2_stg0_fsm_68, ap_reg_ppiten_pp2_it1, exitcond4_reg_2529, indvar_next1_reg_2533)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_68) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = exitcond4_reg_2529))) then 
            indvar1_phi_fu_1381_p4 <= indvar_next1_reg_2533;
        else 
            indvar1_phi_fu_1381_p4 <= indvar1_reg_1377;
        end if; 
    end process;


    -- indvar2_phi_fu_1324_p4 assign process. --
    indvar2_phi_fu_1324_p4_assign_proc : process(indvar2_reg_1320, ap_sig_cseq_ST_pp0_stg0_fsm_54, ap_reg_ppiten_pp0_it1, exitcond5_reg_2385, indvar_next2_reg_2389)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_54) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond5_reg_2385 = ap_const_lv1_0))) then 
            indvar2_phi_fu_1324_p4 <= indvar_next2_reg_2389;
        else 
            indvar2_phi_fu_1324_p4 <= indvar2_reg_1320;
        end if; 
    end process;


    -- indvar3_phi_fu_1404_p4 assign process. --
    indvar3_phi_fu_1404_p4_assign_proc : process(indvar3_reg_1400, ap_sig_cseq_ST_pp3_stg0_fsm_74, ap_reg_ppiten_pp3_it1, exitcond7_reg_2593, indvar_next3_reg_2597)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_74) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and (ap_const_lv1_0 = exitcond7_reg_2593))) then 
            indvar3_phi_fu_1404_p4 <= indvar_next3_reg_2597;
        else 
            indvar3_phi_fu_1404_p4 <= indvar3_reg_1400;
        end if; 
    end process;

    indvar_next1_fu_2029_p2 <= std_logic_vector(unsigned(indvar1_phi_fu_1381_p4) + unsigned(ap_const_lv13_1));
    indvar_next2_fu_1750_p2 <= std_logic_vector(unsigned(indvar2_phi_fu_1324_p4) + unsigned(ap_const_lv14_1));
    indvar_next3_fu_2100_p2 <= std_logic_vector(unsigned(indvar3_phi_fu_1404_p4) + unsigned(ap_const_lv14_1));
    indvar_next_fu_1873_p2 <= std_logic_vector(unsigned(indvar_phi_fu_1347_p4) + unsigned(ap_const_lv13_1));

    -- indvar_phi_fu_1347_p4 assign process. --
    indvar_phi_fu_1347_p4_assign_proc : process(indvar_reg_1343, ap_sig_cseq_ST_pp1_stg0_fsm_63, ap_reg_ppiten_pp1_it1, exitcond6_reg_2462, indvar_next_reg_2466)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_63) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond6_reg_2462))) then 
            indvar_phi_fu_1347_p4 <= indvar_next_reg_2466;
        else 
            indvar_phi_fu_1347_p4 <= indvar_reg_1343;
        end if; 
    end process;

    learningRate_to_int_fu_1568_p1 <= learningRate_read_reg_2255;
    newIndex28_fu_1778_p1 <= std_logic_vector(resize(unsigned(grp_fu_1772_p2),64));
    newIndex30_fu_1901_p1 <= std_logic_vector(resize(unsigned(grp_fu_1895_p2),64));
    newIndex31_fu_2057_p1 <= std_logic_vector(resize(unsigned(grp_fu_2051_p2),64));
    newIndex33_fu_2128_p1 <= std_logic_vector(resize(unsigned(grp_fu_2122_p2),64));
    next_mul1_fu_1879_p2 <= std_logic_vector(unsigned(phi_mul1_reg_1355) + unsigned(ap_const_lv27_2223));
    next_mul2_fu_2035_p2 <= std_logic_vector(unsigned(phi_mul2_reg_1389) + unsigned(ap_const_lv27_2223));
    next_mul3_fu_2106_p2 <= std_logic_vector(unsigned(phi_mul3_reg_1412) + unsigned(ap_const_lv29_4445));
    next_mul_fu_1756_p2 <= std_logic_vector(unsigned(phi_mul_reg_1332) + unsigned(ap_const_lv29_4445));
    notlhs_fu_1585_p2 <= "0" when (tmp_96_fu_1571_p4 = ap_const_lv8_FF) else "1";
    notrhs_fu_1591_p2 <= "1" when (tmp_129_fu_1581_p1 = ap_const_lv23_0) else "0";
    or_cond4_fu_1608_p2 <= (tmp_s_fu_1562_p2 or tmp_99_fu_1603_p2);
    or_cond_fu_1649_p2 <= (tmp_101_reg_2314 and tmp_47_fu_1643_p2);
    p_1_fu_1620_p2 <= std_logic_vector(unsigned(p_reg_1277) + unsigned(ap_const_lv18_1));
    p_shl2_cast_fu_1699_p1 <= std_logic_vector(resize(unsigned(p_shl2_fu_1691_p3),19));
    p_shl2_fu_1691_p3 <= (x_reg_1308 & ap_const_lv10_0);
    p_shl3_cast_fu_1822_p1 <= std_logic_vector(resize(unsigned(p_shl3_fu_1814_p3),18));
    p_shl3_fu_1814_p3 <= (x_reg_1308 & ap_const_lv13_0);
    p_shl4_cast_fu_1834_p1 <= std_logic_vector(resize(unsigned(p_shl4_fu_1826_p3),18));
    p_shl4_fu_1826_p3 <= (x_reg_1308 & ap_const_lv9_0);
    p_shl5_cast_fu_1937_p1 <= std_logic_vector(resize(unsigned(p_shl5_fu_1929_p3),14));
    p_shl5_fu_1929_p3 <= (tmp_140_fu_1925_p1 & ap_const_lv10_0);
    p_shl6_cast_fu_1949_p1 <= std_logic_vector(resize(unsigned(p_shl6_fu_1941_p3),14));
    p_shl6_fu_1941_p3 <= (tmp_140_fu_1925_p1 & ap_const_lv6_0);
    p_shl7_cast_fu_1967_p1 <= std_logic_vector(resize(unsigned(p_shl7_fu_1959_p3),15));
    p_shl7_fu_1959_p3 <= (tmp_140_fu_1925_p1 & ap_const_lv11_0);
    p_shl8_cast_fu_1979_p1 <= std_logic_vector(resize(unsigned(p_shl8_fu_1971_p3),15));
    p_shl8_fu_1971_p3 <= (tmp_140_fu_1925_p1 & ap_const_lv7_0);
    p_shl_cast_fu_1687_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_1679_p3),19));
    p_shl_fu_1679_p3 <= (x_reg_1308 & ap_const_lv14_0);
    r_1_fu_1919_p2 <= std_logic_vector(unsigned(r_reg_1366) + unsigned(ap_const_lv4_1));
    tmp_101_fu_1626_p2 <= (tmp_97_reg_2297 and grp_fu_1537_p2);
    tmp_102_fu_2072_p9 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_141_reg_2543_pp2_it16),32));
    tmp_129_fu_1581_p1 <= learningRate_to_int_fu_1568_p1(23 - 1 downto 0);
        tmp_130_fu_1709_p1 <= std_logic_vector(resize(signed(tmp_54_reg_2356),32));

    tmp_131_fu_1712_p1 <= std_logic_vector(resize(unsigned(tmp_130_fu_1709_p1),64));
        tmp_132_fu_1844_p1 <= std_logic_vector(resize(signed(tmp_55_fu_1838_p2),32));

    tmp_133_fu_1848_p1 <= std_logic_vector(resize(unsigned(tmp_132_fu_1844_p1),34));
    tmp_134_fu_1852_p2 <= std_logic_vector(unsigned(tmp_133_fu_1848_p1) + unsigned(tmp_2_cast_reg_2282));
        tmp_135_fu_1857_p1 <= std_logic_vector(resize(signed(tmp_134_fu_1852_p2),64));

    tmp_138_fu_1989_p2 <= std_logic_vector(unsigned(tmp_133_reg_2451) + unsigned(tmp_1_cast_reg_2277));
        tmp_139_fu_1993_p1 <= std_logic_vector(resize(signed(tmp_138_fu_1989_p2),64));

    tmp_140_fu_1925_p1 <= r_reg_1366(3 - 1 downto 0);
        tmp_1_cast_fu_1552_p1 <= std_logic_vector(resize(signed(frame_o_read_reg_2262),34));

        tmp_2_cast_fu_1555_p1 <= std_logic_vector(resize(signed(frame_i_read_reg_2267),34));

    tmp_46_fu_1631_p2 <= std_logic_vector(unsigned(nframes_load_1_reg_1288) + unsigned(ap_const_lv32_1));
    tmp_47_fu_1643_p2 <= "1" when (signed(nframes_load_1_reg_1288) > signed(ap_const_lv32_0)) else "0";
    tmp_49_fu_1654_p2 <= "1" when (signed(tmp_46_fu_1631_p2) > signed(ap_const_lv32_C8)) else "0";
    tmp_51_fu_1660_p3 <= 
        ap_const_lv64_4069000000000000 when (tmp_49_reg_2328(0) = '1') else 
        grp_fu_1549_p1;

    -- tmp_53_phi_fu_1302_p4 assign process. --
    tmp_53_phi_fu_1302_p4_assign_proc : process(or_cond_reg_2324, tmp_52_reg_2338, ap_sig_cseq_ST_st46_fsm_45, tmp_53_reg_1299)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) and (ap_const_lv1_0 = or_cond_reg_2324))) then 
            tmp_53_phi_fu_1302_p4 <= tmp_52_reg_2338;
        else 
            tmp_53_phi_fu_1302_p4 <= tmp_53_reg_1299;
        end if; 
    end process;

    tmp_54_fu_1703_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1687_p1) - unsigned(p_shl2_cast_fu_1699_p1));
    tmp_55_fu_1838_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_1822_p1) - unsigned(p_shl4_cast_fu_1834_p1));
    tmp_59_fu_1953_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1937_p1) - unsigned(p_shl6_cast_fu_1949_p1));
    tmp_60_fu_2006_p1 <= std_logic_vector(resize(unsigned(tmp_61_cast_fu_2003_p1),64));
        tmp_61_cast_fu_2003_p1 <= std_logic_vector(resize(signed(tmp_59_reg_2500),32));

    tmp_61_fu_1983_p2 <= std_logic_vector(unsigned(p_shl7_cast_fu_1967_p1) - unsigned(p_shl8_cast_fu_1979_p1));
    tmp_62_fu_2015_p1 <= std_logic_vector(resize(unsigned(tmp_63_cast_fu_2012_p1),64));
        tmp_63_cast_fu_2012_p1 <= std_logic_vector(resize(signed(tmp_61_reg_2505),32));

    tmp_96_fu_1571_p4 <= learningRate_to_int_fu_1568_p1(30 downto 23);
    tmp_97_fu_1597_p2 <= (notrhs_fu_1591_p2 or notlhs_fu_1585_p2);
    tmp_99_fu_1603_p2 <= (tmp_97_fu_1597_p2 and tmp_98_reg_2272);
    tmp_s_fu_1562_p2 <= "1" when (nframes = ap_const_lv32_0) else "0";
    x_4_fu_1673_p2 <= std_logic_vector(unsigned(x_reg_1308) + unsigned(ap_const_lv4_1));
end behav;
