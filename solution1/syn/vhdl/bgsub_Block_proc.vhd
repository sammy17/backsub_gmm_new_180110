-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bgsub_Block_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    init : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_AWVALID : OUT STD_LOGIC;
    m_axi_bgmodel_AWREADY : IN STD_LOGIC;
    m_axi_bgmodel_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_WVALID : OUT STD_LOGIC;
    m_axi_bgmodel_WREADY : IN STD_LOGIC;
    m_axi_bgmodel_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_WLAST : OUT STD_LOGIC;
    m_axi_bgmodel_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_ARVALID : OUT STD_LOGIC;
    m_axi_bgmodel_ARREADY : IN STD_LOGIC;
    m_axi_bgmodel_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_RVALID : IN STD_LOGIC;
    m_axi_bgmodel_RREADY : OUT STD_LOGIC;
    m_axi_bgmodel_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_RLAST : IN STD_LOGIC;
    m_axi_bgmodel_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_BVALID : IN STD_LOGIC;
    m_axi_bgmodel_BREADY : OUT STD_LOGIC;
    m_axi_bgmodel_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    bgmodel1 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_AWVALID : OUT STD_LOGIC;
    m_axi_frame_out_AWREADY : IN STD_LOGIC;
    m_axi_frame_out_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_WVALID : OUT STD_LOGIC;
    m_axi_frame_out_WREADY : IN STD_LOGIC;
    m_axi_frame_out_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_frame_out_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_WLAST : OUT STD_LOGIC;
    m_axi_frame_out_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_ARVALID : OUT STD_LOGIC;
    m_axi_frame_out_ARREADY : IN STD_LOGIC;
    m_axi_frame_out_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_RVALID : IN STD_LOGIC;
    m_axi_frame_out_RREADY : OUT STD_LOGIC;
    m_axi_frame_out_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_frame_out_RLAST : IN STD_LOGIC;
    m_axi_frame_out_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_BVALID : IN STD_LOGIC;
    m_axi_frame_out_BREADY : OUT STD_LOGIC;
    m_axi_frame_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    frame_out2 : IN STD_LOGIC_VECTOR (31 downto 0);
    frame_in : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of bgsub_Block_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_pp0_stg0_fsm_14 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_st18_fsm_15 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_st19_fsm_16 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_st20_fsm_17 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_st21_fsm_18 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_st22_fsm_19 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_st23_fsm_20 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_st24_fsm_21 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_st25_fsm_22 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_pp1_stg0_fsm_23 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_st29_fsm_24 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_st30_fsm_25 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_st31_fsm_26 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_st32_fsm_27 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_st33_fsm_28 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_st34_fsm_29 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_st35_fsm_30 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_st36_fsm_31 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_pp2_stg0_fsm_32 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_st40_fsm_33 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_st41_fsm_34 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_st42_fsm_35 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_st43_fsm_36 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_37 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_st45_fsm_38 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_st46_fsm_39 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_st47_fsm_40 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_pp3_stg0_fsm_41 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_st51_fsm_42 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_st52_fsm_43 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_st53_fsm_44 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_st54_fsm_45 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_st55_fsm_46 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_st56_fsm_47 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_st57_fsm_48 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_st58_fsm_49 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_pp4_stg0_fsm_50 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_st62_fsm_51 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_st63_fsm_52 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_st64_fsm_53 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_st65_fsm_54 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st66_fsm_55 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st67_fsm_56 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st68_fsm_57 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st69_fsm_58 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp5_stg0_fsm_59 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st73_fsm_60 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st74_fsm_61 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp6_stg0_fsm_62 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st78_fsm_63 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st79_fsm_64 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st80_fsm_65 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st81_fsm_66 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st82_fsm_67 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp7_stg0_fsm_68 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st86_fsm_69 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st87_fsm_70 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st88_fsm_71 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st89_fsm_72 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st90_fsm_73 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp8_stg0_fsm_74 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st94_fsm_75 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st95_fsm_76 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st96_fsm_77 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st97_fsm_78 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st98_fsm_79 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp9_stg0_fsm_80 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st102_fsm_81 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st103_fsm_82 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st104_fsm_83 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st105_fsm_84 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st106_fsm_85 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp10_stg0_fsm_86 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st110_fsm_87 : STD_LOGIC_VECTOR (97 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st111_fsm_88 : STD_LOGIC_VECTOR (97 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st112_fsm_89 : STD_LOGIC_VECTOR (97 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st113_fsm_90 : STD_LOGIC_VECTOR (97 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st114_fsm_91 : STD_LOGIC_VECTOR (97 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp11_stg0_fsm_92 : STD_LOGIC_VECTOR (97 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st118_fsm_93 : STD_LOGIC_VECTOR (97 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st119_fsm_94 : STD_LOGIC_VECTOR (97 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st120_fsm_95 : STD_LOGIC_VECTOR (97 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st121_fsm_96 : STD_LOGIC_VECTOR (97 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st122_fsm_97 : STD_LOGIC_VECTOR (97 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_96000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000010010110000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001010000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv20_96000 : STD_LOGIC_VECTOR (19 downto 0) := "10010110000000000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv13_1400 : STD_LOGIC_VECTOR (12 downto 0) := "1010000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv17_280 : STD_LOGIC_VECTOR (16 downto 0) := "00000001010000000";
    constant ap_const_lv20_1400 : STD_LOGIC_VECTOR (19 downto 0) := "00000001010000000000";
    constant ap_const_lv17_500 : STD_LOGIC_VECTOR (16 downto 0) := "00000010100000000";
    constant ap_const_lv20_2800 : STD_LOGIC_VECTOR (19 downto 0) := "00000010100000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_117 : BOOLEAN;
    signal indvar_reg_442 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_indvar_reg_442_pp0_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_238 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond1_reg_1200 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_247 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal indvar9_reg_454 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_reg_ppstg_indvar9_reg_454_pp1_it1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_23 : STD_LOGIC;
    signal ap_sig_bdd_263 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal exitcond4_reg_1226 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_271 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal indvar1_reg_466 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_indvar1_reg_466_pp2_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_pp2_stg0_fsm_32 : STD_LOGIC;
    signal ap_sig_bdd_287 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it0 : STD_LOGIC := '0';
    signal exitcond5_reg_1246 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_294 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it2 : STD_LOGIC := '0';
    signal indvar2_reg_478 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_reg_ppstg_indvar2_reg_478_pp3_it1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_pp3_stg0_fsm_41 : STD_LOGIC;
    signal ap_sig_bdd_310 : BOOLEAN;
    signal ap_reg_ppiten_pp3_it0 : STD_LOGIC := '0';
    signal exitcond6_reg_1266 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_317 : BOOLEAN;
    signal ap_reg_ppiten_pp3_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it2 : STD_LOGIC := '0';
    signal indvar3_reg_490 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_indvar3_reg_490_pp4_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_pp4_stg0_fsm_50 : STD_LOGIC;
    signal ap_sig_bdd_333 : BOOLEAN;
    signal ap_reg_ppiten_pp4_it0 : STD_LOGIC := '0';
    signal exitcond7_reg_1286 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_340 : BOOLEAN;
    signal ap_reg_ppiten_pp4_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp4_it2 : STD_LOGIC := '0';
    signal indvar4_reg_502 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_reg_ppstg_indvar4_reg_502_pp5_it1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_pp5_stg0_fsm_59 : STD_LOGIC;
    signal ap_sig_bdd_356 : BOOLEAN;
    signal ap_reg_ppiten_pp5_it0 : STD_LOGIC := '0';
    signal exitcond8_reg_1306 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_363 : BOOLEAN;
    signal ap_reg_ppiten_pp5_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp5_it2 : STD_LOGIC := '0';
    signal indvar5_reg_514 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar6_reg_525 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar7_reg_536 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar8_reg_547 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar10_reg_558 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar11_reg_569 : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_607 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_614 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_bdd_414 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_bgmodel_AWREADY : STD_LOGIC;
    signal tmp_114_cast_fu_621_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_114_cast_reg_1146 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_115_cast_fu_625_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_115_cast_reg_1153 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_116_cast_fu_639_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_116_cast_reg_1160 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_1_fu_660_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_439 : BOOLEAN;
    signal exitcond_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_m_axi_bgmodel_WREADY : STD_LOGIC;
    signal tmp_55_fu_696_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_55_reg_1183 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_455 : BOOLEAN;
    signal tmp_54_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_fu_702_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_115_reg_1189 : STD_LOGIC_VECTOR (32 downto 0);
    signal frame_out_addr_reg_1194 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond1_reg_1200_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next_fu_727_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_next_reg_1204 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_56_fu_762_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_56_reg_1209 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_479 : BOOLEAN;
    signal tmp_119_fu_772_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_119_reg_1215 : STD_LOGIC_VECTOR (30 downto 0);
    signal bgmodel_addr_17_reg_1220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_490 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_bgmodel_ARREADY : STD_LOGIC;
    signal exitcond4_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_1226_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next1_fu_793_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next1_reg_1230 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_121_fu_809_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_121_reg_1235 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_sig_cseq_ST_st29_fsm_24 : STD_LOGIC;
    signal ap_sig_bdd_510 : BOOLEAN;
    signal frame_out_addr_2_reg_1240 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond5_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_1246_pp2_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next2_fu_834_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_next2_reg_1250 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_125_fu_854_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_125_reg_1255 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st40_fsm_33 : STD_LOGIC;
    signal ap_sig_bdd_528 : BOOLEAN;
    signal bgmodel_addr_18_reg_1260 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st41_fsm_34 : STD_LOGIC;
    signal ap_sig_bdd_537 : BOOLEAN;
    signal exitcond6_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_1266_pp3_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next3_fu_875_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next3_reg_1270 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_127_fu_891_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_127_reg_1275 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_sig_cseq_ST_st51_fsm_42 : STD_LOGIC;
    signal ap_sig_bdd_554 : BOOLEAN;
    signal frame_out_addr_3_reg_1280 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond7_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_1286_pp4_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next4_fu_916_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_next4_reg_1290 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_131_fu_936_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_131_reg_1295 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st62_fsm_51 : STD_LOGIC;
    signal ap_sig_bdd_572 : BOOLEAN;
    signal bgmodel_addr_19_reg_1300 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st63_fsm_52 : STD_LOGIC;
    signal ap_sig_bdd_581 : BOOLEAN;
    signal exitcond8_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond8_reg_1306_pp5_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next5_fu_957_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next5_reg_1310 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond9_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond9_reg_1315 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp6_stg0_fsm_62 : STD_LOGIC;
    signal ap_sig_bdd_598 : BOOLEAN;
    signal ap_reg_ppiten_pp6_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp6_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond9_reg_1315_pp6_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp6_it2 : STD_LOGIC := '0';
    signal indvar_next6_fu_974_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal part_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part_bgmodel_load_reg_1329 : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_out_addr_4_reg_1334 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st78_fsm_63 : STD_LOGIC;
    signal ap_sig_bdd_634 : BOOLEAN;
    signal exitcond2_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_reg_1339 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp7_stg0_fsm_68 : STD_LOGIC;
    signal ap_sig_bdd_643 : BOOLEAN;
    signal ap_reg_ppiten_pp7_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp7_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond2_reg_1339_pp7_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_m_axi_frame_out_WREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp7_it2 : STD_LOGIC := '0';
    signal indvar_next7_fu_1005_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal extLd_fu_1016_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal extLd_reg_1353 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond3_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1358 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp8_stg0_fsm_74 : STD_LOGIC;
    signal ap_sig_bdd_679 : BOOLEAN;
    signal ap_reg_ppiten_pp8_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp8_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond3_reg_1358_pp8_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp8_it2 : STD_LOGIC := '0';
    signal indvar_next8_fu_1030_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal part2_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part2_bgmodel_load_reg_1372 : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_out_addr_5_reg_1377 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st94_fsm_75 : STD_LOGIC;
    signal ap_sig_bdd_715 : BOOLEAN;
    signal exitcond10_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond10_reg_1382 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp9_stg0_fsm_80 : STD_LOGIC;
    signal ap_sig_bdd_724 : BOOLEAN;
    signal ap_reg_ppiten_pp9_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp9_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond10_reg_1382_pp9_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp9_it2 : STD_LOGIC := '0';
    signal indvar_next9_fu_1061_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal extLd1_fu_1072_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal extLd1_reg_1396 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond11_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond11_reg_1401 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp10_stg0_fsm_86 : STD_LOGIC;
    signal ap_sig_bdd_758 : BOOLEAN;
    signal ap_reg_ppiten_pp10_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp10_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond11_reg_1401_pp10_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp10_it2 : STD_LOGIC := '0';
    signal indvar_next10_fu_1086_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal part3_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part3_bgmodel_load_reg_1415 : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_out_addr_6_reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st110_fsm_87 : STD_LOGIC;
    signal ap_sig_bdd_794 : BOOLEAN;
    signal exitcond12_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond12_reg_1425 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp11_stg0_fsm_92 : STD_LOGIC;
    signal ap_sig_bdd_803 : BOOLEAN;
    signal ap_reg_ppiten_pp11_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp11_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond12_reg_1425_pp11_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp11_it2 : STD_LOGIC := '0';
    signal indvar_next11_fu_1117_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal extLd2_fu_1128_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal extLd2_reg_1439 : STD_LOGIC_VECTOR (7 downto 0);
    signal part_1_fu_1136_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal part_1_reg_1444 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st118_fsm_93 : STD_LOGIC;
    signal ap_sig_bdd_837 : BOOLEAN;
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_844 : BOOLEAN;
    signal ap_sig_cseq_ST_st25_fsm_22 : STD_LOGIC;
    signal ap_sig_bdd_856 : BOOLEAN;
    signal ap_sig_cseq_ST_st36_fsm_31 : STD_LOGIC;
    signal ap_sig_bdd_868 : BOOLEAN;
    signal ap_sig_cseq_ST_st47_fsm_40 : STD_LOGIC;
    signal ap_sig_bdd_880 : BOOLEAN;
    signal ap_sig_cseq_ST_st58_fsm_49 : STD_LOGIC;
    signal ap_sig_bdd_892 : BOOLEAN;
    signal ap_sig_cseq_ST_st69_fsm_58 : STD_LOGIC;
    signal ap_sig_bdd_904 : BOOLEAN;
    signal ap_sig_cseq_ST_st74_fsm_61 : STD_LOGIC;
    signal ap_sig_bdd_916 : BOOLEAN;
    signal grp_bgsub_process_fu_580_ap_done : STD_LOGIC;
    signal grp_bgsub_process_fu_589_ap_done : STD_LOGIC;
    signal grp_bgsub_process_fu_598_ap_done : STD_LOGIC;
    signal ap_sig_cseq_ST_st82_fsm_67 : STD_LOGIC;
    signal ap_sig_bdd_937 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_frame_out_AWREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st90_fsm_73 : STD_LOGIC;
    signal ap_sig_bdd_953 : BOOLEAN;
    signal ap_sig_cseq_ST_st98_fsm_79 : STD_LOGIC;
    signal ap_sig_bdd_967 : BOOLEAN;
    signal ap_sig_cseq_ST_st106_fsm_85 : STD_LOGIC;
    signal ap_sig_bdd_978 : BOOLEAN;
    signal ap_sig_cseq_ST_st114_fsm_91 : STD_LOGIC;
    signal ap_sig_bdd_989 : BOOLEAN;
    signal part_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal part_bgmodel_ce0 : STD_LOGIC;
    signal part_bgmodel_we0 : STD_LOGIC;
    signal part_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal part_bgmodel_ce1 : STD_LOGIC;
    signal part_bgmodel_we1 : STD_LOGIC;
    signal part_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part_frame_in_ce0 : STD_LOGIC;
    signal part_frame_in_we0 : STD_LOGIC;
    signal part_frame_in_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part_frame_out_ce0 : STD_LOGIC;
    signal part_frame_out_we0 : STD_LOGIC;
    signal part_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part_frame_out_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part2_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal part2_bgmodel_ce0 : STD_LOGIC;
    signal part2_bgmodel_we0 : STD_LOGIC;
    signal part2_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part2_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal part2_bgmodel_ce1 : STD_LOGIC;
    signal part2_bgmodel_we1 : STD_LOGIC;
    signal part2_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part2_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part2_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part2_frame_in_ce0 : STD_LOGIC;
    signal part2_frame_in_we0 : STD_LOGIC;
    signal part2_frame_in_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part2_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part2_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part2_frame_out_ce0 : STD_LOGIC;
    signal part2_frame_out_we0 : STD_LOGIC;
    signal part2_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part2_frame_out_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part3_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal part3_bgmodel_ce0 : STD_LOGIC;
    signal part3_bgmodel_we0 : STD_LOGIC;
    signal part3_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part3_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal part3_bgmodel_ce1 : STD_LOGIC;
    signal part3_bgmodel_we1 : STD_LOGIC;
    signal part3_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part3_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part3_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part3_frame_in_ce0 : STD_LOGIC;
    signal part3_frame_in_we0 : STD_LOGIC;
    signal part3_frame_in_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part3_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part3_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part3_frame_out_ce0 : STD_LOGIC;
    signal part3_frame_out_we0 : STD_LOGIC;
    signal part3_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part3_frame_out_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bgsub_process_fu_580_ap_start : STD_LOGIC;
    signal grp_bgsub_process_fu_580_ap_idle : STD_LOGIC;
    signal grp_bgsub_process_fu_580_ap_ready : STD_LOGIC;
    signal grp_bgsub_process_fu_580_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_580_frame_in_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_580_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bgsub_process_fu_580_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_580_frame_out_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_580_frame_out_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_580_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bgsub_process_fu_580_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_580_bgmodel_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_580_bgmodel_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_580_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_580_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_580_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_580_bgmodel_ce1 : STD_LOGIC;
    signal grp_bgsub_process_fu_580_bgmodel_we1 : STD_LOGIC;
    signal grp_bgsub_process_fu_580_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_580_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_580_learningRate : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_589_ap_start : STD_LOGIC;
    signal grp_bgsub_process_fu_589_ap_idle : STD_LOGIC;
    signal grp_bgsub_process_fu_589_ap_ready : STD_LOGIC;
    signal grp_bgsub_process_fu_589_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_589_frame_in_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_589_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bgsub_process_fu_589_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_589_frame_out_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_589_frame_out_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_589_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bgsub_process_fu_589_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_589_bgmodel_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_589_bgmodel_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_589_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_589_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_589_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_589_bgmodel_ce1 : STD_LOGIC;
    signal grp_bgsub_process_fu_589_bgmodel_we1 : STD_LOGIC;
    signal grp_bgsub_process_fu_589_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_589_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_589_learningRate : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_598_ap_start : STD_LOGIC;
    signal grp_bgsub_process_fu_598_ap_idle : STD_LOGIC;
    signal grp_bgsub_process_fu_598_ap_ready : STD_LOGIC;
    signal grp_bgsub_process_fu_598_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_598_frame_in_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_598_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bgsub_process_fu_598_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_598_frame_out_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_598_frame_out_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_598_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bgsub_process_fu_598_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_598_bgmodel_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_598_bgmodel_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_598_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_598_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_598_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_598_bgmodel_ce1 : STD_LOGIC;
    signal grp_bgsub_process_fu_598_bgmodel_we1 : STD_LOGIC;
    signal grp_bgsub_process_fu_598_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_598_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_598_learningRate : STD_LOGIC_VECTOR (31 downto 0);
    signal p_reg_406 : STD_LOGIC_VECTOR (19 downto 0);
    signal learningRate_reg_417 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_1171 : BOOLEAN;
    signal ap_sig_bdd_1174 : BOOLEAN;
    signal part_reg_430 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st122_fsm_97 : STD_LOGIC;
    signal ap_sig_bdd_1187 : BOOLEAN;
    signal indvar_phi_fu_446_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar9_phi_fu_458_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar1_phi_fu_470_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar2_phi_fu_482_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar3_phi_fu_494_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar4_phi_fu_506_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_580_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st73_fsm_60 : STD_LOGIC;
    signal ap_sig_bdd_1224 : BOOLEAN;
    signal grp_bgsub_process_fu_589_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_bgsub_process_fu_598_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal tmp_58_fu_733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_fu_840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_fu_881_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_fu_922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_73_fu_963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_74_fu_980_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_fu_1011_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_78_fu_1036_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_80_fu_1067_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_82_fu_1092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_fu_1123_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_fu_643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_117_fu_711_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_120_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_123_fu_818_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_126_fu_859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_129_fu_900_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_132_fu_941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_134_fu_989_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_136_fu_1045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_138_fu_1101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_bgmodel_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_bgmodel_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_bgmodel_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_frame_out_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_frame_out_ARREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_1371 : BOOLEAN;
    signal ap_sig_cseq_ST_st30_fsm_25 : STD_LOGIC;
    signal ap_sig_bdd_1386 : BOOLEAN;
    signal ap_sig_cseq_ST_st52_fsm_43 : STD_LOGIC;
    signal ap_sig_bdd_1399 : BOOLEAN;
    signal ap_reg_ioackin_m_axi_frame_out_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_frame_out_WREADY : STD_LOGIC := '0';
    signal tmp_113_fu_629_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_shl_fu_672_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl2_fu_684_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_cast_fu_680_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl2_cast_fu_692_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_116_fu_706_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl3_fu_738_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl4_fu_750_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl3_cast_fu_746_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_cast_fu_758_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_118_fu_768_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_59_fu_804_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_122_fu_813_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_62_fu_845_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_124_fu_850_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_65_fu_886_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_128_fu_895_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_68_fu_927_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_130_fu_932_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_133_fu_985_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_135_fu_1041_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_137_fu_1097_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (97 downto 0);
    signal ap_sig_bdd_1282 : BOOLEAN;
    signal ap_sig_bdd_1317 : BOOLEAN;
    signal ap_sig_bdd_1332 : BOOLEAN;
    signal ap_sig_bdd_1348 : BOOLEAN;
    signal ap_sig_bdd_1293 : BOOLEAN;
    signal ap_sig_bdd_1323 : BOOLEAN;
    signal ap_sig_bdd_1339 : BOOLEAN;
    signal ap_sig_bdd_1355 : BOOLEAN;
    signal ap_sig_bdd_2104 : BOOLEAN;
    signal ap_sig_bdd_1418 : BOOLEAN;
    signal ap_sig_bdd_1431 : BOOLEAN;
    signal ap_sig_bdd_1446 : BOOLEAN;

    component bgsub_process IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        frame_in_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_ce0 : OUT STD_LOGIC;
        frame_in_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_out_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_ce0 : OUT STD_LOGIC;
        frame_out_we0 : OUT STD_LOGIC;
        frame_out_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        bgmodel_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        bgmodel_ce0 : OUT STD_LOGIC;
        bgmodel_we0 : OUT STD_LOGIC;
        bgmodel_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        bgmodel_ce1 : OUT STD_LOGIC;
        bgmodel_we1 : OUT STD_LOGIC;
        bgmodel_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        learningRate : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bgsub_Block_proc_part_bgmodel IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bgsub_Block_proc_part_frame_in IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bgsub_Block_proc_part_frame_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    part_bgmodel_U : component bgsub_Block_proc_part_bgmodel
    generic map (
        DataWidth => 32,
        AddressRange => 5120,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part_bgmodel_address0,
        ce0 => part_bgmodel_ce0,
        we0 => part_bgmodel_we0,
        d0 => part_bgmodel_d0,
        q0 => part_bgmodel_q0,
        address1 => part_bgmodel_address1,
        ce1 => part_bgmodel_ce1,
        we1 => part_bgmodel_we1,
        d1 => part_bgmodel_d1,
        q1 => part_bgmodel_q1);

    part_frame_in_U : component bgsub_Block_proc_part_frame_in
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part_frame_in_address0,
        ce0 => part_frame_in_ce0,
        we0 => part_frame_in_we0,
        d0 => part_frame_in_d0,
        q0 => part_frame_in_q0);

    part_frame_out_U : component bgsub_Block_proc_part_frame_out
    generic map (
        DataWidth => 1,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part_frame_out_address0,
        ce0 => part_frame_out_ce0,
        we0 => part_frame_out_we0,
        d0 => part_frame_out_d0,
        q0 => part_frame_out_q0);

    part2_bgmodel_U : component bgsub_Block_proc_part_bgmodel
    generic map (
        DataWidth => 32,
        AddressRange => 5120,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part2_bgmodel_address0,
        ce0 => part2_bgmodel_ce0,
        we0 => part2_bgmodel_we0,
        d0 => part2_bgmodel_d0,
        q0 => part2_bgmodel_q0,
        address1 => part2_bgmodel_address1,
        ce1 => part2_bgmodel_ce1,
        we1 => part2_bgmodel_we1,
        d1 => part2_bgmodel_d1,
        q1 => part2_bgmodel_q1);

    part2_frame_in_U : component bgsub_Block_proc_part_frame_in
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part2_frame_in_address0,
        ce0 => part2_frame_in_ce0,
        we0 => part2_frame_in_we0,
        d0 => part2_frame_in_d0,
        q0 => part2_frame_in_q0);

    part2_frame_out_U : component bgsub_Block_proc_part_frame_out
    generic map (
        DataWidth => 1,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part2_frame_out_address0,
        ce0 => part2_frame_out_ce0,
        we0 => part2_frame_out_we0,
        d0 => part2_frame_out_d0,
        q0 => part2_frame_out_q0);

    part3_bgmodel_U : component bgsub_Block_proc_part_bgmodel
    generic map (
        DataWidth => 32,
        AddressRange => 5120,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part3_bgmodel_address0,
        ce0 => part3_bgmodel_ce0,
        we0 => part3_bgmodel_we0,
        d0 => part3_bgmodel_d0,
        q0 => part3_bgmodel_q0,
        address1 => part3_bgmodel_address1,
        ce1 => part3_bgmodel_ce1,
        we1 => part3_bgmodel_we1,
        d1 => part3_bgmodel_d1,
        q1 => part3_bgmodel_q1);

    part3_frame_in_U : component bgsub_Block_proc_part_frame_in
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part3_frame_in_address0,
        ce0 => part3_frame_in_ce0,
        we0 => part3_frame_in_we0,
        d0 => part3_frame_in_d0,
        q0 => part3_frame_in_q0);

    part3_frame_out_U : component bgsub_Block_proc_part_frame_out
    generic map (
        DataWidth => 1,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part3_frame_out_address0,
        ce0 => part3_frame_out_ce0,
        we0 => part3_frame_out_we0,
        d0 => part3_frame_out_d0,
        q0 => part3_frame_out_q0);

    grp_bgsub_process_fu_580 : component bgsub_process
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bgsub_process_fu_580_ap_start,
        ap_done => grp_bgsub_process_fu_580_ap_done,
        ap_idle => grp_bgsub_process_fu_580_ap_idle,
        ap_ready => grp_bgsub_process_fu_580_ap_ready,
        frame_in_address0 => grp_bgsub_process_fu_580_frame_in_address0,
        frame_in_ce0 => grp_bgsub_process_fu_580_frame_in_ce0,
        frame_in_q0 => grp_bgsub_process_fu_580_frame_in_q0,
        frame_out_address0 => grp_bgsub_process_fu_580_frame_out_address0,
        frame_out_ce0 => grp_bgsub_process_fu_580_frame_out_ce0,
        frame_out_we0 => grp_bgsub_process_fu_580_frame_out_we0,
        frame_out_d0 => grp_bgsub_process_fu_580_frame_out_d0,
        bgmodel_address0 => grp_bgsub_process_fu_580_bgmodel_address0,
        bgmodel_ce0 => grp_bgsub_process_fu_580_bgmodel_ce0,
        bgmodel_we0 => grp_bgsub_process_fu_580_bgmodel_we0,
        bgmodel_d0 => grp_bgsub_process_fu_580_bgmodel_d0,
        bgmodel_q0 => grp_bgsub_process_fu_580_bgmodel_q0,
        bgmodel_address1 => grp_bgsub_process_fu_580_bgmodel_address1,
        bgmodel_ce1 => grp_bgsub_process_fu_580_bgmodel_ce1,
        bgmodel_we1 => grp_bgsub_process_fu_580_bgmodel_we1,
        bgmodel_d1 => grp_bgsub_process_fu_580_bgmodel_d1,
        bgmodel_q1 => grp_bgsub_process_fu_580_bgmodel_q1,
        learningRate => grp_bgsub_process_fu_580_learningRate);

    grp_bgsub_process_fu_589 : component bgsub_process
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bgsub_process_fu_589_ap_start,
        ap_done => grp_bgsub_process_fu_589_ap_done,
        ap_idle => grp_bgsub_process_fu_589_ap_idle,
        ap_ready => grp_bgsub_process_fu_589_ap_ready,
        frame_in_address0 => grp_bgsub_process_fu_589_frame_in_address0,
        frame_in_ce0 => grp_bgsub_process_fu_589_frame_in_ce0,
        frame_in_q0 => grp_bgsub_process_fu_589_frame_in_q0,
        frame_out_address0 => grp_bgsub_process_fu_589_frame_out_address0,
        frame_out_ce0 => grp_bgsub_process_fu_589_frame_out_ce0,
        frame_out_we0 => grp_bgsub_process_fu_589_frame_out_we0,
        frame_out_d0 => grp_bgsub_process_fu_589_frame_out_d0,
        bgmodel_address0 => grp_bgsub_process_fu_589_bgmodel_address0,
        bgmodel_ce0 => grp_bgsub_process_fu_589_bgmodel_ce0,
        bgmodel_we0 => grp_bgsub_process_fu_589_bgmodel_we0,
        bgmodel_d0 => grp_bgsub_process_fu_589_bgmodel_d0,
        bgmodel_q0 => grp_bgsub_process_fu_589_bgmodel_q0,
        bgmodel_address1 => grp_bgsub_process_fu_589_bgmodel_address1,
        bgmodel_ce1 => grp_bgsub_process_fu_589_bgmodel_ce1,
        bgmodel_we1 => grp_bgsub_process_fu_589_bgmodel_we1,
        bgmodel_d1 => grp_bgsub_process_fu_589_bgmodel_d1,
        bgmodel_q1 => grp_bgsub_process_fu_589_bgmodel_q1,
        learningRate => grp_bgsub_process_fu_589_learningRate);

    grp_bgsub_process_fu_598 : component bgsub_process
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bgsub_process_fu_598_ap_start,
        ap_done => grp_bgsub_process_fu_598_ap_done,
        ap_idle => grp_bgsub_process_fu_598_ap_idle,
        ap_ready => grp_bgsub_process_fu_598_ap_ready,
        frame_in_address0 => grp_bgsub_process_fu_598_frame_in_address0,
        frame_in_ce0 => grp_bgsub_process_fu_598_frame_in_ce0,
        frame_in_q0 => grp_bgsub_process_fu_598_frame_in_q0,
        frame_out_address0 => grp_bgsub_process_fu_598_frame_out_address0,
        frame_out_ce0 => grp_bgsub_process_fu_598_frame_out_ce0,
        frame_out_we0 => grp_bgsub_process_fu_598_frame_out_we0,
        frame_out_d0 => grp_bgsub_process_fu_598_frame_out_d0,
        bgmodel_address0 => grp_bgsub_process_fu_598_bgmodel_address0,
        bgmodel_ce0 => grp_bgsub_process_fu_598_bgmodel_ce0,
        bgmodel_we0 => grp_bgsub_process_fu_598_bgmodel_we0,
        bgmodel_d0 => grp_bgsub_process_fu_598_bgmodel_d0,
        bgmodel_q0 => grp_bgsub_process_fu_598_bgmodel_q0,
        bgmodel_address1 => grp_bgsub_process_fu_598_bgmodel_address1,
        bgmodel_ce1 => grp_bgsub_process_fu_598_bgmodel_ce1,
        bgmodel_we1 => grp_bgsub_process_fu_598_bgmodel_we1,
        bgmodel_d1 => grp_bgsub_process_fu_598_bgmodel_d1,
        bgmodel_q1 => grp_bgsub_process_fu_598_bgmodel_q1,
        learningRate => grp_bgsub_process_fu_598_learningRate);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_54_fu_666_p2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_bgmodel_ARREADY assign process. --
    ap_reg_ioackin_m_axi_bgmodel_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_bgmodel_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16) and not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY))) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34)) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16) and (ap_const_logic_1 = m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34) and (ap_const_logic_1 = m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52) and (ap_const_logic_1 = m_axi_bgmodel_ARREADY)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_bgmodel_AWREADY assign process. --
    ap_reg_ioackin_m_axi_bgmodel_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_bgmodel_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not((ap_sig_bdd_414 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) or (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and (ap_const_logic_1 = m_axi_bgmodel_AWREADY) and not(ap_sig_bdd_414)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61) and (ap_const_logic_1 = m_axi_bgmodel_AWREADY) and not(((ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_1 = m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_1 = m_axi_bgmodel_AWREADY)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_bgmodel_WREADY assign process. --
    ap_reg_ioackin_m_axi_bgmodel_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_bgmodel_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_654_p2) and not(((ap_const_lv1_0 = exitcond_fu_654_p2) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2)))))) then 
                    ap_reg_ioackin_m_axi_bgmodel_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_654_p2) and (ap_const_logic_1 = m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2) and (ap_const_logic_1 = m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and (ap_const_logic_1 = m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and (ap_const_logic_1 = m_axi_bgmodel_WREADY)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_frame_out_ARREADY assign process. --
    ap_reg_ioackin_m_axi_frame_out_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_frame_out_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY))) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_25)) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_43)))) then 
                    ap_reg_ioackin_m_axi_frame_out_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or ((ap_const_logic_1 = m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_25)) or ((ap_const_logic_1 = m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_43)))) then 
                    ap_reg_ioackin_m_axi_frame_out_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_frame_out_AWREADY assign process. --
    ap_reg_ioackin_m_axi_frame_out_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_frame_out_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st82_fsm_67) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_79)) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st114_fsm_91)))) then 
                    ap_reg_ioackin_m_axi_frame_out_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st82_fsm_67) and (ap_const_logic_1 = m_axi_frame_out_AWREADY) and not((m_axi_bgmodel_BVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_79) and (ap_const_logic_1 = m_axi_frame_out_AWREADY) and not((m_axi_bgmodel_BVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st114_fsm_91) and (ap_const_logic_1 = m_axi_frame_out_AWREADY) and not((m_axi_bgmodel_BVALID = ap_const_logic_0))))) then 
                    ap_reg_ioackin_m_axi_frame_out_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_frame_out_WREADY assign process. --
    ap_reg_ioackin_m_axi_frame_out_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_frame_out_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2)))))) then 
                    ap_reg_ioackin_m_axi_frame_out_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2) and (ap_const_logic_1 = m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and (ap_const_logic_1 = m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and (ap_const_logic_1 = m_axi_frame_out_WREADY)))) then 
                    ap_reg_ioackin_m_axi_frame_out_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond1_fu_721_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = exitcond1_fu_721_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond1_fu_721_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp10_it0 assign process. --
    ap_reg_ppiten_pp10_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp10_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_86) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_lv1_0 = exitcond11_fu_1080_p2)))) then 
                    ap_reg_ppiten_pp10_it0 <= ap_const_logic_0;
                elsif ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85))) then 
                    ap_reg_ppiten_pp10_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp10_it1 assign process. --
    ap_reg_ppiten_pp10_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp10_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_86) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and (ap_const_lv1_0 = exitcond11_fu_1080_p2))) then 
                    ap_reg_ppiten_pp10_it1 <= ap_const_logic_1;
                elsif (((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_86) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_lv1_0 = exitcond11_fu_1080_p2))))) then 
                    ap_reg_ppiten_pp10_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp10_it2 assign process. --
    ap_reg_ppiten_pp10_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp10_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2)))) then 
                    ap_reg_ppiten_pp10_it2 <= ap_reg_ppiten_pp10_it1;
                elsif ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85))) then 
                    ap_reg_ppiten_pp10_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp11_it0 assign process. --
    ap_reg_ppiten_pp11_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp11_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_92) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_lv1_0 = exitcond12_fu_1111_p2)))) then 
                    ap_reg_ppiten_pp11_it0 <= ap_const_logic_0;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st114_fsm_91))) then 
                    ap_reg_ppiten_pp11_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp11_it1 assign process. --
    ap_reg_ppiten_pp11_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp11_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_92) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and (ap_const_lv1_0 = exitcond12_fu_1111_p2))) then 
                    ap_reg_ppiten_pp11_it1 <= ap_const_logic_1;
                elsif (((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st114_fsm_91)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_92) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_lv1_0 = exitcond12_fu_1111_p2))))) then 
                    ap_reg_ppiten_pp11_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp11_it2 assign process. --
    ap_reg_ppiten_pp11_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp11_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2)))) then 
                    ap_reg_ppiten_pp11_it2 <= ap_reg_ppiten_pp11_it1;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st114_fsm_91))) then 
                    ap_reg_ppiten_pp11_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_lv1_0 = exitcond4_fu_787_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_22)) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and (ap_const_lv1_0 = exitcond4_fu_787_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_22) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_lv1_0 = exitcond4_fu_787_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_22)) then 
                    ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it0 assign process. --
    ap_reg_ppiten_pp2_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_lv1_0 = exitcond5_fu_828_p2)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_31)) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it1 assign process. --
    ap_reg_ppiten_pp2_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and (ap_const_lv1_0 = exitcond5_fu_828_p2))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_31) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_lv1_0 = exitcond5_fu_828_p2))))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it2 assign process. --
    ap_reg_ppiten_pp2_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))) then 
                    ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_31)) then 
                    ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it0 assign process. --
    ap_reg_ppiten_pp3_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_lv1_0 = exitcond6_fu_869_p2)))) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_40)) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it1 assign process. --
    ap_reg_ppiten_pp3_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and (ap_const_lv1_0 = exitcond6_fu_869_p2))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_40) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_lv1_0 = exitcond6_fu_869_p2))))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it2 assign process. --
    ap_reg_ppiten_pp3_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))) then 
                    ap_reg_ppiten_pp3_it2 <= ap_reg_ppiten_pp3_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_40)) then 
                    ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp4_it0 assign process. --
    ap_reg_ppiten_pp4_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_lv1_0 = exitcond7_fu_910_p2)))) then 
                    ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st58_fsm_49)) then 
                    ap_reg_ppiten_pp4_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp4_it1 assign process. --
    ap_reg_ppiten_pp4_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and (ap_const_lv1_0 = exitcond7_fu_910_p2))) then 
                    ap_reg_ppiten_pp4_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st58_fsm_49) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_lv1_0 = exitcond7_fu_910_p2))))) then 
                    ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp4_it2 assign process. --
    ap_reg_ppiten_pp4_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp4_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))) then 
                    ap_reg_ppiten_pp4_it2 <= ap_reg_ppiten_pp4_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st58_fsm_49)) then 
                    ap_reg_ppiten_pp4_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp5_it0 assign process. --
    ap_reg_ppiten_pp5_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp5_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_lv1_0 = exitcond8_fu_951_p2)))) then 
                    ap_reg_ppiten_pp5_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st69_fsm_58)) then 
                    ap_reg_ppiten_pp5_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp5_it1 assign process. --
    ap_reg_ppiten_pp5_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp5_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and (ap_const_lv1_0 = exitcond8_fu_951_p2))) then 
                    ap_reg_ppiten_pp5_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st69_fsm_58) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_lv1_0 = exitcond8_fu_951_p2))))) then 
                    ap_reg_ppiten_pp5_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp5_it2 assign process. --
    ap_reg_ppiten_pp5_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp5_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))) then 
                    ap_reg_ppiten_pp5_it2 <= ap_reg_ppiten_pp5_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st69_fsm_58)) then 
                    ap_reg_ppiten_pp5_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp6_it0 assign process. --
    ap_reg_ppiten_pp6_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp6_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_62) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))) and not((ap_const_lv1_0 = exitcond9_fu_968_p2)))) then 
                    ap_reg_ppiten_pp6_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done))))) then 
                    ap_reg_ppiten_pp6_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp6_it1 assign process. --
    ap_reg_ppiten_pp6_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp6_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_62) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))) and (ap_const_lv1_0 = exitcond9_fu_968_p2))) then 
                    ap_reg_ppiten_pp6_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_62) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))) and not((ap_const_lv1_0 = exitcond9_fu_968_p2))))) then 
                    ap_reg_ppiten_pp6_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp6_it2 assign process. --
    ap_reg_ppiten_pp6_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp6_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2)))) then 
                    ap_reg_ppiten_pp6_it2 <= ap_reg_ppiten_pp6_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done))))) then 
                    ap_reg_ppiten_pp6_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp7_it0 assign process. --
    ap_reg_ppiten_pp7_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp7_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))) and not((ap_const_lv1_0 = exitcond2_fu_999_p2)))) then 
                    ap_reg_ppiten_pp7_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st82_fsm_67) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))))) then 
                    ap_reg_ppiten_pp7_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp7_it1 assign process. --
    ap_reg_ppiten_pp7_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp7_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))) and (ap_const_lv1_0 = exitcond2_fu_999_p2))) then 
                    ap_reg_ppiten_pp7_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st82_fsm_67) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))) and not((ap_const_lv1_0 = exitcond2_fu_999_p2))))) then 
                    ap_reg_ppiten_pp7_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp7_it2 assign process. --
    ap_reg_ppiten_pp7_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp7_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2)))) then 
                    ap_reg_ppiten_pp7_it2 <= ap_reg_ppiten_pp7_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st82_fsm_67) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))))) then 
                    ap_reg_ppiten_pp7_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp8_it0 assign process. --
    ap_reg_ppiten_pp8_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp8_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_74) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_lv1_0 = exitcond3_fu_1024_p2)))) then 
                    ap_reg_ppiten_pp8_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))))) then 
                    ap_reg_ppiten_pp8_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp8_it1 assign process. --
    ap_reg_ppiten_pp8_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp8_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_74) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and (ap_const_lv1_0 = exitcond3_fu_1024_p2))) then 
                    ap_reg_ppiten_pp8_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_74) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_lv1_0 = exitcond3_fu_1024_p2))))) then 
                    ap_reg_ppiten_pp8_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp8_it2 assign process. --
    ap_reg_ppiten_pp8_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp8_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2)))) then 
                    ap_reg_ppiten_pp8_it2 <= ap_reg_ppiten_pp8_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))))) then 
                    ap_reg_ppiten_pp8_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp9_it0 assign process. --
    ap_reg_ppiten_pp9_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp9_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_80) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_lv1_0 = exitcond10_fu_1055_p2)))) then 
                    ap_reg_ppiten_pp9_it0 <= ap_const_logic_0;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_79))) then 
                    ap_reg_ppiten_pp9_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp9_it1 assign process. --
    ap_reg_ppiten_pp9_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp9_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_80) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and (ap_const_lv1_0 = exitcond10_fu_1055_p2))) then 
                    ap_reg_ppiten_pp9_it1 <= ap_const_logic_1;
                elsif (((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_79)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_80) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_lv1_0 = exitcond10_fu_1055_p2))))) then 
                    ap_reg_ppiten_pp9_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp9_it2 assign process. --
    ap_reg_ppiten_pp9_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp9_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2)))) then 
                    ap_reg_ppiten_pp9_it2 <= ap_reg_ppiten_pp9_it1;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_79))) then 
                    ap_reg_ppiten_pp9_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_bgsub_process_fu_580_ap_start_ap_start_reg assign process. --
    grp_bgsub_process_fu_580_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bgsub_process_fu_580_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st73_fsm_60)) then 
                    grp_bgsub_process_fu_580_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bgsub_process_fu_580_ap_ready)) then 
                    grp_bgsub_process_fu_580_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_bgsub_process_fu_589_ap_start_ap_start_reg assign process. --
    grp_bgsub_process_fu_589_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bgsub_process_fu_589_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st73_fsm_60)) then 
                    grp_bgsub_process_fu_589_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bgsub_process_fu_589_ap_ready)) then 
                    grp_bgsub_process_fu_589_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_bgsub_process_fu_598_ap_start_ap_start_reg assign process. --
    grp_bgsub_process_fu_598_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bgsub_process_fu_598_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st73_fsm_60)) then 
                    grp_bgsub_process_fu_598_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bgsub_process_fu_598_ap_ready)) then 
                    grp_bgsub_process_fu_598_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- indvar10_reg_558 assign process. --
    indvar10_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85))) then 
                indvar10_reg_558 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_86) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and (ap_const_lv1_0 = exitcond11_fu_1080_p2))) then 
                indvar10_reg_558 <= indvar_next10_fu_1086_p2;
            end if; 
        end if;
    end process;

    -- indvar11_reg_569 assign process. --
    indvar11_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st114_fsm_91))) then 
                indvar11_reg_569 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_92) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and (ap_const_lv1_0 = exitcond12_fu_1111_p2))) then 
                indvar11_reg_569 <= indvar_next11_fu_1117_p2;
            end if; 
        end if;
    end process;

    -- indvar1_reg_466 assign process. --
    indvar1_reg_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_lv1_0 = exitcond5_reg_1246) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then 
                indvar1_reg_466 <= indvar_next2_reg_1250;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_31)) then 
                indvar1_reg_466 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- indvar2_reg_478 assign process. --
    indvar2_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_lv1_0 = exitcond6_reg_1266) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then 
                indvar2_reg_478 <= indvar_next3_reg_1270;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_40)) then 
                indvar2_reg_478 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- indvar3_reg_490 assign process. --
    indvar3_reg_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_lv1_0 = exitcond7_reg_1286) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then 
                indvar3_reg_490 <= indvar_next4_reg_1290;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st58_fsm_49)) then 
                indvar3_reg_490 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- indvar4_reg_502 assign process. --
    indvar4_reg_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_lv1_0 = exitcond8_reg_1306) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))))) then 
                indvar4_reg_502 <= indvar_next5_reg_1310;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st69_fsm_58)) then 
                indvar4_reg_502 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- indvar5_reg_514 assign process. --
    indvar5_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_62) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))) and (ap_const_lv1_0 = exitcond9_fu_968_p2))) then 
                indvar5_reg_514 <= indvar_next6_fu_974_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done))))) then 
                indvar5_reg_514 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- indvar6_reg_525 assign process. --
    indvar6_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st82_fsm_67) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))))) then 
                indvar6_reg_525 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_68) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))) and (ap_const_lv1_0 = exitcond2_fu_999_p2))) then 
                indvar6_reg_525 <= indvar_next7_fu_1005_p2;
            end if; 
        end if;
    end process;

    -- indvar7_reg_536 assign process. --
    indvar7_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))))) then 
                indvar7_reg_536 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_74) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and (ap_const_lv1_0 = exitcond3_fu_1024_p2))) then 
                indvar7_reg_536 <= indvar_next8_fu_1030_p2;
            end if; 
        end if;
    end process;

    -- indvar8_reg_547 assign process. --
    indvar8_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_79))) then 
                indvar8_reg_547 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_80) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and (ap_const_lv1_0 = exitcond10_fu_1055_p2))) then 
                indvar8_reg_547 <= indvar_next9_fu_1061_p2;
            end if; 
        end if;
    end process;

    -- indvar9_reg_454 assign process. --
    indvar9_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_lv1_0 = exitcond4_reg_1226) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then 
                indvar9_reg_454 <= indvar_next1_reg_1230;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_22)) then 
                indvar9_reg_454 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- indvar_reg_442 assign process. --
    indvar_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (exitcond1_reg_1200 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
                indvar_reg_442 <= indvar_next_reg_1204;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                indvar_reg_442 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- learningRate_reg_417 assign process. --
    learningRate_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = init)) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(ap_sig_bdd_1174))) then 
                learningRate_reg_417(23) <= '1';
                learningRate_reg_417(24) <= '1';
                learningRate_reg_417(25) <= '1';
                learningRate_reg_417(26) <= '1';
                learningRate_reg_417(27) <= '1';
                learningRate_reg_417(28) <= '1';
                learningRate_reg_417(29) <= '1';
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and (ap_const_lv1_0 = init) and not((ap_sig_bdd_414 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then 
                learningRate_reg_417(23) <= '0';
                learningRate_reg_417(24) <= '0';
                learningRate_reg_417(25) <= '0';
                learningRate_reg_417(26) <= '0';
                learningRate_reg_417(27) <= '0';
                learningRate_reg_417(28) <= '0';
                learningRate_reg_417(29) <= '0';
            end if; 
        end if;
    end process;

    -- p_reg_406 assign process. --
    p_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not((ap_sig_bdd_414 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then 
                p_reg_406 <= ap_const_lv20_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_654_p2) and not(((ap_const_lv1_0 = exitcond_fu_654_p2) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY))))) then 
                p_reg_406 <= p_1_fu_660_p2;
            end if; 
        end if;
    end process;

    -- part_reg_430 assign process. --
    part_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st122_fsm_97) and not((m_axi_frame_out_BVALID = ap_const_logic_0)))) then 
                part_reg_430 <= part_1_reg_1444;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(ap_sig_bdd_1174))) then 
                part_reg_430 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_80) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))))) then
                ap_reg_ppstg_exitcond10_reg_1382_pp9_it1 <= exitcond10_reg_1382;
                exitcond10_reg_1382 <= exitcond10_fu_1055_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_86) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))))) then
                ap_reg_ppstg_exitcond11_reg_1401_pp10_it1 <= exitcond11_reg_1401;
                exitcond11_reg_1401 <= exitcond11_fu_1080_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_92) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))))) then
                ap_reg_ppstg_exitcond12_reg_1425_pp11_it1 <= exitcond12_reg_1425;
                exitcond12_reg_1425 <= exitcond12_fu_1111_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                ap_reg_ppstg_exitcond1_reg_1200_pp0_it1 <= exitcond1_reg_1200;
                ap_reg_ppstg_indvar_reg_442_pp0_it1 <= indvar_reg_442;
                exitcond1_reg_1200 <= exitcond1_fu_721_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))))) then
                ap_reg_ppstg_exitcond2_reg_1339_pp7_it1 <= exitcond2_reg_1339;
                exitcond2_reg_1339 <= exitcond2_fu_999_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_74) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))))) then
                ap_reg_ppstg_exitcond3_reg_1358_pp8_it1 <= exitcond3_reg_1358;
                exitcond3_reg_1358 <= exitcond3_fu_1024_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                ap_reg_ppstg_exitcond4_reg_1226_pp1_it1 <= exitcond4_reg_1226;
                ap_reg_ppstg_indvar9_reg_454_pp1_it1 <= indvar9_reg_454;
                exitcond4_reg_1226 <= exitcond4_fu_787_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then
                ap_reg_ppstg_exitcond5_reg_1246_pp2_it1 <= exitcond5_reg_1246;
                ap_reg_ppstg_indvar1_reg_466_pp2_it1 <= indvar1_reg_466;
                exitcond5_reg_1246 <= exitcond5_fu_828_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then
                ap_reg_ppstg_exitcond6_reg_1266_pp3_it1 <= exitcond6_reg_1266;
                ap_reg_ppstg_indvar2_reg_478_pp3_it1 <= indvar2_reg_478;
                exitcond6_reg_1266 <= exitcond6_fu_869_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then
                ap_reg_ppstg_exitcond7_reg_1286_pp4_it1 <= exitcond7_reg_1286;
                ap_reg_ppstg_indvar3_reg_490_pp4_it1 <= indvar3_reg_490;
                exitcond7_reg_1286 <= exitcond7_fu_910_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))))) then
                ap_reg_ppstg_exitcond8_reg_1306_pp5_it1 <= exitcond8_reg_1306;
                ap_reg_ppstg_indvar4_reg_502_pp5_it1 <= indvar4_reg_502;
                exitcond8_reg_1306 <= exitcond8_fu_951_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_62) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))))) then
                ap_reg_ppstg_exitcond9_reg_1315_pp6_it1 <= exitcond9_reg_1315;
                exitcond9_reg_1315 <= exitcond9_fu_968_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16) and not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)))) then
                    bgmodel_addr_17_reg_1220(30 downto 0) <= tmp_120_fu_777_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34))) then
                    bgmodel_addr_18_reg_1260(30 downto 0) <= tmp_126_fu_859_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52))) then
                    bgmodel_addr_19_reg_1300(30 downto 0) <= tmp_132_fu_941_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_80) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and (ap_const_lv1_0 = exitcond10_reg_1382))) then
                extLd1_reg_1396 <= extLd1_fu_1072_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_92) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and (ap_const_lv1_0 = exitcond12_reg_1425))) then
                extLd2_reg_1439 <= extLd2_fu_1128_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_68) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))) and (ap_const_lv1_0 = exitcond2_reg_1339))) then
                extLd_reg_1353 <= extLd_fu_1016_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_24)) then
                frame_out_addr_2_reg_1240 <= tmp_123_fu_818_p1(32 - 1 downto 0);
                    tmp_121_reg_1235(16 downto 7) <= tmp_121_fu_809_p1(16 downto 7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st51_fsm_42)) then
                frame_out_addr_3_reg_1280 <= tmp_129_fu_900_p1(32 - 1 downto 0);
                    tmp_127_reg_1275(16 downto 7) <= tmp_127_fu_891_p1(16 downto 7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st78_fsm_63)) then
                frame_out_addr_4_reg_1334 <= tmp_134_fu_989_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st94_fsm_75)) then
                frame_out_addr_5_reg_1377 <= tmp_136_fu_1045_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st110_fsm_87)) then
                frame_out_addr_6_reg_1420 <= tmp_138_fu_1101_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_54_fu_666_p2)))) then
                frame_out_addr_reg_1194 <= tmp_117_fu_711_p1(32 - 1 downto 0);
                    tmp_115_reg_1189(16 downto 7) <= tmp_115_fu_702_p1(16 downto 7);
                    tmp_55_reg_1183(16 downto 7) <= tmp_55_fu_696_p2(16 downto 7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                indvar_next1_reg_1230 <= indvar_next1_fu_793_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then
                indvar_next2_reg_1250 <= indvar_next2_fu_834_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then
                indvar_next3_reg_1270 <= indvar_next3_fu_875_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then
                indvar_next4_reg_1290 <= indvar_next4_fu_916_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it0) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))))) then
                indvar_next5_reg_1310 <= indvar_next5_fu_957_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                indvar_next_reg_1204 <= indvar_next_fu_727_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_74) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and (ap_const_lv1_0 = exitcond3_reg_1358))) then
                part2_bgmodel_load_reg_1372 <= part2_bgmodel_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_86) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and (ap_const_lv1_0 = exitcond11_reg_1401))) then
                part3_bgmodel_load_reg_1415 <= part3_bgmodel_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st118_fsm_93)) then
                part_1_reg_1444 <= part_1_fu_1136_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_62) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))) and (ap_const_lv1_0 = exitcond9_reg_1315))) then
                part_bgmodel_load_reg_1329 <= part_bgmodel_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (exitcond1_reg_1200 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_lv1_0 = exitcond5_reg_1246) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_lv1_0 = exitcond7_reg_1286) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))))) then
                reg_607 <= m_axi_frame_out_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_lv1_0 = exitcond4_reg_1226) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_lv1_0 = exitcond6_reg_1266) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_lv1_0 = exitcond8_reg_1306) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))))) then
                reg_614 <= m_axi_bgmodel_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_sig_bdd_414 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then
                tmp_114_cast_reg_1146 <= tmp_114_cast_fu_621_p1;
                tmp_115_cast_reg_1153 <= tmp_115_cast_fu_625_p1;
                    tmp_116_cast_reg_1160(29 downto 0) <= tmp_116_cast_fu_639_p1(29 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_15)) then
                tmp_119_reg_1215 <= tmp_119_fu_772_p2;
                    tmp_56_reg_1209(19 downto 10) <= tmp_56_fu_762_p2(19 downto 10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_33)) then
                tmp_125_reg_1255 <= tmp_125_fu_854_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st62_fsm_51)) then
                tmp_131_reg_1295 <= tmp_131_fu_936_p2;
            end if;
        end if;
    end process;
    tmp_116_cast_reg_1160(30) <= '0';
    tmp_55_reg_1183(6 downto 0) <= "0000000";
    tmp_115_reg_1189(6 downto 0) <= "0000000";
    tmp_115_reg_1189(32 downto 17) <= "0000000000000000";
    tmp_56_reg_1209(9 downto 0) <= "0000000000";
    bgmodel_addr_17_reg_1220(31) <= '0';
    tmp_121_reg_1235(6 downto 0) <= "0000000";
    tmp_121_reg_1235(32 downto 17) <= "0000000000000000";
    bgmodel_addr_18_reg_1260(31) <= '0';
    tmp_127_reg_1275(6 downto 0) <= "0000000";
    tmp_127_reg_1275(32 downto 17) <= "0000000000000000";
    bgmodel_addr_19_reg_1300(31) <= '0';
    learningRate_reg_417(22 downto 0) <= "00000000000000000000000";
    learningRate_reg_417(31 downto 30) <= "00";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, init, m_axi_bgmodel_BVALID, m_axi_frame_out_BVALID, ap_reg_ppiten_pp0_it0, ap_sig_bdd_247, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp1_it0, ap_sig_bdd_271, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp2_it0, ap_sig_bdd_294, ap_reg_ppiten_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppiten_pp3_it0, ap_sig_bdd_317, ap_reg_ppiten_pp3_it1, ap_reg_ppiten_pp3_it2, ap_reg_ppiten_pp4_it0, ap_sig_bdd_340, ap_reg_ppiten_pp4_it1, ap_reg_ppiten_pp4_it2, ap_reg_ppiten_pp5_it0, ap_sig_bdd_363, ap_reg_ppiten_pp5_it1, ap_reg_ppiten_pp5_it2, ap_sig_bdd_414, ap_sig_ioackin_m_axi_bgmodel_AWREADY, exitcond_fu_654_p2, ap_sig_ioackin_m_axi_bgmodel_WREADY, tmp_54_fu_666_p2, exitcond1_fu_721_p2, ap_sig_ioackin_m_axi_bgmodel_ARREADY, exitcond4_fu_787_p2, exitcond5_fu_828_p2, exitcond6_fu_869_p2, exitcond7_fu_910_p2, exitcond8_fu_951_p2, exitcond9_fu_968_p2, ap_reg_ppiten_pp6_it0, ap_reg_ppiten_pp6_it1, ap_reg_ppstg_exitcond9_reg_1315_pp6_it1, ap_reg_ppiten_pp6_it2, exitcond2_fu_999_p2, ap_reg_ppiten_pp7_it0, ap_reg_ppiten_pp7_it1, ap_reg_ppstg_exitcond2_reg_1339_pp7_it1, ap_sig_ioackin_m_axi_frame_out_WREADY, ap_reg_ppiten_pp7_it2, exitcond3_fu_1024_p2, ap_reg_ppiten_pp8_it0, ap_reg_ppiten_pp8_it1, ap_reg_ppstg_exitcond3_reg_1358_pp8_it1, ap_reg_ppiten_pp8_it2, exitcond10_fu_1055_p2, ap_reg_ppiten_pp9_it0, ap_reg_ppiten_pp9_it1, ap_reg_ppstg_exitcond10_reg_1382_pp9_it1, ap_reg_ppiten_pp9_it2, exitcond11_fu_1080_p2, ap_reg_ppiten_pp10_it0, ap_reg_ppiten_pp10_it1, ap_reg_ppstg_exitcond11_reg_1401_pp10_it1, ap_reg_ppiten_pp10_it2, exitcond12_fu_1111_p2, ap_reg_ppiten_pp11_it0, ap_reg_ppiten_pp11_it1, ap_reg_ppstg_exitcond12_reg_1425_pp11_it1, ap_reg_ppiten_pp11_it2, grp_bgsub_process_fu_580_ap_done, grp_bgsub_process_fu_589_ap_done, grp_bgsub_process_fu_598_ap_done, ap_sig_ioackin_m_axi_frame_out_AWREADY, ap_sig_bdd_1174, ap_sig_ioackin_m_axi_frame_out_ARREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if ((not((ap_const_lv1_0 = init)) and not((ap_sig_bdd_414 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                elsif (((ap_const_lv1_0 = init) and not((ap_sig_bdd_414 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (((ap_const_lv1_0 = exitcond_fu_654_p2) and not(((ap_const_lv1_0 = exitcond_fu_654_p2) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                elsif ((not(((ap_const_lv1_0 = exitcond_fu_654_p2) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY))) and not((ap_const_lv1_0 = exitcond_fu_654_p2)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not(ap_sig_bdd_1174)) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                if ((ap_const_lv1_0 = tmp_54_fu_666_p2)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_14;
            when ap_ST_pp0_stg0_fsm_14 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond1_fu_721_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_14;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond1_fu_721_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_14;
                end if;
            when ap_ST_st18_fsm_15 => 
                ap_NS_fsm <= ap_ST_st19_fsm_16;
            when ap_ST_st19_fsm_16 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_16;
                end if;
            when ap_ST_st20_fsm_17 => 
                ap_NS_fsm <= ap_ST_st21_fsm_18;
            when ap_ST_st21_fsm_18 => 
                ap_NS_fsm <= ap_ST_st22_fsm_19;
            when ap_ST_st22_fsm_19 => 
                ap_NS_fsm <= ap_ST_st23_fsm_20;
            when ap_ST_st23_fsm_20 => 
                ap_NS_fsm <= ap_ST_st24_fsm_21;
            when ap_ST_st24_fsm_21 => 
                ap_NS_fsm <= ap_ST_st25_fsm_22;
            when ap_ST_st25_fsm_22 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_23;
            when ap_ST_pp1_stg0_fsm_23 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_lv1_0 = exitcond4_fu_787_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_23;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_lv1_0 = exitcond4_fu_787_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_st29_fsm_24;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_23;
                end if;
            when ap_ST_st29_fsm_24 => 
                ap_NS_fsm <= ap_ST_st30_fsm_25;
            when ap_ST_st30_fsm_25 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st31_fsm_26;
                else
                    ap_NS_fsm <= ap_ST_st30_fsm_25;
                end if;
            when ap_ST_st31_fsm_26 => 
                ap_NS_fsm <= ap_ST_st32_fsm_27;
            when ap_ST_st32_fsm_27 => 
                ap_NS_fsm <= ap_ST_st33_fsm_28;
            when ap_ST_st33_fsm_28 => 
                ap_NS_fsm <= ap_ST_st34_fsm_29;
            when ap_ST_st34_fsm_29 => 
                ap_NS_fsm <= ap_ST_st35_fsm_30;
            when ap_ST_st35_fsm_30 => 
                ap_NS_fsm <= ap_ST_st36_fsm_31;
            when ap_ST_st36_fsm_31 => 
                ap_NS_fsm <= ap_ST_pp2_stg0_fsm_32;
            when ap_ST_pp2_stg0_fsm_32 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_lv1_0 = exitcond5_fu_828_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_32;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_lv1_0 = exitcond5_fu_828_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then
                    ap_NS_fsm <= ap_ST_st40_fsm_33;
                else
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_32;
                end if;
            when ap_ST_st40_fsm_33 => 
                ap_NS_fsm <= ap_ST_st41_fsm_34;
            when ap_ST_st41_fsm_34 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st42_fsm_35;
                else
                    ap_NS_fsm <= ap_ST_st41_fsm_34;
                end if;
            when ap_ST_st42_fsm_35 => 
                ap_NS_fsm <= ap_ST_st43_fsm_36;
            when ap_ST_st43_fsm_36 => 
                ap_NS_fsm <= ap_ST_st44_fsm_37;
            when ap_ST_st44_fsm_37 => 
                ap_NS_fsm <= ap_ST_st45_fsm_38;
            when ap_ST_st45_fsm_38 => 
                ap_NS_fsm <= ap_ST_st46_fsm_39;
            when ap_ST_st46_fsm_39 => 
                ap_NS_fsm <= ap_ST_st47_fsm_40;
            when ap_ST_st47_fsm_40 => 
                ap_NS_fsm <= ap_ST_pp3_stg0_fsm_41;
            when ap_ST_pp3_stg0_fsm_41 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_lv1_0 = exitcond6_fu_869_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_41;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_lv1_0 = exitcond6_fu_869_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then
                    ap_NS_fsm <= ap_ST_st51_fsm_42;
                else
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_41;
                end if;
            when ap_ST_st51_fsm_42 => 
                ap_NS_fsm <= ap_ST_st52_fsm_43;
            when ap_ST_st52_fsm_43 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st53_fsm_44;
                else
                    ap_NS_fsm <= ap_ST_st52_fsm_43;
                end if;
            when ap_ST_st53_fsm_44 => 
                ap_NS_fsm <= ap_ST_st54_fsm_45;
            when ap_ST_st54_fsm_45 => 
                ap_NS_fsm <= ap_ST_st55_fsm_46;
            when ap_ST_st55_fsm_46 => 
                ap_NS_fsm <= ap_ST_st56_fsm_47;
            when ap_ST_st56_fsm_47 => 
                ap_NS_fsm <= ap_ST_st57_fsm_48;
            when ap_ST_st57_fsm_48 => 
                ap_NS_fsm <= ap_ST_st58_fsm_49;
            when ap_ST_st58_fsm_49 => 
                ap_NS_fsm <= ap_ST_pp4_stg0_fsm_50;
            when ap_ST_pp4_stg0_fsm_50 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it2) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_lv1_0 = exitcond7_fu_910_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp4_stg0_fsm_50;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp4_it2) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_lv1_0 = exitcond7_fu_910_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then
                    ap_NS_fsm <= ap_ST_st62_fsm_51;
                else
                    ap_NS_fsm <= ap_ST_pp4_stg0_fsm_50;
                end if;
            when ap_ST_st62_fsm_51 => 
                ap_NS_fsm <= ap_ST_st63_fsm_52;
            when ap_ST_st63_fsm_52 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st64_fsm_53;
                else
                    ap_NS_fsm <= ap_ST_st63_fsm_52;
                end if;
            when ap_ST_st64_fsm_53 => 
                ap_NS_fsm <= ap_ST_st65_fsm_54;
            when ap_ST_st65_fsm_54 => 
                ap_NS_fsm <= ap_ST_st66_fsm_55;
            when ap_ST_st66_fsm_55 => 
                ap_NS_fsm <= ap_ST_st67_fsm_56;
            when ap_ST_st67_fsm_56 => 
                ap_NS_fsm <= ap_ST_st68_fsm_57;
            when ap_ST_st68_fsm_57 => 
                ap_NS_fsm <= ap_ST_st69_fsm_58;
            when ap_ST_st69_fsm_58 => 
                ap_NS_fsm <= ap_ST_pp5_stg0_fsm_59;
            when ap_ST_pp5_stg0_fsm_59 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp5_it2) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp5_it0) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_lv1_0 = exitcond8_fu_951_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp5_stg0_fsm_59;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp5_it2) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp5_it0) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_lv1_0 = exitcond8_fu_951_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp5_it1))))) then
                    ap_NS_fsm <= ap_ST_st73_fsm_60;
                else
                    ap_NS_fsm <= ap_ST_pp5_stg0_fsm_59;
                end if;
            when ap_ST_st73_fsm_60 => 
                ap_NS_fsm <= ap_ST_st74_fsm_61;
            when ap_ST_st74_fsm_61 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done)))) then
                    ap_NS_fsm <= ap_ST_pp6_stg0_fsm_62;
                else
                    ap_NS_fsm <= ap_ST_st74_fsm_61;
                end if;
            when ap_ST_pp6_stg0_fsm_62 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp6_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp6_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp6_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))) and not((ap_const_lv1_0 = exitcond9_fu_968_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp6_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp6_stg0_fsm_62;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp6_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp6_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2))) and not((ap_const_lv1_0 = exitcond9_fu_968_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp6_it1))))) then
                    ap_NS_fsm <= ap_ST_st78_fsm_63;
                else
                    ap_NS_fsm <= ap_ST_pp6_stg0_fsm_62;
                end if;
            when ap_ST_st78_fsm_63 => 
                ap_NS_fsm <= ap_ST_st79_fsm_64;
            when ap_ST_st79_fsm_64 => 
                ap_NS_fsm <= ap_ST_st80_fsm_65;
            when ap_ST_st80_fsm_65 => 
                ap_NS_fsm <= ap_ST_st81_fsm_66;
            when ap_ST_st81_fsm_66 => 
                ap_NS_fsm <= ap_ST_st82_fsm_67;
            when ap_ST_st82_fsm_67 => 
                if (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) then
                    ap_NS_fsm <= ap_ST_pp7_stg0_fsm_68;
                else
                    ap_NS_fsm <= ap_ST_st82_fsm_67;
                end if;
            when ap_ST_pp7_stg0_fsm_68 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp7_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp7_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp7_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))) and not((ap_const_lv1_0 = exitcond2_fu_999_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp7_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp7_stg0_fsm_68;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp7_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp7_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))) and not((ap_const_lv1_0 = exitcond2_fu_999_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp7_it1))))) then
                    ap_NS_fsm <= ap_ST_st86_fsm_69;
                else
                    ap_NS_fsm <= ap_ST_pp7_stg0_fsm_68;
                end if;
            when ap_ST_st86_fsm_69 => 
                ap_NS_fsm <= ap_ST_st87_fsm_70;
            when ap_ST_st87_fsm_70 => 
                ap_NS_fsm <= ap_ST_st88_fsm_71;
            when ap_ST_st88_fsm_71 => 
                ap_NS_fsm <= ap_ST_st89_fsm_72;
            when ap_ST_st89_fsm_72 => 
                ap_NS_fsm <= ap_ST_st90_fsm_73;
            when ap_ST_st90_fsm_73 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_pp8_stg0_fsm_74;
                else
                    ap_NS_fsm <= ap_ST_st90_fsm_73;
                end if;
            when ap_ST_pp8_stg0_fsm_74 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp8_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp8_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_lv1_0 = exitcond3_fu_1024_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp8_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp8_stg0_fsm_74;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp8_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp8_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_lv1_0 = exitcond3_fu_1024_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp8_it1))))) then
                    ap_NS_fsm <= ap_ST_st94_fsm_75;
                else
                    ap_NS_fsm <= ap_ST_pp8_stg0_fsm_74;
                end if;
            when ap_ST_st94_fsm_75 => 
                ap_NS_fsm <= ap_ST_st95_fsm_76;
            when ap_ST_st95_fsm_76 => 
                ap_NS_fsm <= ap_ST_st96_fsm_77;
            when ap_ST_st96_fsm_77 => 
                ap_NS_fsm <= ap_ST_st97_fsm_78;
            when ap_ST_st97_fsm_78 => 
                ap_NS_fsm <= ap_ST_st98_fsm_79;
            when ap_ST_st98_fsm_79 => 
                if (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) then
                    ap_NS_fsm <= ap_ST_pp9_stg0_fsm_80;
                else
                    ap_NS_fsm <= ap_ST_st98_fsm_79;
                end if;
            when ap_ST_pp9_stg0_fsm_80 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp9_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp9_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_lv1_0 = exitcond10_fu_1055_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp9_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp9_stg0_fsm_80;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp9_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp9_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_lv1_0 = exitcond10_fu_1055_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp9_it1))))) then
                    ap_NS_fsm <= ap_ST_st102_fsm_81;
                else
                    ap_NS_fsm <= ap_ST_pp9_stg0_fsm_80;
                end if;
            when ap_ST_st102_fsm_81 => 
                ap_NS_fsm <= ap_ST_st103_fsm_82;
            when ap_ST_st103_fsm_82 => 
                ap_NS_fsm <= ap_ST_st104_fsm_83;
            when ap_ST_st104_fsm_83 => 
                ap_NS_fsm <= ap_ST_st105_fsm_84;
            when ap_ST_st105_fsm_84 => 
                ap_NS_fsm <= ap_ST_st106_fsm_85;
            when ap_ST_st106_fsm_85 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_pp10_stg0_fsm_86;
                else
                    ap_NS_fsm <= ap_ST_st106_fsm_85;
                end if;
            when ap_ST_pp10_stg0_fsm_86 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp10_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp10_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_lv1_0 = exitcond11_fu_1080_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp10_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp10_stg0_fsm_86;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp10_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp10_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_lv1_0 = exitcond11_fu_1080_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp10_it1))))) then
                    ap_NS_fsm <= ap_ST_st110_fsm_87;
                else
                    ap_NS_fsm <= ap_ST_pp10_stg0_fsm_86;
                end if;
            when ap_ST_st110_fsm_87 => 
                ap_NS_fsm <= ap_ST_st111_fsm_88;
            when ap_ST_st111_fsm_88 => 
                ap_NS_fsm <= ap_ST_st112_fsm_89;
            when ap_ST_st112_fsm_89 => 
                ap_NS_fsm <= ap_ST_st113_fsm_90;
            when ap_ST_st113_fsm_90 => 
                ap_NS_fsm <= ap_ST_st114_fsm_91;
            when ap_ST_st114_fsm_91 => 
                if (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) then
                    ap_NS_fsm <= ap_ST_pp11_stg0_fsm_92;
                else
                    ap_NS_fsm <= ap_ST_st114_fsm_91;
                end if;
            when ap_ST_pp11_stg0_fsm_92 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp11_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp11_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_lv1_0 = exitcond12_fu_1111_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp11_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp11_stg0_fsm_92;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp11_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp11_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_lv1_0 = exitcond12_fu_1111_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp11_it1))))) then
                    ap_NS_fsm <= ap_ST_st118_fsm_93;
                else
                    ap_NS_fsm <= ap_ST_pp11_stg0_fsm_92;
                end if;
            when ap_ST_st118_fsm_93 => 
                ap_NS_fsm <= ap_ST_st119_fsm_94;
            when ap_ST_st119_fsm_94 => 
                ap_NS_fsm <= ap_ST_st120_fsm_95;
            when ap_ST_st120_fsm_95 => 
                ap_NS_fsm <= ap_ST_st121_fsm_96;
            when ap_ST_st121_fsm_96 => 
                ap_NS_fsm <= ap_ST_st122_fsm_97;
            when ap_ST_st122_fsm_97 => 
                if (not((m_axi_frame_out_BVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st122_fsm_97;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st7_fsm_6, tmp_54_fu_666_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_54_fu_666_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, tmp_54_fu_666_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_54_fu_666_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_117 assign process. --
    ap_sig_bdd_117_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_117 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_1171 assign process. --
    ap_sig_bdd_1171_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1171 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_1174 assign process. --
    ap_sig_bdd_1174_assign_proc : process(init, m_axi_bgmodel_BVALID)
    begin
                ap_sig_bdd_1174 <= (not((ap_const_lv1_0 = init)) and (m_axi_bgmodel_BVALID = ap_const_logic_0));
    end process;


    -- ap_sig_bdd_1187 assign process. --
    ap_sig_bdd_1187_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1187 <= (ap_const_lv1_1 = ap_CS_fsm(97 downto 97));
    end process;


    -- ap_sig_bdd_1224 assign process. --
    ap_sig_bdd_1224_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1224 <= (ap_const_lv1_1 = ap_CS_fsm(60 downto 60));
    end process;


    -- ap_sig_bdd_1282 assign process. --
    ap_sig_bdd_1282_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, init, ap_sig_bdd_414)
    begin
                ap_sig_bdd_1282 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not(ap_sig_bdd_414));
    end process;


    -- ap_sig_bdd_1293 assign process. --
    ap_sig_bdd_1293_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_654_p2)
    begin
                ap_sig_bdd_1293 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_654_p2));
    end process;


    -- ap_sig_bdd_1317 assign process. --
    ap_sig_bdd_1317_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_ap_done, grp_bgsub_process_fu_589_ap_done, grp_bgsub_process_fu_598_ap_done)
    begin
                ap_sig_bdd_1317 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61) and not(((ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done))));
    end process;


    -- ap_sig_bdd_1323 assign process. --
    ap_sig_bdd_1323_assign_proc : process(ap_reg_ppstg_exitcond9_reg_1315_pp6_it1, ap_reg_ppiten_pp6_it2)
    begin
                ap_sig_bdd_1323 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2));
    end process;


    -- ap_sig_bdd_1332 assign process. --
    ap_sig_bdd_1332_assign_proc : process(m_axi_frame_out_BVALID, ap_sig_cseq_ST_st90_fsm_73)
    begin
                ap_sig_bdd_1332 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not((m_axi_frame_out_BVALID = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_1339 assign process. --
    ap_sig_bdd_1339_assign_proc : process(ap_reg_ppstg_exitcond3_reg_1358_pp8_it1, ap_reg_ppiten_pp8_it2)
    begin
                ap_sig_bdd_1339 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2));
    end process;


    -- ap_sig_bdd_1348 assign process. --
    ap_sig_bdd_1348_assign_proc : process(m_axi_frame_out_BVALID, ap_sig_cseq_ST_st106_fsm_85)
    begin
                ap_sig_bdd_1348 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85) and not((m_axi_frame_out_BVALID = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_1355 assign process. --
    ap_sig_bdd_1355_assign_proc : process(ap_reg_ppstg_exitcond11_reg_1401_pp10_it1, ap_reg_ppiten_pp10_it2)
    begin
                ap_sig_bdd_1355 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2));
    end process;


    -- ap_sig_bdd_1371 assign process. --
    ap_sig_bdd_1371_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1371 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_1386 assign process. --
    ap_sig_bdd_1386_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1386 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    -- ap_sig_bdd_1399 assign process. --
    ap_sig_bdd_1399_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1399 <= (ap_const_lv1_1 = ap_CS_fsm(43 downto 43));
    end process;


    -- ap_sig_bdd_1418 assign process. --
    ap_sig_bdd_1418_assign_proc : process(ap_reg_ppstg_exitcond2_reg_1339_pp7_it1, ap_reg_ppiten_pp7_it2)
    begin
                ap_sig_bdd_1418 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2));
    end process;


    -- ap_sig_bdd_1431 assign process. --
    ap_sig_bdd_1431_assign_proc : process(ap_reg_ppstg_exitcond10_reg_1382_pp9_it1, ap_reg_ppiten_pp9_it2)
    begin
                ap_sig_bdd_1431 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2));
    end process;


    -- ap_sig_bdd_1446 assign process. --
    ap_sig_bdd_1446_assign_proc : process(ap_reg_ppstg_exitcond12_reg_1425_pp11_it1, ap_reg_ppiten_pp11_it2)
    begin
                ap_sig_bdd_1446 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2));
    end process;


    -- ap_sig_bdd_2104 assign process. --
    ap_sig_bdd_2104_assign_proc : process(m_axi_bgmodel_BVALID, ap_reg_ioackin_m_axi_frame_out_AWREADY)
    begin
                ap_sig_bdd_2104 <= (not((m_axi_bgmodel_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY));
    end process;


    -- ap_sig_bdd_238 assign process. --
    ap_sig_bdd_238_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_238 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_247 assign process. --
    ap_sig_bdd_247_assign_proc : process(m_axi_frame_out_RVALID, exitcond1_reg_1200)
    begin
                ap_sig_bdd_247 <= ((m_axi_frame_out_RVALID = ap_const_logic_0) and (exitcond1_reg_1200 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_263 assign process. --
    ap_sig_bdd_263_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_263 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    -- ap_sig_bdd_271 assign process. --
    ap_sig_bdd_271_assign_proc : process(m_axi_bgmodel_RVALID, exitcond4_reg_1226)
    begin
                ap_sig_bdd_271 <= ((m_axi_bgmodel_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond4_reg_1226));
    end process;


    -- ap_sig_bdd_287 assign process. --
    ap_sig_bdd_287_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_287 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    -- ap_sig_bdd_294 assign process. --
    ap_sig_bdd_294_assign_proc : process(m_axi_frame_out_RVALID, exitcond5_reg_1246)
    begin
                ap_sig_bdd_294 <= ((m_axi_frame_out_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond5_reg_1246));
    end process;


    -- ap_sig_bdd_310 assign process. --
    ap_sig_bdd_310_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_310 <= (ap_const_lv1_1 = ap_CS_fsm(41 downto 41));
    end process;


    -- ap_sig_bdd_317 assign process. --
    ap_sig_bdd_317_assign_proc : process(m_axi_bgmodel_RVALID, exitcond6_reg_1266)
    begin
                ap_sig_bdd_317 <= ((m_axi_bgmodel_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond6_reg_1266));
    end process;


    -- ap_sig_bdd_333 assign process. --
    ap_sig_bdd_333_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_333 <= (ap_const_lv1_1 = ap_CS_fsm(50 downto 50));
    end process;


    -- ap_sig_bdd_340 assign process. --
    ap_sig_bdd_340_assign_proc : process(m_axi_frame_out_RVALID, exitcond7_reg_1286)
    begin
                ap_sig_bdd_340 <= ((m_axi_frame_out_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond7_reg_1286));
    end process;


    -- ap_sig_bdd_356 assign process. --
    ap_sig_bdd_356_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_356 <= (ap_const_lv1_1 = ap_CS_fsm(59 downto 59));
    end process;


    -- ap_sig_bdd_363 assign process. --
    ap_sig_bdd_363_assign_proc : process(m_axi_bgmodel_RVALID, exitcond8_reg_1306)
    begin
                ap_sig_bdd_363 <= ((m_axi_bgmodel_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond8_reg_1306));
    end process;


    -- ap_sig_bdd_414 assign process. --
    ap_sig_bdd_414_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_414 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_439 assign process. --
    ap_sig_bdd_439_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_439 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_455 assign process. --
    ap_sig_bdd_455_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_455 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_479 assign process. --
    ap_sig_bdd_479_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_479 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_490 assign process. --
    ap_sig_bdd_490_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_490 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_bdd_510 assign process. --
    ap_sig_bdd_510_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_510 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    -- ap_sig_bdd_528 assign process. --
    ap_sig_bdd_528_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_528 <= (ap_const_lv1_1 = ap_CS_fsm(33 downto 33));
    end process;


    -- ap_sig_bdd_537 assign process. --
    ap_sig_bdd_537_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_537 <= (ap_const_lv1_1 = ap_CS_fsm(34 downto 34));
    end process;


    -- ap_sig_bdd_554 assign process. --
    ap_sig_bdd_554_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_554 <= (ap_const_lv1_1 = ap_CS_fsm(42 downto 42));
    end process;


    -- ap_sig_bdd_572 assign process. --
    ap_sig_bdd_572_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_572 <= (ap_const_lv1_1 = ap_CS_fsm(51 downto 51));
    end process;


    -- ap_sig_bdd_581 assign process. --
    ap_sig_bdd_581_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_581 <= (ap_const_lv1_1 = ap_CS_fsm(52 downto 52));
    end process;


    -- ap_sig_bdd_598 assign process. --
    ap_sig_bdd_598_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_598 <= (ap_const_lv1_1 = ap_CS_fsm(62 downto 62));
    end process;


    -- ap_sig_bdd_634 assign process. --
    ap_sig_bdd_634_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_634 <= (ap_const_lv1_1 = ap_CS_fsm(63 downto 63));
    end process;


    -- ap_sig_bdd_643 assign process. --
    ap_sig_bdd_643_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_643 <= (ap_const_lv1_1 = ap_CS_fsm(68 downto 68));
    end process;


    -- ap_sig_bdd_679 assign process. --
    ap_sig_bdd_679_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_679 <= (ap_const_lv1_1 = ap_CS_fsm(74 downto 74));
    end process;


    -- ap_sig_bdd_715 assign process. --
    ap_sig_bdd_715_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_715 <= (ap_const_lv1_1 = ap_CS_fsm(75 downto 75));
    end process;


    -- ap_sig_bdd_724 assign process. --
    ap_sig_bdd_724_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_724 <= (ap_const_lv1_1 = ap_CS_fsm(80 downto 80));
    end process;


    -- ap_sig_bdd_758 assign process. --
    ap_sig_bdd_758_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_758 <= (ap_const_lv1_1 = ap_CS_fsm(86 downto 86));
    end process;


    -- ap_sig_bdd_794 assign process. --
    ap_sig_bdd_794_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_794 <= (ap_const_lv1_1 = ap_CS_fsm(87 downto 87));
    end process;


    -- ap_sig_bdd_803 assign process. --
    ap_sig_bdd_803_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_803 <= (ap_const_lv1_1 = ap_CS_fsm(92 downto 92));
    end process;


    -- ap_sig_bdd_837 assign process. --
    ap_sig_bdd_837_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_837 <= (ap_const_lv1_1 = ap_CS_fsm(93 downto 93));
    end process;


    -- ap_sig_bdd_844 assign process. --
    ap_sig_bdd_844_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_844 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_856 assign process. --
    ap_sig_bdd_856_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_856 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    -- ap_sig_bdd_868 assign process. --
    ap_sig_bdd_868_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_868 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    -- ap_sig_bdd_880 assign process. --
    ap_sig_bdd_880_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_880 <= (ap_const_lv1_1 = ap_CS_fsm(40 downto 40));
    end process;


    -- ap_sig_bdd_892 assign process. --
    ap_sig_bdd_892_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_892 <= (ap_const_lv1_1 = ap_CS_fsm(49 downto 49));
    end process;


    -- ap_sig_bdd_904 assign process. --
    ap_sig_bdd_904_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_904 <= (ap_const_lv1_1 = ap_CS_fsm(58 downto 58));
    end process;


    -- ap_sig_bdd_916 assign process. --
    ap_sig_bdd_916_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_916 <= (ap_const_lv1_1 = ap_CS_fsm(61 downto 61));
    end process;


    -- ap_sig_bdd_937 assign process. --
    ap_sig_bdd_937_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_937 <= (ap_const_lv1_1 = ap_CS_fsm(67 downto 67));
    end process;


    -- ap_sig_bdd_953 assign process. --
    ap_sig_bdd_953_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_953 <= (ap_const_lv1_1 = ap_CS_fsm(73 downto 73));
    end process;


    -- ap_sig_bdd_967 assign process. --
    ap_sig_bdd_967_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_967 <= (ap_const_lv1_1 = ap_CS_fsm(79 downto 79));
    end process;


    -- ap_sig_bdd_978 assign process. --
    ap_sig_bdd_978_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_978 <= (ap_const_lv1_1 = ap_CS_fsm(85 downto 85));
    end process;


    -- ap_sig_bdd_989 assign process. --
    ap_sig_bdd_989_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_989 <= (ap_const_lv1_1 = ap_CS_fsm(91 downto 91));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_14 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_14_assign_proc : process(ap_sig_bdd_238)
    begin
        if (ap_sig_bdd_238) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp10_stg0_fsm_86 assign process. --
    ap_sig_cseq_ST_pp10_stg0_fsm_86_assign_proc : process(ap_sig_bdd_758)
    begin
        if (ap_sig_bdd_758) then 
            ap_sig_cseq_ST_pp10_stg0_fsm_86 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp10_stg0_fsm_86 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp11_stg0_fsm_92 assign process. --
    ap_sig_cseq_ST_pp11_stg0_fsm_92_assign_proc : process(ap_sig_bdd_803)
    begin
        if (ap_sig_bdd_803) then 
            ap_sig_cseq_ST_pp11_stg0_fsm_92 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp11_stg0_fsm_92 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_23 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_23_assign_proc : process(ap_sig_bdd_263)
    begin
        if (ap_sig_bdd_263) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg0_fsm_32 assign process. --
    ap_sig_cseq_ST_pp2_stg0_fsm_32_assign_proc : process(ap_sig_bdd_287)
    begin
        if (ap_sig_bdd_287) then 
            ap_sig_cseq_ST_pp2_stg0_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg0_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp3_stg0_fsm_41 assign process. --
    ap_sig_cseq_ST_pp3_stg0_fsm_41_assign_proc : process(ap_sig_bdd_310)
    begin
        if (ap_sig_bdd_310) then 
            ap_sig_cseq_ST_pp3_stg0_fsm_41 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp3_stg0_fsm_41 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp4_stg0_fsm_50 assign process. --
    ap_sig_cseq_ST_pp4_stg0_fsm_50_assign_proc : process(ap_sig_bdd_333)
    begin
        if (ap_sig_bdd_333) then 
            ap_sig_cseq_ST_pp4_stg0_fsm_50 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp4_stg0_fsm_50 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp5_stg0_fsm_59 assign process. --
    ap_sig_cseq_ST_pp5_stg0_fsm_59_assign_proc : process(ap_sig_bdd_356)
    begin
        if (ap_sig_bdd_356) then 
            ap_sig_cseq_ST_pp5_stg0_fsm_59 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp5_stg0_fsm_59 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp6_stg0_fsm_62 assign process. --
    ap_sig_cseq_ST_pp6_stg0_fsm_62_assign_proc : process(ap_sig_bdd_598)
    begin
        if (ap_sig_bdd_598) then 
            ap_sig_cseq_ST_pp6_stg0_fsm_62 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp6_stg0_fsm_62 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp7_stg0_fsm_68 assign process. --
    ap_sig_cseq_ST_pp7_stg0_fsm_68_assign_proc : process(ap_sig_bdd_643)
    begin
        if (ap_sig_bdd_643) then 
            ap_sig_cseq_ST_pp7_stg0_fsm_68 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp7_stg0_fsm_68 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp8_stg0_fsm_74 assign process. --
    ap_sig_cseq_ST_pp8_stg0_fsm_74_assign_proc : process(ap_sig_bdd_679)
    begin
        if (ap_sig_bdd_679) then 
            ap_sig_cseq_ST_pp8_stg0_fsm_74 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp8_stg0_fsm_74 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp9_stg0_fsm_80 assign process. --
    ap_sig_cseq_ST_pp9_stg0_fsm_80_assign_proc : process(ap_sig_bdd_724)
    begin
        if (ap_sig_bdd_724) then 
            ap_sig_cseq_ST_pp9_stg0_fsm_80 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp9_stg0_fsm_80 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st106_fsm_85 assign process. --
    ap_sig_cseq_ST_st106_fsm_85_assign_proc : process(ap_sig_bdd_978)
    begin
        if (ap_sig_bdd_978) then 
            ap_sig_cseq_ST_st106_fsm_85 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st106_fsm_85 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st110_fsm_87 assign process. --
    ap_sig_cseq_ST_st110_fsm_87_assign_proc : process(ap_sig_bdd_794)
    begin
        if (ap_sig_bdd_794) then 
            ap_sig_cseq_ST_st110_fsm_87 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st110_fsm_87 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st114_fsm_91 assign process. --
    ap_sig_cseq_ST_st114_fsm_91_assign_proc : process(ap_sig_bdd_989)
    begin
        if (ap_sig_bdd_989) then 
            ap_sig_cseq_ST_st114_fsm_91 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st114_fsm_91 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st118_fsm_93 assign process. --
    ap_sig_cseq_ST_st118_fsm_93_assign_proc : process(ap_sig_bdd_837)
    begin
        if (ap_sig_bdd_837) then 
            ap_sig_cseq_ST_st118_fsm_93 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st118_fsm_93 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st122_fsm_97 assign process. --
    ap_sig_cseq_ST_st122_fsm_97_assign_proc : process(ap_sig_bdd_1187)
    begin
        if (ap_sig_bdd_1187) then 
            ap_sig_cseq_ST_st122_fsm_97 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st122_fsm_97 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_13 assign process. --
    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_bdd_844)
    begin
        if (ap_sig_bdd_844) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st18_fsm_15 assign process. --
    ap_sig_cseq_ST_st18_fsm_15_assign_proc : process(ap_sig_bdd_479)
    begin
        if (ap_sig_bdd_479) then 
            ap_sig_cseq_ST_st18_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st19_fsm_16 assign process. --
    ap_sig_cseq_ST_st19_fsm_16_assign_proc : process(ap_sig_bdd_490)
    begin
        if (ap_sig_bdd_490) then 
            ap_sig_cseq_ST_st19_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_117)
    begin
        if (ap_sig_bdd_117) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st25_fsm_22 assign process. --
    ap_sig_cseq_ST_st25_fsm_22_assign_proc : process(ap_sig_bdd_856)
    begin
        if (ap_sig_bdd_856) then 
            ap_sig_cseq_ST_st25_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st29_fsm_24 assign process. --
    ap_sig_cseq_ST_st29_fsm_24_assign_proc : process(ap_sig_bdd_510)
    begin
        if (ap_sig_bdd_510) then 
            ap_sig_cseq_ST_st29_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_439)
    begin
        if (ap_sig_bdd_439) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st30_fsm_25 assign process. --
    ap_sig_cseq_ST_st30_fsm_25_assign_proc : process(ap_sig_bdd_1386)
    begin
        if (ap_sig_bdd_1386) then 
            ap_sig_cseq_ST_st30_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st30_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st36_fsm_31 assign process. --
    ap_sig_cseq_ST_st36_fsm_31_assign_proc : process(ap_sig_bdd_868)
    begin
        if (ap_sig_bdd_868) then 
            ap_sig_cseq_ST_st36_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st36_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st40_fsm_33 assign process. --
    ap_sig_cseq_ST_st40_fsm_33_assign_proc : process(ap_sig_bdd_528)
    begin
        if (ap_sig_bdd_528) then 
            ap_sig_cseq_ST_st40_fsm_33 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st40_fsm_33 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st41_fsm_34 assign process. --
    ap_sig_cseq_ST_st41_fsm_34_assign_proc : process(ap_sig_bdd_537)
    begin
        if (ap_sig_bdd_537) then 
            ap_sig_cseq_ST_st41_fsm_34 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st41_fsm_34 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st47_fsm_40 assign process. --
    ap_sig_cseq_ST_st47_fsm_40_assign_proc : process(ap_sig_bdd_880)
    begin
        if (ap_sig_bdd_880) then 
            ap_sig_cseq_ST_st47_fsm_40 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st47_fsm_40 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st51_fsm_42 assign process. --
    ap_sig_cseq_ST_st51_fsm_42_assign_proc : process(ap_sig_bdd_554)
    begin
        if (ap_sig_bdd_554) then 
            ap_sig_cseq_ST_st51_fsm_42 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st51_fsm_42 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st52_fsm_43 assign process. --
    ap_sig_cseq_ST_st52_fsm_43_assign_proc : process(ap_sig_bdd_1399)
    begin
        if (ap_sig_bdd_1399) then 
            ap_sig_cseq_ST_st52_fsm_43 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st52_fsm_43 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st58_fsm_49 assign process. --
    ap_sig_cseq_ST_st58_fsm_49_assign_proc : process(ap_sig_bdd_892)
    begin
        if (ap_sig_bdd_892) then 
            ap_sig_cseq_ST_st58_fsm_49 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st58_fsm_49 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st62_fsm_51 assign process. --
    ap_sig_cseq_ST_st62_fsm_51_assign_proc : process(ap_sig_bdd_572)
    begin
        if (ap_sig_bdd_572) then 
            ap_sig_cseq_ST_st62_fsm_51 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st62_fsm_51 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st63_fsm_52 assign process. --
    ap_sig_cseq_ST_st63_fsm_52_assign_proc : process(ap_sig_bdd_581)
    begin
        if (ap_sig_bdd_581) then 
            ap_sig_cseq_ST_st63_fsm_52 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st63_fsm_52 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st69_fsm_58 assign process. --
    ap_sig_cseq_ST_st69_fsm_58_assign_proc : process(ap_sig_bdd_904)
    begin
        if (ap_sig_bdd_904) then 
            ap_sig_cseq_ST_st69_fsm_58 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st69_fsm_58 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_1171)
    begin
        if (ap_sig_bdd_1171) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st73_fsm_60 assign process. --
    ap_sig_cseq_ST_st73_fsm_60_assign_proc : process(ap_sig_bdd_1224)
    begin
        if (ap_sig_bdd_1224) then 
            ap_sig_cseq_ST_st73_fsm_60 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st73_fsm_60 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st74_fsm_61 assign process. --
    ap_sig_cseq_ST_st74_fsm_61_assign_proc : process(ap_sig_bdd_916)
    begin
        if (ap_sig_bdd_916) then 
            ap_sig_cseq_ST_st74_fsm_61 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st74_fsm_61 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st78_fsm_63 assign process. --
    ap_sig_cseq_ST_st78_fsm_63_assign_proc : process(ap_sig_bdd_634)
    begin
        if (ap_sig_bdd_634) then 
            ap_sig_cseq_ST_st78_fsm_63 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st78_fsm_63 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_455)
    begin
        if (ap_sig_bdd_455) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st82_fsm_67 assign process. --
    ap_sig_cseq_ST_st82_fsm_67_assign_proc : process(ap_sig_bdd_937)
    begin
        if (ap_sig_bdd_937) then 
            ap_sig_cseq_ST_st82_fsm_67 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st82_fsm_67 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_1371)
    begin
        if (ap_sig_bdd_1371) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st90_fsm_73 assign process. --
    ap_sig_cseq_ST_st90_fsm_73_assign_proc : process(ap_sig_bdd_953)
    begin
        if (ap_sig_bdd_953) then 
            ap_sig_cseq_ST_st90_fsm_73 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st90_fsm_73 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st94_fsm_75 assign process. --
    ap_sig_cseq_ST_st94_fsm_75_assign_proc : process(ap_sig_bdd_715)
    begin
        if (ap_sig_bdd_715) then 
            ap_sig_cseq_ST_st94_fsm_75 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st94_fsm_75 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st98_fsm_79 assign process. --
    ap_sig_cseq_ST_st98_fsm_79_assign_proc : process(ap_sig_bdd_967)
    begin
        if (ap_sig_bdd_967) then 
            ap_sig_cseq_ST_st98_fsm_79 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st98_fsm_79 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_bgmodel_ARREADY assign process. --
    ap_sig_ioackin_m_axi_bgmodel_ARREADY_assign_proc : process(m_axi_bgmodel_ARREADY, ap_reg_ioackin_m_axi_bgmodel_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)) then 
            ap_sig_ioackin_m_axi_bgmodel_ARREADY <= m_axi_bgmodel_ARREADY;
        else 
            ap_sig_ioackin_m_axi_bgmodel_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_bgmodel_AWREADY assign process. --
    ap_sig_ioackin_m_axi_bgmodel_AWREADY_assign_proc : process(m_axi_bgmodel_AWREADY, ap_reg_ioackin_m_axi_bgmodel_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) then 
            ap_sig_ioackin_m_axi_bgmodel_AWREADY <= m_axi_bgmodel_AWREADY;
        else 
            ap_sig_ioackin_m_axi_bgmodel_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_bgmodel_WREADY assign process. --
    ap_sig_ioackin_m_axi_bgmodel_WREADY_assign_proc : process(m_axi_bgmodel_WREADY, ap_reg_ioackin_m_axi_bgmodel_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) then 
            ap_sig_ioackin_m_axi_bgmodel_WREADY <= m_axi_bgmodel_WREADY;
        else 
            ap_sig_ioackin_m_axi_bgmodel_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_frame_out_ARREADY assign process. --
    ap_sig_ioackin_m_axi_frame_out_ARREADY_assign_proc : process(m_axi_frame_out_ARREADY, ap_reg_ioackin_m_axi_frame_out_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY)) then 
            ap_sig_ioackin_m_axi_frame_out_ARREADY <= m_axi_frame_out_ARREADY;
        else 
            ap_sig_ioackin_m_axi_frame_out_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_frame_out_AWREADY assign process. --
    ap_sig_ioackin_m_axi_frame_out_AWREADY_assign_proc : process(m_axi_frame_out_AWREADY, ap_reg_ioackin_m_axi_frame_out_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY)) then 
            ap_sig_ioackin_m_axi_frame_out_AWREADY <= m_axi_frame_out_AWREADY;
        else 
            ap_sig_ioackin_m_axi_frame_out_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_frame_out_WREADY assign process. --
    ap_sig_ioackin_m_axi_frame_out_WREADY_assign_proc : process(m_axi_frame_out_WREADY, ap_reg_ioackin_m_axi_frame_out_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)) then 
            ap_sig_ioackin_m_axi_frame_out_WREADY <= m_axi_frame_out_WREADY;
        else 
            ap_sig_ioackin_m_axi_frame_out_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond10_fu_1055_p2 <= "1" when (indvar8_reg_547 = ap_const_lv10_280) else "0";
    exitcond11_fu_1080_p2 <= "1" when (indvar10_reg_558 = ap_const_lv13_1400) else "0";
    exitcond12_fu_1111_p2 <= "1" when (indvar11_reg_569 = ap_const_lv10_280) else "0";
    exitcond1_fu_721_p2 <= "1" when (indvar_phi_fu_446_p4 = ap_const_lv10_280) else "0";
    exitcond2_fu_999_p2 <= "1" when (indvar6_reg_525 = ap_const_lv10_280) else "0";
    exitcond3_fu_1024_p2 <= "1" when (indvar7_reg_536 = ap_const_lv13_1400) else "0";
    exitcond4_fu_787_p2 <= "1" when (indvar9_phi_fu_458_p4 = ap_const_lv13_1400) else "0";
    exitcond5_fu_828_p2 <= "1" when (indvar1_phi_fu_470_p4 = ap_const_lv10_280) else "0";
    exitcond6_fu_869_p2 <= "1" when (indvar2_phi_fu_482_p4 = ap_const_lv13_1400) else "0";
    exitcond7_fu_910_p2 <= "1" when (indvar3_phi_fu_494_p4 = ap_const_lv10_280) else "0";
    exitcond8_fu_951_p2 <= "1" when (indvar4_phi_fu_506_p4 = ap_const_lv13_1400) else "0";
    exitcond9_fu_968_p2 <= "1" when (indvar5_reg_514 = ap_const_lv13_1400) else "0";
    exitcond_fu_654_p2 <= "1" when (p_reg_406 = ap_const_lv20_96000) else "0";
    extLd1_fu_1072_p3 <= 
        ap_const_lv8_FF when (part2_frame_out_q0(0) = '1') else 
        ap_const_lv8_0;
    extLd2_fu_1128_p3 <= 
        ap_const_lv8_FF when (part3_frame_out_q0(0) = '1') else 
        ap_const_lv8_0;
    extLd_fu_1016_p3 <= 
        ap_const_lv8_FF when (part_frame_out_q0(0) = '1') else 
        ap_const_lv8_0;
    grp_bgsub_process_fu_580_ap_start <= grp_bgsub_process_fu_580_ap_start_ap_start_reg;
    grp_bgsub_process_fu_580_bgmodel_q0 <= part_bgmodel_q0;
    grp_bgsub_process_fu_580_bgmodel_q1 <= part_bgmodel_q1;
    grp_bgsub_process_fu_580_frame_in_q0 <= part_frame_in_q0;
    grp_bgsub_process_fu_580_learningRate <= learningRate_reg_417;
    grp_bgsub_process_fu_589_ap_start <= grp_bgsub_process_fu_589_ap_start_ap_start_reg;
    grp_bgsub_process_fu_589_bgmodel_q0 <= part2_bgmodel_q0;
    grp_bgsub_process_fu_589_bgmodel_q1 <= part2_bgmodel_q1;
    grp_bgsub_process_fu_589_frame_in_q0 <= part2_frame_in_q0;
    grp_bgsub_process_fu_589_learningRate <= learningRate_reg_417;
    grp_bgsub_process_fu_598_ap_start <= grp_bgsub_process_fu_598_ap_start_ap_start_reg;
    grp_bgsub_process_fu_598_bgmodel_q0 <= part3_bgmodel_q0;
    grp_bgsub_process_fu_598_bgmodel_q1 <= part3_bgmodel_q1;
    grp_bgsub_process_fu_598_frame_in_q0 <= part3_frame_in_q0;
    grp_bgsub_process_fu_598_learningRate <= learningRate_reg_417;

    -- indvar1_phi_fu_470_p4 assign process. --
    indvar1_phi_fu_470_p4_assign_proc : process(indvar1_reg_466, ap_sig_cseq_ST_pp2_stg0_fsm_32, exitcond5_reg_1246, ap_reg_ppiten_pp2_it1, indvar_next2_reg_1250)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_lv1_0 = exitcond5_reg_1246) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            indvar1_phi_fu_470_p4 <= indvar_next2_reg_1250;
        else 
            indvar1_phi_fu_470_p4 <= indvar1_reg_466;
        end if; 
    end process;


    -- indvar2_phi_fu_482_p4 assign process. --
    indvar2_phi_fu_482_p4_assign_proc : process(indvar2_reg_478, ap_sig_cseq_ST_pp3_stg0_fsm_41, exitcond6_reg_1266, ap_reg_ppiten_pp3_it1, indvar_next3_reg_1270)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_lv1_0 = exitcond6_reg_1266) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) then 
            indvar2_phi_fu_482_p4 <= indvar_next3_reg_1270;
        else 
            indvar2_phi_fu_482_p4 <= indvar2_reg_478;
        end if; 
    end process;


    -- indvar3_phi_fu_494_p4 assign process. --
    indvar3_phi_fu_494_p4_assign_proc : process(indvar3_reg_490, ap_sig_cseq_ST_pp4_stg0_fsm_50, exitcond7_reg_1286, ap_reg_ppiten_pp4_it1, indvar_next4_reg_1290)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_lv1_0 = exitcond7_reg_1286) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) then 
            indvar3_phi_fu_494_p4 <= indvar_next4_reg_1290;
        else 
            indvar3_phi_fu_494_p4 <= indvar3_reg_490;
        end if; 
    end process;


    -- indvar4_phi_fu_506_p4 assign process. --
    indvar4_phi_fu_506_p4_assign_proc : process(indvar4_reg_502, ap_sig_cseq_ST_pp5_stg0_fsm_59, exitcond8_reg_1306, ap_reg_ppiten_pp5_it1, indvar_next5_reg_1310)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_lv1_0 = exitcond8_reg_1306) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) then 
            indvar4_phi_fu_506_p4 <= indvar_next5_reg_1310;
        else 
            indvar4_phi_fu_506_p4 <= indvar4_reg_502;
        end if; 
    end process;


    -- indvar9_phi_fu_458_p4 assign process. --
    indvar9_phi_fu_458_p4_assign_proc : process(indvar9_reg_454, ap_sig_cseq_ST_pp1_stg0_fsm_23, exitcond4_reg_1226, ap_reg_ppiten_pp1_it1, indvar_next1_reg_1230)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_lv1_0 = exitcond4_reg_1226) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            indvar9_phi_fu_458_p4 <= indvar_next1_reg_1230;
        else 
            indvar9_phi_fu_458_p4 <= indvar9_reg_454;
        end if; 
    end process;

    indvar_next10_fu_1086_p2 <= std_logic_vector(unsigned(indvar10_reg_558) + unsigned(ap_const_lv13_1));
    indvar_next11_fu_1117_p2 <= std_logic_vector(unsigned(indvar11_reg_569) + unsigned(ap_const_lv10_1));
    indvar_next1_fu_793_p2 <= std_logic_vector(unsigned(indvar9_phi_fu_458_p4) + unsigned(ap_const_lv13_1));
    indvar_next2_fu_834_p2 <= std_logic_vector(unsigned(indvar1_phi_fu_470_p4) + unsigned(ap_const_lv10_1));
    indvar_next3_fu_875_p2 <= std_logic_vector(unsigned(indvar2_phi_fu_482_p4) + unsigned(ap_const_lv13_1));
    indvar_next4_fu_916_p2 <= std_logic_vector(unsigned(indvar3_phi_fu_494_p4) + unsigned(ap_const_lv10_1));
    indvar_next5_fu_957_p2 <= std_logic_vector(unsigned(indvar4_phi_fu_506_p4) + unsigned(ap_const_lv13_1));
    indvar_next6_fu_974_p2 <= std_logic_vector(unsigned(indvar5_reg_514) + unsigned(ap_const_lv13_1));
    indvar_next7_fu_1005_p2 <= std_logic_vector(unsigned(indvar6_reg_525) + unsigned(ap_const_lv10_1));
    indvar_next8_fu_1030_p2 <= std_logic_vector(unsigned(indvar7_reg_536) + unsigned(ap_const_lv13_1));
    indvar_next9_fu_1061_p2 <= std_logic_vector(unsigned(indvar8_reg_547) + unsigned(ap_const_lv10_1));
    indvar_next_fu_727_p2 <= std_logic_vector(unsigned(indvar_phi_fu_446_p4) + unsigned(ap_const_lv10_1));

    -- indvar_phi_fu_446_p4 assign process. --
    indvar_phi_fu_446_p4_assign_proc : process(indvar_reg_442, ap_sig_cseq_ST_pp0_stg0_fsm_14, exitcond1_reg_1200, ap_reg_ppiten_pp0_it1, indvar_next_reg_1204)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (exitcond1_reg_1200 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            indvar_phi_fu_446_p4 <= indvar_next_reg_1204;
        else 
            indvar_phi_fu_446_p4 <= indvar_reg_442;
        end if; 
    end process;


    -- m_axi_bgmodel_ARADDR assign process. --
    m_axi_bgmodel_ARADDR_assign_proc : process(ap_sig_cseq_ST_st19_fsm_16, ap_sig_cseq_ST_st41_fsm_34, ap_sig_cseq_ST_st63_fsm_52, tmp_120_fu_777_p1, tmp_126_fu_859_p1, tmp_132_fu_941_p1, ap_reg_ioackin_m_axi_bgmodel_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52)) then 
                m_axi_bgmodel_ARADDR <= tmp_132_fu_941_p1(32 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34)) then 
                m_axi_bgmodel_ARADDR <= tmp_126_fu_859_p1(32 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16)) then 
                m_axi_bgmodel_ARADDR <= tmp_120_fu_777_p1(32 - 1 downto 0);
            else 
                m_axi_bgmodel_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_bgmodel_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_bgmodel_ARBURST <= ap_const_lv2_0;
    m_axi_bgmodel_ARCACHE <= ap_const_lv4_0;
    m_axi_bgmodel_ARID <= ap_const_lv1_0;
    m_axi_bgmodel_ARLEN <= ap_const_lv32_1400;
    m_axi_bgmodel_ARLOCK <= ap_const_lv2_0;
    m_axi_bgmodel_ARPROT <= ap_const_lv3_0;
    m_axi_bgmodel_ARQOS <= ap_const_lv4_0;
    m_axi_bgmodel_ARREGION <= ap_const_lv4_0;
    m_axi_bgmodel_ARSIZE <= ap_const_lv3_0;
    m_axi_bgmodel_ARUSER <= ap_const_lv1_0;

    -- m_axi_bgmodel_ARVALID assign process. --
    m_axi_bgmodel_ARVALID_assign_proc : process(ap_sig_cseq_ST_st19_fsm_16, ap_sig_cseq_ST_st41_fsm_34, ap_sig_cseq_ST_st63_fsm_52, ap_reg_ioackin_m_axi_bgmodel_ARREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)))) then 
            m_axi_bgmodel_ARVALID <= ap_const_logic_1;
        else 
            m_axi_bgmodel_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_bgmodel_AWADDR assign process. --
    m_axi_bgmodel_AWADDR_assign_proc : process(bgmodel_addr_17_reg_1220, bgmodel_addr_18_reg_1260, bgmodel_addr_19_reg_1300, tmp_114_fu_643_p1, ap_reg_ioackin_m_axi_bgmodel_AWREADY, ap_sig_bdd_1282, ap_sig_bdd_1317, ap_sig_bdd_1332, ap_sig_bdd_1348)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) then
            if (ap_sig_bdd_1348) then 
                m_axi_bgmodel_AWADDR <= bgmodel_addr_19_reg_1300;
            elsif (ap_sig_bdd_1332) then 
                m_axi_bgmodel_AWADDR <= bgmodel_addr_18_reg_1260;
            elsif (ap_sig_bdd_1317) then 
                m_axi_bgmodel_AWADDR <= bgmodel_addr_17_reg_1220;
            elsif (ap_sig_bdd_1282) then 
                m_axi_bgmodel_AWADDR <= tmp_114_fu_643_p1(32 - 1 downto 0);
            else 
                m_axi_bgmodel_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_bgmodel_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_bgmodel_AWBURST <= ap_const_lv2_0;
    m_axi_bgmodel_AWCACHE <= ap_const_lv4_0;
    m_axi_bgmodel_AWID <= ap_const_lv1_0;

    -- m_axi_bgmodel_AWLEN assign process. --
    m_axi_bgmodel_AWLEN_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, init, m_axi_frame_out_BVALID, ap_sig_bdd_414, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_ap_done, grp_bgsub_process_fu_589_ap_done, grp_bgsub_process_fu_598_ap_done, ap_sig_cseq_ST_st90_fsm_73, ap_sig_cseq_ST_st106_fsm_85, ap_reg_ioackin_m_axi_bgmodel_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY) and not(((ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)))) then 
            m_axi_bgmodel_AWLEN <= ap_const_lv32_1400;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not(ap_sig_bdd_414) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY))) then 
            m_axi_bgmodel_AWLEN <= ap_const_lv32_96000;
        else 
            m_axi_bgmodel_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_bgmodel_AWLOCK <= ap_const_lv2_0;
    m_axi_bgmodel_AWPROT <= ap_const_lv3_0;
    m_axi_bgmodel_AWQOS <= ap_const_lv4_0;
    m_axi_bgmodel_AWREGION <= ap_const_lv4_0;
    m_axi_bgmodel_AWSIZE <= ap_const_lv3_0;
    m_axi_bgmodel_AWUSER <= ap_const_lv1_0;

    -- m_axi_bgmodel_AWVALID assign process. --
    m_axi_bgmodel_AWVALID_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, init, m_axi_frame_out_BVALID, ap_sig_bdd_414, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_ap_done, grp_bgsub_process_fu_589_ap_done, grp_bgsub_process_fu_598_ap_done, ap_sig_cseq_ST_st90_fsm_73, ap_sig_cseq_ST_st106_fsm_85, ap_reg_ioackin_m_axi_bgmodel_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not(ap_sig_bdd_414) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY) and not(((ap_const_logic_0 = grp_bgsub_process_fu_580_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_589_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_598_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)))) then 
            m_axi_bgmodel_AWVALID <= ap_const_logic_1;
        else 
            m_axi_bgmodel_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_bgmodel_BREADY assign process. --
    m_axi_bgmodel_BREADY_assign_proc : process(init, m_axi_bgmodel_BVALID, ap_sig_cseq_ST_st82_fsm_67, ap_sig_ioackin_m_axi_frame_out_AWREADY, ap_sig_cseq_ST_st98_fsm_79, ap_sig_cseq_ST_st114_fsm_91, ap_sig_cseq_ST_st6_fsm_5, ap_sig_bdd_1174)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st82_fsm_67) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_79)) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st114_fsm_91)) or (not((ap_const_lv1_0 = init)) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(ap_sig_bdd_1174)))) then 
            m_axi_bgmodel_BREADY <= ap_const_logic_1;
        else 
            m_axi_bgmodel_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_bgmodel_RREADY assign process. --
    m_axi_bgmodel_RREADY_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_23, exitcond4_reg_1226, ap_sig_bdd_271, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp3_stg0_fsm_41, exitcond6_reg_1266, ap_sig_bdd_317, ap_reg_ppiten_pp3_it1, ap_sig_cseq_ST_pp5_stg0_fsm_59, exitcond8_reg_1306, ap_sig_bdd_363, ap_reg_ppiten_pp5_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_lv1_0 = exitcond4_reg_1226) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_lv1_0 = exitcond6_reg_1266) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_lv1_0 = exitcond8_reg_1306) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))))) then 
            m_axi_bgmodel_RREADY <= ap_const_logic_1;
        else 
            m_axi_bgmodel_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_bgmodel_WDATA assign process. --
    m_axi_bgmodel_WDATA_assign_proc : process(part_bgmodel_load_reg_1329, part2_bgmodel_load_reg_1372, part3_bgmodel_load_reg_1415, ap_reg_ioackin_m_axi_bgmodel_WREADY, ap_sig_bdd_1293, ap_sig_bdd_1323, ap_sig_bdd_1339, ap_sig_bdd_1355)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) then
            if (ap_sig_bdd_1355) then 
                m_axi_bgmodel_WDATA <= part3_bgmodel_load_reg_1415;
            elsif (ap_sig_bdd_1339) then 
                m_axi_bgmodel_WDATA <= part2_bgmodel_load_reg_1372;
            elsif (ap_sig_bdd_1323) then 
                m_axi_bgmodel_WDATA <= part_bgmodel_load_reg_1329;
            elsif (ap_sig_bdd_1293) then 
                m_axi_bgmodel_WDATA <= ap_const_lv32_0;
            else 
                m_axi_bgmodel_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_bgmodel_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_bgmodel_WID <= ap_const_lv1_0;
    m_axi_bgmodel_WLAST <= ap_const_logic_0;
    m_axi_bgmodel_WSTRB <= ap_const_lv4_F;
    m_axi_bgmodel_WUSER <= ap_const_lv1_0;

    -- m_axi_bgmodel_WVALID assign process. --
    m_axi_bgmodel_WVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_654_p2, ap_reg_ppstg_exitcond9_reg_1315_pp6_it1, ap_reg_ppiten_pp6_it2, ap_reg_ppstg_exitcond3_reg_1358_pp8_it1, ap_reg_ppiten_pp8_it2, ap_reg_ppstg_exitcond11_reg_1401_pp10_it1, ap_reg_ppiten_pp10_it2, ap_reg_ioackin_m_axi_bgmodel_WREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_654_p2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)))) then 
            m_axi_bgmodel_WVALID <= ap_const_logic_1;
        else 
            m_axi_bgmodel_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_ARADDR assign process. --
    m_axi_frame_out_ARADDR_assign_proc : process(frame_out_addr_reg_1194, frame_out_addr_2_reg_1240, frame_out_addr_3_reg_1280, ap_reg_ioackin_m_axi_frame_out_ARREADY, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st30_fsm_25, ap_sig_cseq_ST_st52_fsm_43)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_43)) then 
                m_axi_frame_out_ARADDR <= frame_out_addr_3_reg_1280;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_25)) then 
                m_axi_frame_out_ARADDR <= frame_out_addr_2_reg_1240;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                m_axi_frame_out_ARADDR <= frame_out_addr_reg_1194;
            else 
                m_axi_frame_out_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_frame_out_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_frame_out_ARBURST <= ap_const_lv2_0;
    m_axi_frame_out_ARCACHE <= ap_const_lv4_0;
    m_axi_frame_out_ARID <= ap_const_lv1_0;
    m_axi_frame_out_ARLEN <= ap_const_lv32_280;
    m_axi_frame_out_ARLOCK <= ap_const_lv2_0;
    m_axi_frame_out_ARPROT <= ap_const_lv3_0;
    m_axi_frame_out_ARQOS <= ap_const_lv4_0;
    m_axi_frame_out_ARREGION <= ap_const_lv4_0;
    m_axi_frame_out_ARSIZE <= ap_const_lv3_0;
    m_axi_frame_out_ARUSER <= ap_const_lv1_0;

    -- m_axi_frame_out_ARVALID assign process. --
    m_axi_frame_out_ARVALID_assign_proc : process(ap_reg_ioackin_m_axi_frame_out_ARREADY, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st30_fsm_25, ap_sig_cseq_ST_st52_fsm_43)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY)) or ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_25)) or ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_43)))) then 
            m_axi_frame_out_ARVALID <= ap_const_logic_1;
        else 
            m_axi_frame_out_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_AWADDR assign process. --
    m_axi_frame_out_AWADDR_assign_proc : process(frame_out_addr_4_reg_1334, frame_out_addr_5_reg_1377, frame_out_addr_6_reg_1420, ap_sig_cseq_ST_st82_fsm_67, ap_sig_cseq_ST_st98_fsm_79, ap_sig_cseq_ST_st114_fsm_91, ap_sig_bdd_2104)
    begin
        if (ap_sig_bdd_2104) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st114_fsm_91)) then 
                m_axi_frame_out_AWADDR <= frame_out_addr_6_reg_1420;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_79)) then 
                m_axi_frame_out_AWADDR <= frame_out_addr_5_reg_1377;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st82_fsm_67)) then 
                m_axi_frame_out_AWADDR <= frame_out_addr_4_reg_1334;
            else 
                m_axi_frame_out_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_frame_out_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_frame_out_AWBURST <= ap_const_lv2_0;
    m_axi_frame_out_AWCACHE <= ap_const_lv4_0;
    m_axi_frame_out_AWID <= ap_const_lv1_0;
    m_axi_frame_out_AWLEN <= ap_const_lv32_280;
    m_axi_frame_out_AWLOCK <= ap_const_lv2_0;
    m_axi_frame_out_AWPROT <= ap_const_lv3_0;
    m_axi_frame_out_AWQOS <= ap_const_lv4_0;
    m_axi_frame_out_AWREGION <= ap_const_lv4_0;
    m_axi_frame_out_AWSIZE <= ap_const_lv3_0;
    m_axi_frame_out_AWUSER <= ap_const_lv1_0;

    -- m_axi_frame_out_AWVALID assign process. --
    m_axi_frame_out_AWVALID_assign_proc : process(m_axi_bgmodel_BVALID, ap_sig_cseq_ST_st82_fsm_67, ap_sig_cseq_ST_st98_fsm_79, ap_sig_cseq_ST_st114_fsm_91, ap_reg_ioackin_m_axi_frame_out_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st82_fsm_67) and not((m_axi_bgmodel_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st98_fsm_79) and not((m_axi_bgmodel_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st114_fsm_91) and not((m_axi_bgmodel_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY)))) then 
            m_axi_frame_out_AWVALID <= ap_const_logic_1;
        else 
            m_axi_frame_out_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_BREADY assign process. --
    m_axi_frame_out_BREADY_assign_proc : process(m_axi_frame_out_BVALID, ap_sig_ioackin_m_axi_bgmodel_AWREADY, ap_sig_cseq_ST_st90_fsm_73, ap_sig_cseq_ST_st106_fsm_85, ap_sig_cseq_ST_st122_fsm_97)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st90_fsm_73) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) or (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st106_fsm_85)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st122_fsm_97) and not((m_axi_frame_out_BVALID = ap_const_logic_0))))) then 
            m_axi_frame_out_BREADY <= ap_const_logic_1;
        else 
            m_axi_frame_out_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_RREADY assign process. --
    m_axi_frame_out_RREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_14, exitcond1_reg_1200, ap_sig_bdd_247, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp2_stg0_fsm_32, exitcond5_reg_1246, ap_sig_bdd_294, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp4_stg0_fsm_50, exitcond7_reg_1286, ap_sig_bdd_340, ap_reg_ppiten_pp4_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (exitcond1_reg_1200 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_lv1_0 = exitcond5_reg_1246) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_lv1_0 = exitcond7_reg_1286) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))))) then 
            m_axi_frame_out_RREADY <= ap_const_logic_1;
        else 
            m_axi_frame_out_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_WDATA assign process. --
    m_axi_frame_out_WDATA_assign_proc : process(extLd_reg_1353, extLd1_reg_1396, extLd2_reg_1439, ap_reg_ioackin_m_axi_frame_out_WREADY, ap_sig_bdd_1418, ap_sig_bdd_1431, ap_sig_bdd_1446)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)) then
            if (ap_sig_bdd_1446) then 
                m_axi_frame_out_WDATA <= extLd2_reg_1439;
            elsif (ap_sig_bdd_1431) then 
                m_axi_frame_out_WDATA <= extLd1_reg_1396;
            elsif (ap_sig_bdd_1418) then 
                m_axi_frame_out_WDATA <= extLd_reg_1353;
            else 
                m_axi_frame_out_WDATA <= "XXXXXXXX";
            end if;
        else 
            m_axi_frame_out_WDATA <= "XXXXXXXX";
        end if; 
    end process;

    m_axi_frame_out_WID <= ap_const_lv1_0;
    m_axi_frame_out_WLAST <= ap_const_logic_0;
    m_axi_frame_out_WSTRB <= ap_const_lv1_1;
    m_axi_frame_out_WUSER <= ap_const_lv1_0;

    -- m_axi_frame_out_WVALID assign process. --
    m_axi_frame_out_WVALID_assign_proc : process(ap_reg_ppstg_exitcond2_reg_1339_pp7_it1, ap_reg_ppiten_pp7_it2, ap_reg_ppstg_exitcond10_reg_1382_pp9_it1, ap_reg_ppiten_pp9_it2, ap_reg_ppstg_exitcond12_reg_1425_pp11_it1, ap_reg_ppiten_pp11_it2, ap_reg_ioackin_m_axi_frame_out_WREADY)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)))) then 
            m_axi_frame_out_WVALID <= ap_const_logic_1;
        else 
            m_axi_frame_out_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_1_fu_660_p2 <= std_logic_vector(unsigned(p_reg_406) + unsigned(ap_const_lv20_1));
    p_shl2_cast_fu_692_p1 <= std_logic_vector(resize(unsigned(p_shl2_fu_684_p3),17));
    p_shl2_fu_684_p3 <= (part_reg_430 & ap_const_lv7_0);
    p_shl3_cast_fu_746_p1 <= std_logic_vector(resize(unsigned(p_shl3_fu_738_p3),20));
    p_shl3_fu_738_p3 <= (part_reg_430 & ap_const_lv12_0);
    p_shl4_cast_fu_758_p1 <= std_logic_vector(resize(unsigned(p_shl4_fu_750_p3),20));
    p_shl4_fu_750_p3 <= (part_reg_430 & ap_const_lv10_0);
    p_shl_cast_fu_680_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_672_p3),17));
    p_shl_fu_672_p3 <= (part_reg_430 & ap_const_lv9_0);

    -- part2_bgmodel_address0 assign process. --
    part2_bgmodel_address0_assign_proc : process(ap_reg_ppiten_pp3_it2, ap_sig_cseq_ST_pp8_stg0_fsm_74, ap_reg_ppiten_pp8_it0, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_bgmodel_address0, tmp_67_fu_881_p1, tmp_78_fu_1036_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp3_it2)) then 
            part2_bgmodel_address0 <= tmp_67_fu_881_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_74) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it0))) then 
            part2_bgmodel_address0 <= tmp_78_fu_1036_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_bgmodel_address0 <= grp_bgsub_process_fu_589_bgmodel_address0;
        else 
            part2_bgmodel_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    part2_bgmodel_address1 <= grp_bgsub_process_fu_589_bgmodel_address1;

    -- part2_bgmodel_ce0 assign process. --
    part2_bgmodel_ce0_assign_proc : process(ap_sig_bdd_317, ap_reg_ppiten_pp3_it1, ap_reg_ppiten_pp3_it2, ap_sig_ioackin_m_axi_bgmodel_WREADY, ap_sig_cseq_ST_pp8_stg0_fsm_74, ap_reg_ppiten_pp8_it0, ap_reg_ppstg_exitcond3_reg_1358_pp8_it1, ap_reg_ppiten_pp8_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_bgmodel_ce0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_74) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1358_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))))) then 
            part2_bgmodel_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_bgmodel_ce0 <= grp_bgsub_process_fu_589_bgmodel_ce0;
        else 
            part2_bgmodel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_bgmodel_ce1 assign process. --
    part2_bgmodel_ce1_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_bgmodel_ce1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_bgmodel_ce1 <= grp_bgsub_process_fu_589_bgmodel_ce1;
        else 
            part2_bgmodel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_bgmodel_d0 assign process. --
    part2_bgmodel_d0_assign_proc : process(ap_reg_ppiten_pp3_it2, reg_614, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_bgmodel_d0)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp3_it2)) then 
            part2_bgmodel_d0 <= reg_614;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_bgmodel_d0 <= grp_bgsub_process_fu_589_bgmodel_d0;
        else 
            part2_bgmodel_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    part2_bgmodel_d1 <= grp_bgsub_process_fu_589_bgmodel_d1;

    -- part2_bgmodel_we0 assign process. --
    part2_bgmodel_we0_assign_proc : process(ap_sig_bdd_317, ap_reg_ppiten_pp3_it1, ap_reg_ppiten_pp3_it2, ap_reg_ppstg_exitcond6_reg_1266_pp3_it1, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_bgmodel_we0)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not((ap_sig_bdd_317 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_1266_pp3_it1)))) then 
            part2_bgmodel_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_bgmodel_we0 <= grp_bgsub_process_fu_589_bgmodel_we0;
        else 
            part2_bgmodel_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_bgmodel_we1 assign process. --
    part2_bgmodel_we1_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_bgmodel_we1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_bgmodel_we1 <= grp_bgsub_process_fu_589_bgmodel_we1;
        else 
            part2_bgmodel_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_frame_in_address0 assign process. --
    part2_frame_in_address0_assign_proc : process(ap_reg_ppiten_pp2_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_frame_in_address0, tmp_64_fu_840_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) then 
            part2_frame_in_address0 <= tmp_64_fu_840_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_frame_in_address0 <= grp_bgsub_process_fu_589_frame_in_address0;
        else 
            part2_frame_in_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part2_frame_in_ce0 assign process. --
    part2_frame_in_ce0_assign_proc : process(ap_sig_bdd_294, ap_reg_ppiten_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_frame_in_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then 
            part2_frame_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_frame_in_ce0 <= grp_bgsub_process_fu_589_frame_in_ce0;
        else 
            part2_frame_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part2_frame_in_d0 <= reg_607;

    -- part2_frame_in_we0 assign process. --
    part2_frame_in_we0_assign_proc : process(ap_sig_bdd_294, ap_reg_ppiten_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppstg_exitcond5_reg_1246_pp2_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((ap_sig_bdd_294 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_1246_pp2_it1)))) then 
            part2_frame_in_we0 <= ap_const_logic_1;
        else 
            part2_frame_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_frame_out_address0 assign process. --
    part2_frame_out_address0_assign_proc : process(ap_sig_cseq_ST_pp9_stg0_fsm_80, ap_reg_ppiten_pp9_it0, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_frame_out_address0, tmp_80_fu_1067_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_80) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it0))) then 
            part2_frame_out_address0 <= tmp_80_fu_1067_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_frame_out_address0 <= grp_bgsub_process_fu_589_frame_out_address0;
        else 
            part2_frame_out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part2_frame_out_ce0 assign process. --
    part2_frame_out_ce0_assign_proc : process(ap_sig_ioackin_m_axi_frame_out_WREADY, ap_sig_cseq_ST_pp9_stg0_fsm_80, ap_reg_ppiten_pp9_it0, ap_reg_ppstg_exitcond10_reg_1382_pp9_it1, ap_reg_ppiten_pp9_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_frame_out_ce0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_80) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1382_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))))) then 
            part2_frame_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_frame_out_ce0 <= grp_bgsub_process_fu_589_frame_out_ce0;
        else 
            part2_frame_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part2_frame_out_d0 <= grp_bgsub_process_fu_589_frame_out_d0;

    -- part2_frame_out_we0 assign process. --
    part2_frame_out_we0_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_589_frame_out_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part2_frame_out_we0 <= grp_bgsub_process_fu_589_frame_out_we0;
        else 
            part2_frame_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_bgmodel_address0 assign process. --
    part3_bgmodel_address0_assign_proc : process(ap_reg_ppiten_pp5_it2, ap_sig_cseq_ST_pp10_stg0_fsm_86, ap_reg_ppiten_pp10_it0, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_bgmodel_address0, tmp_73_fu_963_p1, tmp_82_fu_1092_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp5_it2)) then 
            part3_bgmodel_address0 <= tmp_73_fu_963_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_86) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it0))) then 
            part3_bgmodel_address0 <= tmp_82_fu_1092_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_bgmodel_address0 <= grp_bgsub_process_fu_598_bgmodel_address0;
        else 
            part3_bgmodel_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    part3_bgmodel_address1 <= grp_bgsub_process_fu_598_bgmodel_address1;

    -- part3_bgmodel_ce0 assign process. --
    part3_bgmodel_ce0_assign_proc : process(ap_sig_bdd_363, ap_reg_ppiten_pp5_it1, ap_reg_ppiten_pp5_it2, ap_sig_ioackin_m_axi_bgmodel_WREADY, ap_sig_cseq_ST_pp10_stg0_fsm_86, ap_reg_ppiten_pp10_it0, ap_reg_ppstg_exitcond11_reg_1401_pp10_it1, ap_reg_ppiten_pp10_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_bgmodel_ce0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_86) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1401_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp5_it2) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))))) then 
            part3_bgmodel_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_bgmodel_ce0 <= grp_bgsub_process_fu_598_bgmodel_ce0;
        else 
            part3_bgmodel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_bgmodel_ce1 assign process. --
    part3_bgmodel_ce1_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_bgmodel_ce1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_bgmodel_ce1 <= grp_bgsub_process_fu_598_bgmodel_ce1;
        else 
            part3_bgmodel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_bgmodel_d0 assign process. --
    part3_bgmodel_d0_assign_proc : process(ap_reg_ppiten_pp5_it2, reg_614, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_bgmodel_d0)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp5_it2)) then 
            part3_bgmodel_d0 <= reg_614;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_bgmodel_d0 <= grp_bgsub_process_fu_598_bgmodel_d0;
        else 
            part3_bgmodel_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    part3_bgmodel_d1 <= grp_bgsub_process_fu_598_bgmodel_d1;

    -- part3_bgmodel_we0 assign process. --
    part3_bgmodel_we0_assign_proc : process(ap_sig_bdd_363, ap_reg_ppiten_pp5_it1, ap_reg_ppiten_pp5_it2, ap_reg_ppstg_exitcond8_reg_1306_pp5_it1, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_bgmodel_we0)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp5_it2) and not((ap_sig_bdd_363 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_1306_pp5_it1)))) then 
            part3_bgmodel_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_bgmodel_we0 <= grp_bgsub_process_fu_598_bgmodel_we0;
        else 
            part3_bgmodel_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_bgmodel_we1 assign process. --
    part3_bgmodel_we1_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_bgmodel_we1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_bgmodel_we1 <= grp_bgsub_process_fu_598_bgmodel_we1;
        else 
            part3_bgmodel_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_frame_in_address0 assign process. --
    part3_frame_in_address0_assign_proc : process(ap_reg_ppiten_pp4_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_frame_in_address0, tmp_70_fu_922_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp4_it2)) then 
            part3_frame_in_address0 <= tmp_70_fu_922_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_frame_in_address0 <= grp_bgsub_process_fu_598_frame_in_address0;
        else 
            part3_frame_in_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part3_frame_in_ce0 assign process. --
    part3_frame_in_ce0_assign_proc : process(ap_sig_bdd_340, ap_reg_ppiten_pp4_it1, ap_reg_ppiten_pp4_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_frame_in_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp4_it2) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then 
            part3_frame_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_frame_in_ce0 <= grp_bgsub_process_fu_598_frame_in_ce0;
        else 
            part3_frame_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part3_frame_in_d0 <= reg_607;

    -- part3_frame_in_we0 assign process. --
    part3_frame_in_we0_assign_proc : process(ap_sig_bdd_340, ap_reg_ppiten_pp4_it1, ap_reg_ppiten_pp4_it2, ap_reg_ppstg_exitcond7_reg_1286_pp4_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp4_it2) and not((ap_sig_bdd_340 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_1286_pp4_it1)))) then 
            part3_frame_in_we0 <= ap_const_logic_1;
        else 
            part3_frame_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_frame_out_address0 assign process. --
    part3_frame_out_address0_assign_proc : process(ap_sig_cseq_ST_pp11_stg0_fsm_92, ap_reg_ppiten_pp11_it0, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_frame_out_address0, tmp_84_fu_1123_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_92) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it0))) then 
            part3_frame_out_address0 <= tmp_84_fu_1123_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_frame_out_address0 <= grp_bgsub_process_fu_598_frame_out_address0;
        else 
            part3_frame_out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part3_frame_out_ce0 assign process. --
    part3_frame_out_ce0_assign_proc : process(ap_sig_ioackin_m_axi_frame_out_WREADY, ap_sig_cseq_ST_pp11_stg0_fsm_92, ap_reg_ppiten_pp11_it0, ap_reg_ppstg_exitcond12_reg_1425_pp11_it1, ap_reg_ppiten_pp11_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_frame_out_ce0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_92) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1425_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))))) then 
            part3_frame_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_frame_out_ce0 <= grp_bgsub_process_fu_598_frame_out_ce0;
        else 
            part3_frame_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part3_frame_out_d0 <= grp_bgsub_process_fu_598_frame_out_d0;

    -- part3_frame_out_we0 assign process. --
    part3_frame_out_we0_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_598_frame_out_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part3_frame_out_we0 <= grp_bgsub_process_fu_598_frame_out_we0;
        else 
            part3_frame_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    part_1_fu_1136_p2 <= std_logic_vector(unsigned(part_reg_430) + unsigned(ap_const_lv7_3));

    -- part_bgmodel_address0 assign process. --
    part_bgmodel_address0_assign_proc : process(ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp6_stg0_fsm_62, ap_reg_ppiten_pp6_it0, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_bgmodel_address0, tmp_61_fu_799_p1, tmp_74_fu_980_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2)) then 
            part_bgmodel_address0 <= tmp_61_fu_799_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_62) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it0))) then 
            part_bgmodel_address0 <= tmp_74_fu_980_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_bgmodel_address0 <= grp_bgsub_process_fu_580_bgmodel_address0;
        else 
            part_bgmodel_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    part_bgmodel_address1 <= grp_bgsub_process_fu_580_bgmodel_address1;

    -- part_bgmodel_ce0 assign process. --
    part_bgmodel_ce0_assign_proc : process(ap_sig_bdd_271, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_ioackin_m_axi_bgmodel_WREADY, ap_sig_cseq_ST_pp6_stg0_fsm_62, ap_reg_ppiten_pp6_it0, ap_reg_ppstg_exitcond9_reg_1315_pp6_it1, ap_reg_ppiten_pp6_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_bgmodel_ce0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_62) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1315_pp6_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it2)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
            part_bgmodel_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_bgmodel_ce0 <= grp_bgsub_process_fu_580_bgmodel_ce0;
        else 
            part_bgmodel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_bgmodel_ce1 assign process. --
    part_bgmodel_ce1_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_bgmodel_ce1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_bgmodel_ce1 <= grp_bgsub_process_fu_580_bgmodel_ce1;
        else 
            part_bgmodel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_bgmodel_d0 assign process. --
    part_bgmodel_d0_assign_proc : process(ap_reg_ppiten_pp1_it2, reg_614, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_bgmodel_d0)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2)) then 
            part_bgmodel_d0 <= reg_614;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_bgmodel_d0 <= grp_bgsub_process_fu_580_bgmodel_d0;
        else 
            part_bgmodel_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    part_bgmodel_d1 <= grp_bgsub_process_fu_580_bgmodel_d1;

    -- part_bgmodel_we0 assign process. --
    part_bgmodel_we0_assign_proc : process(ap_sig_bdd_271, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppstg_exitcond4_reg_1226_pp1_it1, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_bgmodel_we0)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_271 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_1226_pp1_it1)))) then 
            part_bgmodel_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_bgmodel_we0 <= grp_bgsub_process_fu_580_bgmodel_we0;
        else 
            part_bgmodel_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_bgmodel_we1 assign process. --
    part_bgmodel_we1_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_bgmodel_we1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_bgmodel_we1 <= grp_bgsub_process_fu_580_bgmodel_we1;
        else 
            part_bgmodel_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_frame_in_address0 assign process. --
    part_frame_in_address0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_frame_in_address0, tmp_58_fu_733_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            part_frame_in_address0 <= tmp_58_fu_733_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_frame_in_address0 <= grp_bgsub_process_fu_580_frame_in_address0;
        else 
            part_frame_in_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part_frame_in_ce0 assign process. --
    part_frame_in_ce0_assign_proc : process(ap_sig_bdd_247, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_frame_in_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            part_frame_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_frame_in_ce0 <= grp_bgsub_process_fu_580_frame_in_ce0;
        else 
            part_frame_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part_frame_in_d0 <= reg_607;

    -- part_frame_in_we0 assign process. --
    part_frame_in_we0_assign_proc : process(ap_sig_bdd_247, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond1_reg_1200_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_247 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1200_pp0_it1)))) then 
            part_frame_in_we0 <= ap_const_logic_1;
        else 
            part_frame_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_frame_out_address0 assign process. --
    part_frame_out_address0_assign_proc : process(ap_sig_cseq_ST_pp7_stg0_fsm_68, ap_reg_ppiten_pp7_it0, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_frame_out_address0, tmp_76_fu_1011_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_68) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it0))) then 
            part_frame_out_address0 <= tmp_76_fu_1011_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_frame_out_address0 <= grp_bgsub_process_fu_580_frame_out_address0;
        else 
            part_frame_out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part_frame_out_ce0 assign process. --
    part_frame_out_ce0_assign_proc : process(ap_sig_cseq_ST_pp7_stg0_fsm_68, ap_reg_ppiten_pp7_it0, ap_reg_ppstg_exitcond2_reg_1339_pp7_it1, ap_sig_ioackin_m_axi_frame_out_WREADY, ap_reg_ppiten_pp7_it2, ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_frame_out_ce0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_68) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1339_pp7_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it2))))) then 
            part_frame_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_frame_out_ce0 <= grp_bgsub_process_fu_580_frame_out_ce0;
        else 
            part_frame_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part_frame_out_d0 <= grp_bgsub_process_fu_580_frame_out_d0;

    -- part_frame_out_we0 assign process. --
    part_frame_out_we0_assign_proc : process(ap_sig_cseq_ST_st74_fsm_61, grp_bgsub_process_fu_580_frame_out_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
            part_frame_out_we0 <= grp_bgsub_process_fu_580_frame_out_we0;
        else 
            part_frame_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_113_fu_629_p4 <= bgmodel1(31 downto 2);
        tmp_114_cast_fu_621_p1 <= std_logic_vector(resize(signed(frame_in),33));

    tmp_114_fu_643_p1 <= std_logic_vector(resize(unsigned(tmp_113_fu_629_p4),64));
        tmp_115_cast_fu_625_p1 <= std_logic_vector(resize(signed(frame_out2),33));

    tmp_115_fu_702_p1 <= std_logic_vector(resize(unsigned(tmp_55_fu_696_p2),33));
    tmp_116_cast_fu_639_p1 <= std_logic_vector(resize(unsigned(tmp_113_fu_629_p4),31));
    tmp_116_fu_706_p2 <= std_logic_vector(signed(tmp_114_cast_reg_1146) + signed(tmp_115_fu_702_p1));
        tmp_117_fu_711_p1 <= std_logic_vector(resize(signed(tmp_116_fu_706_p2),64));

    tmp_118_fu_768_p1 <= std_logic_vector(resize(unsigned(tmp_56_fu_762_p2),31));
    tmp_119_fu_772_p2 <= std_logic_vector(unsigned(tmp_116_cast_reg_1160) + unsigned(tmp_118_fu_768_p1));
    tmp_120_fu_777_p1 <= std_logic_vector(resize(unsigned(tmp_119_reg_1215),64));
    tmp_121_fu_809_p1 <= std_logic_vector(resize(unsigned(tmp_59_fu_804_p2),33));
    tmp_122_fu_813_p2 <= std_logic_vector(signed(tmp_114_cast_reg_1146) + signed(tmp_121_fu_809_p1));
        tmp_123_fu_818_p1 <= std_logic_vector(resize(signed(tmp_122_fu_813_p2),64));

    tmp_124_fu_850_p1 <= std_logic_vector(resize(unsigned(tmp_62_fu_845_p2),31));
    tmp_125_fu_854_p2 <= std_logic_vector(unsigned(tmp_116_cast_reg_1160) + unsigned(tmp_124_fu_850_p1));
    tmp_126_fu_859_p1 <= std_logic_vector(resize(unsigned(tmp_125_reg_1255),64));
    tmp_127_fu_891_p1 <= std_logic_vector(resize(unsigned(tmp_65_fu_886_p2),33));
    tmp_128_fu_895_p2 <= std_logic_vector(signed(tmp_114_cast_reg_1146) + signed(tmp_127_fu_891_p1));
        tmp_129_fu_900_p1 <= std_logic_vector(resize(signed(tmp_128_fu_895_p2),64));

    tmp_130_fu_932_p1 <= std_logic_vector(resize(unsigned(tmp_68_fu_927_p2),31));
    tmp_131_fu_936_p2 <= std_logic_vector(unsigned(tmp_116_cast_reg_1160) + unsigned(tmp_130_fu_932_p1));
    tmp_132_fu_941_p1 <= std_logic_vector(resize(unsigned(tmp_131_reg_1295),64));
    tmp_133_fu_985_p2 <= std_logic_vector(unsigned(tmp_115_reg_1189) + unsigned(tmp_115_cast_reg_1153));
        tmp_134_fu_989_p1 <= std_logic_vector(resize(signed(tmp_133_fu_985_p2),64));

    tmp_135_fu_1041_p2 <= std_logic_vector(unsigned(tmp_121_reg_1235) + unsigned(tmp_115_cast_reg_1153));
        tmp_136_fu_1045_p1 <= std_logic_vector(resize(signed(tmp_135_fu_1041_p2),64));

    tmp_137_fu_1097_p2 <= std_logic_vector(unsigned(tmp_127_reg_1275) + unsigned(tmp_115_cast_reg_1153));
        tmp_138_fu_1101_p1 <= std_logic_vector(resize(signed(tmp_137_fu_1097_p2),64));

    tmp_54_fu_666_p2 <= "1" when (unsigned(part_reg_430) < unsigned(ap_const_lv7_78)) else "0";
    tmp_55_fu_696_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_680_p1) + unsigned(p_shl2_cast_fu_692_p1));
    tmp_56_fu_762_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_746_p1) + unsigned(p_shl4_cast_fu_758_p1));
    tmp_58_fu_733_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar_reg_442_pp0_it1),64));
    tmp_59_fu_804_p2 <= std_logic_vector(unsigned(tmp_55_reg_1183) + unsigned(ap_const_lv17_280));
    tmp_61_fu_799_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar9_reg_454_pp1_it1),64));
    tmp_62_fu_845_p2 <= std_logic_vector(unsigned(tmp_56_reg_1209) + unsigned(ap_const_lv20_1400));
    tmp_64_fu_840_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar1_reg_466_pp2_it1),64));
    tmp_65_fu_886_p2 <= std_logic_vector(unsigned(tmp_55_reg_1183) + unsigned(ap_const_lv17_500));
    tmp_67_fu_881_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar2_reg_478_pp3_it1),64));
    tmp_68_fu_927_p2 <= std_logic_vector(unsigned(tmp_56_reg_1209) + unsigned(ap_const_lv20_2800));
    tmp_70_fu_922_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar3_reg_490_pp4_it1),64));
    tmp_73_fu_963_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar4_reg_502_pp5_it1),64));
    tmp_74_fu_980_p1 <= std_logic_vector(resize(unsigned(indvar5_reg_514),64));
    tmp_76_fu_1011_p1 <= std_logic_vector(resize(unsigned(indvar6_reg_525),64));
    tmp_78_fu_1036_p1 <= std_logic_vector(resize(unsigned(indvar7_reg_536),64));
    tmp_80_fu_1067_p1 <= std_logic_vector(resize(unsigned(indvar8_reg_547),64));
    tmp_82_fu_1092_p1 <= std_logic_vector(resize(unsigned(indvar10_reg_558),64));
    tmp_84_fu_1123_p1 <= std_logic_vector(resize(unsigned(indvar11_reg_569),64));
end behav;
