-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bgsub_Block_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    init : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_AWVALID : OUT STD_LOGIC;
    m_axi_bgmodel_AWREADY : IN STD_LOGIC;
    m_axi_bgmodel_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_WVALID : OUT STD_LOGIC;
    m_axi_bgmodel_WREADY : IN STD_LOGIC;
    m_axi_bgmodel_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_WLAST : OUT STD_LOGIC;
    m_axi_bgmodel_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_ARVALID : OUT STD_LOGIC;
    m_axi_bgmodel_ARREADY : IN STD_LOGIC;
    m_axi_bgmodel_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bgmodel_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bgmodel_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_RVALID : IN STD_LOGIC;
    m_axi_bgmodel_RREADY : OUT STD_LOGIC;
    m_axi_bgmodel_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bgmodel_RLAST : IN STD_LOGIC;
    m_axi_bgmodel_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_BVALID : IN STD_LOGIC;
    m_axi_bgmodel_BREADY : OUT STD_LOGIC;
    m_axi_bgmodel_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bgmodel_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bgmodel_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    bgmodel1 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_AWVALID : OUT STD_LOGIC;
    m_axi_frame_out_AWREADY : IN STD_LOGIC;
    m_axi_frame_out_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_WVALID : OUT STD_LOGIC;
    m_axi_frame_out_WREADY : IN STD_LOGIC;
    m_axi_frame_out_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_frame_out_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_WLAST : OUT STD_LOGIC;
    m_axi_frame_out_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_ARVALID : OUT STD_LOGIC;
    m_axi_frame_out_ARREADY : IN STD_LOGIC;
    m_axi_frame_out_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_out_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_RVALID : IN STD_LOGIC;
    m_axi_frame_out_RREADY : OUT STD_LOGIC;
    m_axi_frame_out_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_frame_out_RLAST : IN STD_LOGIC;
    m_axi_frame_out_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_BVALID : IN STD_LOGIC;
    m_axi_frame_out_BREADY : OUT STD_LOGIC;
    m_axi_frame_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_out_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_out_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    frame_out2 : IN STD_LOGIC_VECTOR (31 downto 0);
    frame_in : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of bgsub_Block_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_pp0_stg0_fsm_14 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_st18_fsm_15 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_st19_fsm_16 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_st20_fsm_17 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_st21_fsm_18 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_st22_fsm_19 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_st23_fsm_20 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_st24_fsm_21 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_st25_fsm_22 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_pp1_stg0_fsm_23 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_st29_fsm_24 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_st30_fsm_25 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_st31_fsm_26 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_st32_fsm_27 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_st33_fsm_28 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_st34_fsm_29 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_st35_fsm_30 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_st36_fsm_31 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_pp2_stg0_fsm_32 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_st40_fsm_33 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_st41_fsm_34 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_st42_fsm_35 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_st43_fsm_36 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_37 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_st45_fsm_38 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_st46_fsm_39 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_st47_fsm_40 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_pp3_stg0_fsm_41 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_st51_fsm_42 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_st52_fsm_43 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_st53_fsm_44 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_st54_fsm_45 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_st55_fsm_46 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_st56_fsm_47 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_st57_fsm_48 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_st58_fsm_49 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_pp4_stg0_fsm_50 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_st62_fsm_51 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_st63_fsm_52 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_st64_fsm_53 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_st65_fsm_54 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st66_fsm_55 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st67_fsm_56 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st68_fsm_57 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st69_fsm_58 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp5_stg0_fsm_59 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st73_fsm_60 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st74_fsm_61 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st75_fsm_62 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st76_fsm_63 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st77_fsm_64 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st78_fsm_65 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st79_fsm_66 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st80_fsm_67 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp6_stg0_fsm_68 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st84_fsm_69 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st85_fsm_70 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st86_fsm_71 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st87_fsm_72 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st88_fsm_73 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st89_fsm_74 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st90_fsm_75 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st91_fsm_76 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp7_stg0_fsm_77 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st95_fsm_78 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st96_fsm_79 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp8_stg0_fsm_80 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st100_fsm_81 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st101_fsm_82 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st102_fsm_83 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st103_fsm_84 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st104_fsm_85 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp9_stg0_fsm_86 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st108_fsm_87 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st109_fsm_88 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st110_fsm_89 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st111_fsm_90 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st112_fsm_91 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp10_stg0_fsm_92 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st116_fsm_93 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st117_fsm_94 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st118_fsm_95 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st119_fsm_96 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st120_fsm_97 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp11_stg0_fsm_98 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st124_fsm_99 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st125_fsm_100 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st126_fsm_101 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st127_fsm_102 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st128_fsm_103 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp12_stg0_fsm_104 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st132_fsm_105 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st133_fsm_106 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st134_fsm_107 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st135_fsm_108 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st136_fsm_109 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp13_stg0_fsm_110 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st140_fsm_111 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st141_fsm_112 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st142_fsm_113 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st143_fsm_114 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st144_fsm_115 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp14_stg0_fsm_116 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st148_fsm_117 : STD_LOGIC_VECTOR (127 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st149_fsm_118 : STD_LOGIC_VECTOR (127 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st150_fsm_119 : STD_LOGIC_VECTOR (127 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st151_fsm_120 : STD_LOGIC_VECTOR (127 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st152_fsm_121 : STD_LOGIC_VECTOR (127 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp15_stg0_fsm_122 : STD_LOGIC_VECTOR (127 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st156_fsm_123 : STD_LOGIC_VECTOR (127 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st157_fsm_124 : STD_LOGIC_VECTOR (127 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st158_fsm_125 : STD_LOGIC_VECTOR (127 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st159_fsm_126 : STD_LOGIC_VECTOR (127 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st160_fsm_127 : STD_LOGIC_VECTOR (127 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_96000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000010010110000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001010000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv20_96000 : STD_LOGIC_VECTOR (19 downto 0) := "10010110000000000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv13_1400 : STD_LOGIC_VECTOR (12 downto 0) := "1010000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_147 : BOOLEAN;
    signal indvar_reg_504 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_indvar_reg_504_pp0_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_268 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond1_reg_1616 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_277 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal indvar9_reg_516 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_reg_ppstg_indvar9_reg_516_pp1_it1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_23 : STD_LOGIC;
    signal ap_sig_bdd_293 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal exitcond4_reg_1636 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_301 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal indvar1_reg_528 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_indvar1_reg_528_pp2_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_pp2_stg0_fsm_32 : STD_LOGIC;
    signal ap_sig_bdd_317 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it0 : STD_LOGIC := '0';
    signal exitcond5_reg_1662 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_324 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it2 : STD_LOGIC := '0';
    signal indvar2_reg_540 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_reg_ppstg_indvar2_reg_540_pp3_it1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_pp3_stg0_fsm_41 : STD_LOGIC;
    signal ap_sig_bdd_340 : BOOLEAN;
    signal ap_reg_ppiten_pp3_it0 : STD_LOGIC := '0';
    signal exitcond6_reg_1682 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_347 : BOOLEAN;
    signal ap_reg_ppiten_pp3_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it2 : STD_LOGIC := '0';
    signal indvar3_reg_552 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_indvar3_reg_552_pp4_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_pp4_stg0_fsm_50 : STD_LOGIC;
    signal ap_sig_bdd_363 : BOOLEAN;
    signal ap_reg_ppiten_pp4_it0 : STD_LOGIC := '0';
    signal exitcond7_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_370 : BOOLEAN;
    signal ap_reg_ppiten_pp4_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp4_it2 : STD_LOGIC := '0';
    signal indvar4_reg_564 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_reg_ppstg_indvar4_reg_564_pp5_it1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_pp5_stg0_fsm_59 : STD_LOGIC;
    signal ap_sig_bdd_386 : BOOLEAN;
    signal ap_reg_ppiten_pp5_it0 : STD_LOGIC := '0';
    signal exitcond8_reg_1728 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_393 : BOOLEAN;
    signal ap_reg_ppiten_pp5_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp5_it2 : STD_LOGIC := '0';
    signal indvar5_reg_576 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_indvar5_reg_576_pp6_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_pp6_stg0_fsm_68 : STD_LOGIC;
    signal ap_sig_bdd_409 : BOOLEAN;
    signal ap_reg_ppiten_pp6_it0 : STD_LOGIC := '0';
    signal exitcond9_reg_1754 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_416 : BOOLEAN;
    signal ap_reg_ppiten_pp6_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp6_it2 : STD_LOGIC := '0';
    signal indvar6_reg_588 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_reg_ppstg_indvar6_reg_588_pp7_it1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_pp7_stg0_fsm_77 : STD_LOGIC;
    signal ap_sig_bdd_432 : BOOLEAN;
    signal ap_reg_ppiten_pp7_it0 : STD_LOGIC := '0';
    signal exitcond2_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_439 : BOOLEAN;
    signal ap_reg_ppiten_pp7_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp7_it2 : STD_LOGIC := '0';
    signal indvar7_reg_600 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar8_reg_611 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar10_reg_622 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar11_reg_633 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar12_reg_644 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar13_reg_655 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar14_reg_666 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar15_reg_677 : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_724 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_732 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_bdd_502 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_bgmodel_AWREADY : STD_LOGIC;
    signal tmp_114_cast_fu_740_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_114_cast_reg_1565 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_115_cast_fu_744_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_115_cast_reg_1573 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_116_cast_fu_758_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_116_cast_reg_1581 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_1_fu_779_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_527 : BOOLEAN;
    signal exitcond_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_m_axi_bgmodel_WREADY : STD_LOGIC;
    signal tmp_115_fu_821_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_115_reg_1605 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_543 : BOOLEAN;
    signal tmp_54_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal frame_out_addr_reg_1610 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond1_reg_1616_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next_fu_846_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_next_reg_1620 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_fu_891_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_119_reg_1625 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_565 : BOOLEAN;
    signal bgmodel_addr_17_reg_1630 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_574 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_bgmodel_ARREADY : STD_LOGIC;
    signal exitcond4_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond4_reg_1636_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next1_fu_912_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next1_reg_1640 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_59_fu_923_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_59_reg_1645 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st29_fsm_24 : STD_LOGIC;
    signal ap_sig_bdd_594 : BOOLEAN;
    signal tmp_121_fu_959_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_121_reg_1651 : STD_LOGIC_VECTOR (32 downto 0);
    signal frame_out_addr_2_reg_1656 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond5_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_1662_pp2_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next2_fu_984_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_next2_reg_1666 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_125_fu_1027_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_125_reg_1671 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st40_fsm_33 : STD_LOGIC;
    signal ap_sig_bdd_614 : BOOLEAN;
    signal bgmodel_addr_18_reg_1676 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st41_fsm_34 : STD_LOGIC;
    signal ap_sig_bdd_623 : BOOLEAN;
    signal exitcond6_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond6_reg_1682_pp3_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next3_fu_1048_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next3_reg_1686 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_66_fu_1059_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_66_reg_1691 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st51_fsm_42 : STD_LOGIC;
    signal ap_sig_bdd_640 : BOOLEAN;
    signal tmp_127_fu_1095_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_127_reg_1697 : STD_LOGIC_VECTOR (32 downto 0);
    signal frame_out_addr_3_reg_1702 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond7_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond7_reg_1708_pp4_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next4_fu_1120_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_next4_reg_1712 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_131_fu_1163_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_131_reg_1717 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st62_fsm_51 : STD_LOGIC;
    signal ap_sig_bdd_660 : BOOLEAN;
    signal bgmodel_addr_19_reg_1722 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st63_fsm_52 : STD_LOGIC;
    signal ap_sig_bdd_669 : BOOLEAN;
    signal exitcond8_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond8_reg_1728_pp5_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next5_fu_1184_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next5_reg_1732 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_73_fu_1195_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_73_reg_1737 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st73_fsm_60 : STD_LOGIC;
    signal ap_sig_bdd_686 : BOOLEAN;
    signal tmp_133_fu_1231_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_133_reg_1743 : STD_LOGIC_VECTOR (32 downto 0);
    signal frame_out_addr_4_reg_1748 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond9_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond9_reg_1754_pp6_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next6_fu_1256_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_next6_reg_1758 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_137_fu_1299_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_137_reg_1763 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st84_fsm_69 : STD_LOGIC;
    signal ap_sig_bdd_706 : BOOLEAN;
    signal bgmodel_addr_20_reg_1768 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st85_fsm_70 : STD_LOGIC;
    signal ap_sig_bdd_715 : BOOLEAN;
    signal exitcond2_fu_1314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond2_reg_1774_pp7_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next7_fu_1320_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next7_reg_1778 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond3_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1783 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp8_stg0_fsm_80 : STD_LOGIC;
    signal ap_sig_bdd_732 : BOOLEAN;
    signal ap_reg_ppiten_pp8_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp8_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond3_reg_1783_pp8_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp8_it2 : STD_LOGIC := '0';
    signal indvar_next8_fu_1337_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal part_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part_bgmodel_load_reg_1797 : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_out_addr_5_reg_1802 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st100_fsm_81 : STD_LOGIC;
    signal ap_sig_bdd_768 : BOOLEAN;
    signal exitcond10_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond10_reg_1807 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp9_stg0_fsm_86 : STD_LOGIC;
    signal ap_sig_bdd_777 : BOOLEAN;
    signal ap_reg_ppiten_pp9_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp9_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond10_reg_1807_pp9_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_m_axi_frame_out_WREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp9_it2 : STD_LOGIC := '0';
    signal indvar_next9_fu_1368_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal extLd_fu_1379_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal extLd_reg_1821 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond11_fu_1387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond11_reg_1826 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp10_stg0_fsm_92 : STD_LOGIC;
    signal ap_sig_bdd_813 : BOOLEAN;
    signal ap_reg_ppiten_pp10_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp10_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond11_reg_1826_pp10_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp10_it2 : STD_LOGIC := '0';
    signal indvar_next10_fu_1393_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal part2_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part2_bgmodel_load_reg_1840 : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_out_addr_6_reg_1845 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st116_fsm_93 : STD_LOGIC;
    signal ap_sig_bdd_849 : BOOLEAN;
    signal exitcond12_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond12_reg_1850 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp11_stg0_fsm_98 : STD_LOGIC;
    signal ap_sig_bdd_858 : BOOLEAN;
    signal ap_reg_ppiten_pp11_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp11_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond12_reg_1850_pp11_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp11_it2 : STD_LOGIC := '0';
    signal indvar_next11_fu_1424_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal extLd1_fu_1435_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal extLd1_reg_1864 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond13_fu_1443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond13_reg_1869 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp12_stg0_fsm_104 : STD_LOGIC;
    signal ap_sig_bdd_892 : BOOLEAN;
    signal ap_reg_ppiten_pp12_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp12_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond13_reg_1869_pp12_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp12_it2 : STD_LOGIC := '0';
    signal indvar_next12_fu_1449_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal part3_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part3_bgmodel_load_reg_1883 : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_out_addr_7_reg_1888 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st132_fsm_105 : STD_LOGIC;
    signal ap_sig_bdd_928 : BOOLEAN;
    signal exitcond14_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14_reg_1893 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp13_stg0_fsm_110 : STD_LOGIC;
    signal ap_sig_bdd_937 : BOOLEAN;
    signal ap_reg_ppiten_pp13_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp13_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond14_reg_1893_pp13_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp13_it2 : STD_LOGIC := '0';
    signal indvar_next13_fu_1480_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal extLd2_fu_1491_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal extLd2_reg_1907 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond15_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond15_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp14_stg0_fsm_116 : STD_LOGIC;
    signal ap_sig_bdd_971 : BOOLEAN;
    signal ap_reg_ppiten_pp14_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp14_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond15_reg_1912_pp14_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp14_it2 : STD_LOGIC := '0';
    signal indvar_next14_fu_1505_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal part4_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part4_bgmodel_load_reg_1926 : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_out_addr_8_reg_1931 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st148_fsm_117 : STD_LOGIC;
    signal ap_sig_bdd_1007 : BOOLEAN;
    signal exitcond16_fu_1530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond16_reg_1936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp15_stg0_fsm_122 : STD_LOGIC;
    signal ap_sig_bdd_1016 : BOOLEAN;
    signal ap_reg_ppiten_pp15_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp15_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond16_reg_1936_pp15_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp15_it2 : STD_LOGIC := '0';
    signal indvar_next15_fu_1536_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal extLd3_fu_1547_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal extLd3_reg_1950 : STD_LOGIC_VECTOR (7 downto 0);
    signal part_1_fu_1555_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal part_1_reg_1955 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st156_fsm_123 : STD_LOGIC;
    signal ap_sig_bdd_1050 : BOOLEAN;
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_1057 : BOOLEAN;
    signal ap_sig_cseq_ST_st25_fsm_22 : STD_LOGIC;
    signal ap_sig_bdd_1069 : BOOLEAN;
    signal ap_sig_cseq_ST_st36_fsm_31 : STD_LOGIC;
    signal ap_sig_bdd_1081 : BOOLEAN;
    signal ap_sig_cseq_ST_st47_fsm_40 : STD_LOGIC;
    signal ap_sig_bdd_1093 : BOOLEAN;
    signal ap_sig_cseq_ST_st58_fsm_49 : STD_LOGIC;
    signal ap_sig_bdd_1105 : BOOLEAN;
    signal ap_sig_cseq_ST_st69_fsm_58 : STD_LOGIC;
    signal ap_sig_bdd_1117 : BOOLEAN;
    signal ap_sig_cseq_ST_st80_fsm_67 : STD_LOGIC;
    signal ap_sig_bdd_1129 : BOOLEAN;
    signal ap_sig_cseq_ST_st91_fsm_76 : STD_LOGIC;
    signal ap_sig_bdd_1141 : BOOLEAN;
    signal ap_sig_cseq_ST_st96_fsm_79 : STD_LOGIC;
    signal ap_sig_bdd_1153 : BOOLEAN;
    signal grp_bgsub_process_fu_688_ap_done : STD_LOGIC;
    signal grp_bgsub_process_fu_697_ap_done : STD_LOGIC;
    signal grp_bgsub_process_fu_706_ap_done : STD_LOGIC;
    signal grp_bgsub_process_fu_715_ap_done : STD_LOGIC;
    signal ap_sig_cseq_ST_st104_fsm_85 : STD_LOGIC;
    signal ap_sig_bdd_1177 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_frame_out_AWREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st112_fsm_91 : STD_LOGIC;
    signal ap_sig_bdd_1193 : BOOLEAN;
    signal ap_sig_cseq_ST_st120_fsm_97 : STD_LOGIC;
    signal ap_sig_bdd_1207 : BOOLEAN;
    signal ap_sig_cseq_ST_st128_fsm_103 : STD_LOGIC;
    signal ap_sig_bdd_1218 : BOOLEAN;
    signal ap_sig_cseq_ST_st136_fsm_109 : STD_LOGIC;
    signal ap_sig_bdd_1229 : BOOLEAN;
    signal ap_sig_cseq_ST_st144_fsm_115 : STD_LOGIC;
    signal ap_sig_bdd_1240 : BOOLEAN;
    signal ap_sig_cseq_ST_st152_fsm_121 : STD_LOGIC;
    signal ap_sig_bdd_1251 : BOOLEAN;
    signal part_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal part_bgmodel_ce0 : STD_LOGIC;
    signal part_bgmodel_we0 : STD_LOGIC;
    signal part_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal part_bgmodel_ce1 : STD_LOGIC;
    signal part_bgmodel_we1 : STD_LOGIC;
    signal part_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part_frame_in_ce0 : STD_LOGIC;
    signal part_frame_in_we0 : STD_LOGIC;
    signal part_frame_in_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part_frame_out_ce0 : STD_LOGIC;
    signal part_frame_out_we0 : STD_LOGIC;
    signal part_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part_frame_out_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part2_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal part2_bgmodel_ce0 : STD_LOGIC;
    signal part2_bgmodel_we0 : STD_LOGIC;
    signal part2_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part2_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal part2_bgmodel_ce1 : STD_LOGIC;
    signal part2_bgmodel_we1 : STD_LOGIC;
    signal part2_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part2_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part2_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part2_frame_in_ce0 : STD_LOGIC;
    signal part2_frame_in_we0 : STD_LOGIC;
    signal part2_frame_in_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part2_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part2_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part2_frame_out_ce0 : STD_LOGIC;
    signal part2_frame_out_we0 : STD_LOGIC;
    signal part2_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part2_frame_out_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part3_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal part3_bgmodel_ce0 : STD_LOGIC;
    signal part3_bgmodel_we0 : STD_LOGIC;
    signal part3_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part3_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal part3_bgmodel_ce1 : STD_LOGIC;
    signal part3_bgmodel_we1 : STD_LOGIC;
    signal part3_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part3_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part3_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part3_frame_in_ce0 : STD_LOGIC;
    signal part3_frame_in_we0 : STD_LOGIC;
    signal part3_frame_in_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part3_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part3_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part3_frame_out_ce0 : STD_LOGIC;
    signal part3_frame_out_we0 : STD_LOGIC;
    signal part3_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part3_frame_out_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part4_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal part4_bgmodel_ce0 : STD_LOGIC;
    signal part4_bgmodel_we0 : STD_LOGIC;
    signal part4_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal part4_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal part4_bgmodel_ce1 : STD_LOGIC;
    signal part4_bgmodel_we1 : STD_LOGIC;
    signal part4_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part4_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal part4_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part4_frame_in_ce0 : STD_LOGIC;
    signal part4_frame_in_we0 : STD_LOGIC;
    signal part4_frame_in_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part4_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal part4_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal part4_frame_out_ce0 : STD_LOGIC;
    signal part4_frame_out_we0 : STD_LOGIC;
    signal part4_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal part4_frame_out_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bgsub_process_fu_688_ap_start : STD_LOGIC;
    signal grp_bgsub_process_fu_688_ap_idle : STD_LOGIC;
    signal grp_bgsub_process_fu_688_ap_ready : STD_LOGIC;
    signal grp_bgsub_process_fu_688_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_688_frame_in_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_688_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bgsub_process_fu_688_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_688_frame_out_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_688_frame_out_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_688_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bgsub_process_fu_688_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_688_bgmodel_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_688_bgmodel_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_688_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_688_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_688_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_688_bgmodel_ce1 : STD_LOGIC;
    signal grp_bgsub_process_fu_688_bgmodel_we1 : STD_LOGIC;
    signal grp_bgsub_process_fu_688_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_688_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_688_learningRate : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_697_ap_start : STD_LOGIC;
    signal grp_bgsub_process_fu_697_ap_idle : STD_LOGIC;
    signal grp_bgsub_process_fu_697_ap_ready : STD_LOGIC;
    signal grp_bgsub_process_fu_697_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_697_frame_in_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_697_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bgsub_process_fu_697_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_697_frame_out_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_697_frame_out_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_697_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bgsub_process_fu_697_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_697_bgmodel_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_697_bgmodel_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_697_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_697_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_697_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_697_bgmodel_ce1 : STD_LOGIC;
    signal grp_bgsub_process_fu_697_bgmodel_we1 : STD_LOGIC;
    signal grp_bgsub_process_fu_697_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_697_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_697_learningRate : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_706_ap_start : STD_LOGIC;
    signal grp_bgsub_process_fu_706_ap_idle : STD_LOGIC;
    signal grp_bgsub_process_fu_706_ap_ready : STD_LOGIC;
    signal grp_bgsub_process_fu_706_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_706_frame_in_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_706_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bgsub_process_fu_706_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_706_frame_out_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_706_frame_out_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_706_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bgsub_process_fu_706_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_706_bgmodel_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_706_bgmodel_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_706_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_706_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_706_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_706_bgmodel_ce1 : STD_LOGIC;
    signal grp_bgsub_process_fu_706_bgmodel_we1 : STD_LOGIC;
    signal grp_bgsub_process_fu_706_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_706_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_706_learningRate : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_715_ap_start : STD_LOGIC;
    signal grp_bgsub_process_fu_715_ap_idle : STD_LOGIC;
    signal grp_bgsub_process_fu_715_ap_ready : STD_LOGIC;
    signal grp_bgsub_process_fu_715_frame_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_715_frame_in_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_715_frame_in_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bgsub_process_fu_715_frame_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_bgsub_process_fu_715_frame_out_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_715_frame_out_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_715_frame_out_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bgsub_process_fu_715_bgmodel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_715_bgmodel_ce0 : STD_LOGIC;
    signal grp_bgsub_process_fu_715_bgmodel_we0 : STD_LOGIC;
    signal grp_bgsub_process_fu_715_bgmodel_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_715_bgmodel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_715_bgmodel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_715_bgmodel_ce1 : STD_LOGIC;
    signal grp_bgsub_process_fu_715_bgmodel_we1 : STD_LOGIC;
    signal grp_bgsub_process_fu_715_bgmodel_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_715_bgmodel_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bgsub_process_fu_715_learningRate : STD_LOGIC_VECTOR (31 downto 0);
    signal p_reg_468 : STD_LOGIC_VECTOR (19 downto 0);
    signal learningRate2_reg_479 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_1486 : BOOLEAN;
    signal ap_sig_bdd_1489 : BOOLEAN;
    signal part_reg_492 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st160_fsm_127 : STD_LOGIC;
    signal ap_sig_bdd_1502 : BOOLEAN;
    signal indvar_phi_fu_508_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar9_phi_fu_520_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar1_phi_fu_532_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar2_phi_fu_544_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar3_phi_fu_556_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar4_phi_fu_568_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar5_phi_fu_580_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar6_phi_fu_592_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bgsub_process_fu_688_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st95_fsm_78 : STD_LOGIC;
    signal ap_sig_bdd_1547 : BOOLEAN;
    signal grp_bgsub_process_fu_697_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_bgsub_process_fu_706_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_bgsub_process_fu_715_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal tmp_58_fu_852_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_fu_918_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_69_fu_1054_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_fu_1126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_fu_1190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_79_fu_1262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_82_fu_1326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_83_fu_1343_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_fu_1374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_87_fu_1399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_89_fu_1430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_91_fu_1455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_fu_1486_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_95_fu_1511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_97_fu_1542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_fu_762_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_117_fu_830_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_120_fu_896_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_123_fu_968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_126_fu_1032_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_129_fu_1104_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_132_fu_1168_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_135_fu_1240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_138_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_140_fu_1352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_142_fu_1408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_144_fu_1464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_146_fu_1520_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_bgmodel_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_bgmodel_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_bgmodel_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_frame_out_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_frame_out_ARREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_1732 : BOOLEAN;
    signal ap_sig_cseq_ST_st30_fsm_25 : STD_LOGIC;
    signal ap_sig_bdd_1747 : BOOLEAN;
    signal ap_sig_cseq_ST_st52_fsm_43 : STD_LOGIC;
    signal ap_sig_bdd_1760 : BOOLEAN;
    signal ap_sig_cseq_ST_st74_fsm_61 : STD_LOGIC;
    signal ap_sig_bdd_1773 : BOOLEAN;
    signal ap_reg_ioackin_m_axi_frame_out_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_frame_out_WREADY : STD_LOGIC := '0';
    signal tmp_113_fu_748_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_shl_fu_791_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl2_fu_803_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_cast_fu_799_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl2_cast_fu_811_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_55_fu_815_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_116_fu_825_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl3_fu_857_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl4_fu_869_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl3_cast_fu_865_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_cast_fu_877_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_56_fu_881_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_118_fu_887_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_shl5_fu_929_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl6_fu_941_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl5_cast_fu_937_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl6_cast_fu_949_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_60_fu_953_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_122_fu_963_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl7_fu_995_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl8_fu_1006_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl7_cast_fu_1002_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl8_cast_fu_1013_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_63_fu_1017_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_124_fu_1023_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_shl9_fu_1065_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl1_fu_1077_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl9_cast_fu_1073_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl10_cast_fu_1085_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_67_fu_1089_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_128_fu_1099_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl10_fu_1131_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl11_fu_1142_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl11_cast_fu_1138_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl12_cast_fu_1149_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_70_fu_1153_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_130_fu_1159_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_shl12_fu_1201_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl13_fu_1213_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl13_cast_fu_1209_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl14_cast_fu_1221_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_74_fu_1225_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_134_fu_1235_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl14_fu_1267_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl15_fu_1278_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl15_cast_fu_1274_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl16_cast_fu_1285_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_77_fu_1289_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_136_fu_1295_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_139_fu_1348_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_141_fu_1404_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_143_fu_1460_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_145_fu_1516_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_bdd_1622 : BOOLEAN;
    signal ap_sig_bdd_1662 : BOOLEAN;
    signal ap_sig_bdd_1677 : BOOLEAN;
    signal ap_sig_bdd_1693 : BOOLEAN;
    signal ap_sig_bdd_1709 : BOOLEAN;
    signal ap_sig_bdd_1633 : BOOLEAN;
    signal ap_sig_bdd_1668 : BOOLEAN;
    signal ap_sig_bdd_1684 : BOOLEAN;
    signal ap_sig_bdd_1700 : BOOLEAN;
    signal ap_sig_bdd_1716 : BOOLEAN;
    signal ap_sig_bdd_2768 : BOOLEAN;
    signal ap_sig_bdd_1792 : BOOLEAN;
    signal ap_sig_bdd_1805 : BOOLEAN;
    signal ap_sig_bdd_1820 : BOOLEAN;
    signal ap_sig_bdd_1835 : BOOLEAN;

    component bgsub_process IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        frame_in_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_in_ce0 : OUT STD_LOGIC;
        frame_in_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_out_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        frame_out_ce0 : OUT STD_LOGIC;
        frame_out_we0 : OUT STD_LOGIC;
        frame_out_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        bgmodel_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        bgmodel_ce0 : OUT STD_LOGIC;
        bgmodel_we0 : OUT STD_LOGIC;
        bgmodel_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        bgmodel_ce1 : OUT STD_LOGIC;
        bgmodel_we1 : OUT STD_LOGIC;
        bgmodel_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bgmodel_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        learningRate : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bgsub_Block_proc_part_bgmodel IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bgsub_Block_proc_part_frame_in IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bgsub_Block_proc_part_frame_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    part_bgmodel_U : component bgsub_Block_proc_part_bgmodel
    generic map (
        DataWidth => 32,
        AddressRange => 5120,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part_bgmodel_address0,
        ce0 => part_bgmodel_ce0,
        we0 => part_bgmodel_we0,
        d0 => part_bgmodel_d0,
        q0 => part_bgmodel_q0,
        address1 => part_bgmodel_address1,
        ce1 => part_bgmodel_ce1,
        we1 => part_bgmodel_we1,
        d1 => part_bgmodel_d1,
        q1 => part_bgmodel_q1);

    part_frame_in_U : component bgsub_Block_proc_part_frame_in
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part_frame_in_address0,
        ce0 => part_frame_in_ce0,
        we0 => part_frame_in_we0,
        d0 => part_frame_in_d0,
        q0 => part_frame_in_q0);

    part_frame_out_U : component bgsub_Block_proc_part_frame_out
    generic map (
        DataWidth => 1,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part_frame_out_address0,
        ce0 => part_frame_out_ce0,
        we0 => part_frame_out_we0,
        d0 => part_frame_out_d0,
        q0 => part_frame_out_q0);

    part2_bgmodel_U : component bgsub_Block_proc_part_bgmodel
    generic map (
        DataWidth => 32,
        AddressRange => 5120,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part2_bgmodel_address0,
        ce0 => part2_bgmodel_ce0,
        we0 => part2_bgmodel_we0,
        d0 => part2_bgmodel_d0,
        q0 => part2_bgmodel_q0,
        address1 => part2_bgmodel_address1,
        ce1 => part2_bgmodel_ce1,
        we1 => part2_bgmodel_we1,
        d1 => part2_bgmodel_d1,
        q1 => part2_bgmodel_q1);

    part2_frame_in_U : component bgsub_Block_proc_part_frame_in
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part2_frame_in_address0,
        ce0 => part2_frame_in_ce0,
        we0 => part2_frame_in_we0,
        d0 => part2_frame_in_d0,
        q0 => part2_frame_in_q0);

    part2_frame_out_U : component bgsub_Block_proc_part_frame_out
    generic map (
        DataWidth => 1,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part2_frame_out_address0,
        ce0 => part2_frame_out_ce0,
        we0 => part2_frame_out_we0,
        d0 => part2_frame_out_d0,
        q0 => part2_frame_out_q0);

    part3_bgmodel_U : component bgsub_Block_proc_part_bgmodel
    generic map (
        DataWidth => 32,
        AddressRange => 5120,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part3_bgmodel_address0,
        ce0 => part3_bgmodel_ce0,
        we0 => part3_bgmodel_we0,
        d0 => part3_bgmodel_d0,
        q0 => part3_bgmodel_q0,
        address1 => part3_bgmodel_address1,
        ce1 => part3_bgmodel_ce1,
        we1 => part3_bgmodel_we1,
        d1 => part3_bgmodel_d1,
        q1 => part3_bgmodel_q1);

    part3_frame_in_U : component bgsub_Block_proc_part_frame_in
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part3_frame_in_address0,
        ce0 => part3_frame_in_ce0,
        we0 => part3_frame_in_we0,
        d0 => part3_frame_in_d0,
        q0 => part3_frame_in_q0);

    part3_frame_out_U : component bgsub_Block_proc_part_frame_out
    generic map (
        DataWidth => 1,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part3_frame_out_address0,
        ce0 => part3_frame_out_ce0,
        we0 => part3_frame_out_we0,
        d0 => part3_frame_out_d0,
        q0 => part3_frame_out_q0);

    part4_bgmodel_U : component bgsub_Block_proc_part_bgmodel
    generic map (
        DataWidth => 32,
        AddressRange => 5120,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part4_bgmodel_address0,
        ce0 => part4_bgmodel_ce0,
        we0 => part4_bgmodel_we0,
        d0 => part4_bgmodel_d0,
        q0 => part4_bgmodel_q0,
        address1 => part4_bgmodel_address1,
        ce1 => part4_bgmodel_ce1,
        we1 => part4_bgmodel_we1,
        d1 => part4_bgmodel_d1,
        q1 => part4_bgmodel_q1);

    part4_frame_in_U : component bgsub_Block_proc_part_frame_in
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part4_frame_in_address0,
        ce0 => part4_frame_in_ce0,
        we0 => part4_frame_in_we0,
        d0 => part4_frame_in_d0,
        q0 => part4_frame_in_q0);

    part4_frame_out_U : component bgsub_Block_proc_part_frame_out
    generic map (
        DataWidth => 1,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => part4_frame_out_address0,
        ce0 => part4_frame_out_ce0,
        we0 => part4_frame_out_we0,
        d0 => part4_frame_out_d0,
        q0 => part4_frame_out_q0);

    grp_bgsub_process_fu_688 : component bgsub_process
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bgsub_process_fu_688_ap_start,
        ap_done => grp_bgsub_process_fu_688_ap_done,
        ap_idle => grp_bgsub_process_fu_688_ap_idle,
        ap_ready => grp_bgsub_process_fu_688_ap_ready,
        frame_in_address0 => grp_bgsub_process_fu_688_frame_in_address0,
        frame_in_ce0 => grp_bgsub_process_fu_688_frame_in_ce0,
        frame_in_q0 => grp_bgsub_process_fu_688_frame_in_q0,
        frame_out_address0 => grp_bgsub_process_fu_688_frame_out_address0,
        frame_out_ce0 => grp_bgsub_process_fu_688_frame_out_ce0,
        frame_out_we0 => grp_bgsub_process_fu_688_frame_out_we0,
        frame_out_d0 => grp_bgsub_process_fu_688_frame_out_d0,
        bgmodel_address0 => grp_bgsub_process_fu_688_bgmodel_address0,
        bgmodel_ce0 => grp_bgsub_process_fu_688_bgmodel_ce0,
        bgmodel_we0 => grp_bgsub_process_fu_688_bgmodel_we0,
        bgmodel_d0 => grp_bgsub_process_fu_688_bgmodel_d0,
        bgmodel_q0 => grp_bgsub_process_fu_688_bgmodel_q0,
        bgmodel_address1 => grp_bgsub_process_fu_688_bgmodel_address1,
        bgmodel_ce1 => grp_bgsub_process_fu_688_bgmodel_ce1,
        bgmodel_we1 => grp_bgsub_process_fu_688_bgmodel_we1,
        bgmodel_d1 => grp_bgsub_process_fu_688_bgmodel_d1,
        bgmodel_q1 => grp_bgsub_process_fu_688_bgmodel_q1,
        learningRate => grp_bgsub_process_fu_688_learningRate);

    grp_bgsub_process_fu_697 : component bgsub_process
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bgsub_process_fu_697_ap_start,
        ap_done => grp_bgsub_process_fu_697_ap_done,
        ap_idle => grp_bgsub_process_fu_697_ap_idle,
        ap_ready => grp_bgsub_process_fu_697_ap_ready,
        frame_in_address0 => grp_bgsub_process_fu_697_frame_in_address0,
        frame_in_ce0 => grp_bgsub_process_fu_697_frame_in_ce0,
        frame_in_q0 => grp_bgsub_process_fu_697_frame_in_q0,
        frame_out_address0 => grp_bgsub_process_fu_697_frame_out_address0,
        frame_out_ce0 => grp_bgsub_process_fu_697_frame_out_ce0,
        frame_out_we0 => grp_bgsub_process_fu_697_frame_out_we0,
        frame_out_d0 => grp_bgsub_process_fu_697_frame_out_d0,
        bgmodel_address0 => grp_bgsub_process_fu_697_bgmodel_address0,
        bgmodel_ce0 => grp_bgsub_process_fu_697_bgmodel_ce0,
        bgmodel_we0 => grp_bgsub_process_fu_697_bgmodel_we0,
        bgmodel_d0 => grp_bgsub_process_fu_697_bgmodel_d0,
        bgmodel_q0 => grp_bgsub_process_fu_697_bgmodel_q0,
        bgmodel_address1 => grp_bgsub_process_fu_697_bgmodel_address1,
        bgmodel_ce1 => grp_bgsub_process_fu_697_bgmodel_ce1,
        bgmodel_we1 => grp_bgsub_process_fu_697_bgmodel_we1,
        bgmodel_d1 => grp_bgsub_process_fu_697_bgmodel_d1,
        bgmodel_q1 => grp_bgsub_process_fu_697_bgmodel_q1,
        learningRate => grp_bgsub_process_fu_697_learningRate);

    grp_bgsub_process_fu_706 : component bgsub_process
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bgsub_process_fu_706_ap_start,
        ap_done => grp_bgsub_process_fu_706_ap_done,
        ap_idle => grp_bgsub_process_fu_706_ap_idle,
        ap_ready => grp_bgsub_process_fu_706_ap_ready,
        frame_in_address0 => grp_bgsub_process_fu_706_frame_in_address0,
        frame_in_ce0 => grp_bgsub_process_fu_706_frame_in_ce0,
        frame_in_q0 => grp_bgsub_process_fu_706_frame_in_q0,
        frame_out_address0 => grp_bgsub_process_fu_706_frame_out_address0,
        frame_out_ce0 => grp_bgsub_process_fu_706_frame_out_ce0,
        frame_out_we0 => grp_bgsub_process_fu_706_frame_out_we0,
        frame_out_d0 => grp_bgsub_process_fu_706_frame_out_d0,
        bgmodel_address0 => grp_bgsub_process_fu_706_bgmodel_address0,
        bgmodel_ce0 => grp_bgsub_process_fu_706_bgmodel_ce0,
        bgmodel_we0 => grp_bgsub_process_fu_706_bgmodel_we0,
        bgmodel_d0 => grp_bgsub_process_fu_706_bgmodel_d0,
        bgmodel_q0 => grp_bgsub_process_fu_706_bgmodel_q0,
        bgmodel_address1 => grp_bgsub_process_fu_706_bgmodel_address1,
        bgmodel_ce1 => grp_bgsub_process_fu_706_bgmodel_ce1,
        bgmodel_we1 => grp_bgsub_process_fu_706_bgmodel_we1,
        bgmodel_d1 => grp_bgsub_process_fu_706_bgmodel_d1,
        bgmodel_q1 => grp_bgsub_process_fu_706_bgmodel_q1,
        learningRate => grp_bgsub_process_fu_706_learningRate);

    grp_bgsub_process_fu_715 : component bgsub_process
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bgsub_process_fu_715_ap_start,
        ap_done => grp_bgsub_process_fu_715_ap_done,
        ap_idle => grp_bgsub_process_fu_715_ap_idle,
        ap_ready => grp_bgsub_process_fu_715_ap_ready,
        frame_in_address0 => grp_bgsub_process_fu_715_frame_in_address0,
        frame_in_ce0 => grp_bgsub_process_fu_715_frame_in_ce0,
        frame_in_q0 => grp_bgsub_process_fu_715_frame_in_q0,
        frame_out_address0 => grp_bgsub_process_fu_715_frame_out_address0,
        frame_out_ce0 => grp_bgsub_process_fu_715_frame_out_ce0,
        frame_out_we0 => grp_bgsub_process_fu_715_frame_out_we0,
        frame_out_d0 => grp_bgsub_process_fu_715_frame_out_d0,
        bgmodel_address0 => grp_bgsub_process_fu_715_bgmodel_address0,
        bgmodel_ce0 => grp_bgsub_process_fu_715_bgmodel_ce0,
        bgmodel_we0 => grp_bgsub_process_fu_715_bgmodel_we0,
        bgmodel_d0 => grp_bgsub_process_fu_715_bgmodel_d0,
        bgmodel_q0 => grp_bgsub_process_fu_715_bgmodel_q0,
        bgmodel_address1 => grp_bgsub_process_fu_715_bgmodel_address1,
        bgmodel_ce1 => grp_bgsub_process_fu_715_bgmodel_ce1,
        bgmodel_we1 => grp_bgsub_process_fu_715_bgmodel_we1,
        bgmodel_d1 => grp_bgsub_process_fu_715_bgmodel_d1,
        bgmodel_q1 => grp_bgsub_process_fu_715_bgmodel_q1,
        learningRate => grp_bgsub_process_fu_715_learningRate);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_54_fu_785_p2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_bgmodel_ARREADY assign process. --
    ap_reg_ioackin_m_axi_bgmodel_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_bgmodel_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16) and not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY))) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34)) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52)) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st85_fsm_70)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16) and (ap_const_logic_1 = m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34) and (ap_const_logic_1 = m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52) and (ap_const_logic_1 = m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st85_fsm_70) and (ap_const_logic_1 = m_axi_bgmodel_ARREADY)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_bgmodel_AWREADY assign process. --
    ap_reg_ioackin_m_axi_bgmodel_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_bgmodel_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not((ap_sig_bdd_502 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) or (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103)) or (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and (ap_const_logic_1 = m_axi_bgmodel_AWREADY) and not(ap_sig_bdd_502)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79) and (ap_const_logic_1 = m_axi_bgmodel_AWREADY) and not(((ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_1 = m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_1 = m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_1 = m_axi_bgmodel_AWREADY)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_bgmodel_WREADY assign process. --
    ap_reg_ioackin_m_axi_bgmodel_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_bgmodel_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_773_p2) and not(((ap_const_lv1_0 = exitcond_fu_773_p2) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2)))))) then 
                    ap_reg_ioackin_m_axi_bgmodel_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_773_p2) and (ap_const_logic_1 = m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and (ap_const_logic_1 = m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and (ap_const_logic_1 = m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2) and (ap_const_logic_1 = m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2) and (ap_const_logic_1 = m_axi_bgmodel_WREADY)))) then 
                    ap_reg_ioackin_m_axi_bgmodel_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_frame_out_ARREADY assign process. --
    ap_reg_ioackin_m_axi_frame_out_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_frame_out_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY))) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_25)) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_43)) or (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)))) then 
                    ap_reg_ioackin_m_axi_frame_out_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or ((ap_const_logic_1 = m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_25)) or ((ap_const_logic_1 = m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_43)) or ((ap_const_logic_1 = m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)))) then 
                    ap_reg_ioackin_m_axi_frame_out_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_frame_out_AWREADY assign process. --
    ap_reg_ioackin_m_axi_frame_out_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_frame_out_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st104_fsm_85) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st120_fsm_97)) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st136_fsm_109)) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st152_fsm_121)))) then 
                    ap_reg_ioackin_m_axi_frame_out_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st104_fsm_85) and (ap_const_logic_1 = m_axi_frame_out_AWREADY) and not((m_axi_bgmodel_BVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st120_fsm_97) and (ap_const_logic_1 = m_axi_frame_out_AWREADY) and not((m_axi_bgmodel_BVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st136_fsm_109) and (ap_const_logic_1 = m_axi_frame_out_AWREADY) and not((m_axi_bgmodel_BVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st152_fsm_121) and (ap_const_logic_1 = m_axi_frame_out_AWREADY) and not((m_axi_bgmodel_BVALID = ap_const_logic_0))))) then 
                    ap_reg_ioackin_m_axi_frame_out_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_frame_out_WREADY assign process. --
    ap_reg_ioackin_m_axi_frame_out_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_frame_out_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2)))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2)))))) then 
                    ap_reg_ioackin_m_axi_frame_out_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and (ap_const_logic_1 = m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and (ap_const_logic_1 = m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2) and (ap_const_logic_1 = m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2) and (ap_const_logic_1 = m_axi_frame_out_WREADY)))) then 
                    ap_reg_ioackin_m_axi_frame_out_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond1_fu_840_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = exitcond1_fu_840_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond1_fu_840_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp10_it0 assign process. --
    ap_reg_ppiten_pp10_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp10_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_92) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_lv1_0 = exitcond11_fu_1387_p2)))) then 
                    ap_reg_ppiten_pp10_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))))) then 
                    ap_reg_ppiten_pp10_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp10_it1 assign process. --
    ap_reg_ppiten_pp10_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp10_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_92) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and (ap_const_lv1_0 = exitcond11_fu_1387_p2))) then 
                    ap_reg_ppiten_pp10_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_92) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_lv1_0 = exitcond11_fu_1387_p2))))) then 
                    ap_reg_ppiten_pp10_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp10_it2 assign process. --
    ap_reg_ppiten_pp10_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp10_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2)))) then 
                    ap_reg_ppiten_pp10_it2 <= ap_reg_ppiten_pp10_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))))) then 
                    ap_reg_ppiten_pp10_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp11_it0 assign process. --
    ap_reg_ppiten_pp11_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp11_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_98) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_lv1_0 = exitcond12_fu_1418_p2)))) then 
                    ap_reg_ppiten_pp11_it0 <= ap_const_logic_0;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st120_fsm_97))) then 
                    ap_reg_ppiten_pp11_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp11_it1 assign process. --
    ap_reg_ppiten_pp11_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp11_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_98) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and (ap_const_lv1_0 = exitcond12_fu_1418_p2))) then 
                    ap_reg_ppiten_pp11_it1 <= ap_const_logic_1;
                elsif (((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st120_fsm_97)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_98) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_lv1_0 = exitcond12_fu_1418_p2))))) then 
                    ap_reg_ppiten_pp11_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp11_it2 assign process. --
    ap_reg_ppiten_pp11_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp11_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2)))) then 
                    ap_reg_ppiten_pp11_it2 <= ap_reg_ppiten_pp11_it1;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st120_fsm_97))) then 
                    ap_reg_ppiten_pp11_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp12_it0 assign process. --
    ap_reg_ppiten_pp12_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp12_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp12_stg0_fsm_104) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))) and not((ap_const_lv1_0 = exitcond13_fu_1443_p2)))) then 
                    ap_reg_ppiten_pp12_it0 <= ap_const_logic_0;
                elsif ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103))) then 
                    ap_reg_ppiten_pp12_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp12_it1 assign process. --
    ap_reg_ppiten_pp12_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp12_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp12_stg0_fsm_104) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))) and (ap_const_lv1_0 = exitcond13_fu_1443_p2))) then 
                    ap_reg_ppiten_pp12_it1 <= ap_const_logic_1;
                elsif (((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp12_stg0_fsm_104) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))) and not((ap_const_lv1_0 = exitcond13_fu_1443_p2))))) then 
                    ap_reg_ppiten_pp12_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp12_it2 assign process. --
    ap_reg_ppiten_pp12_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp12_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2)))) then 
                    ap_reg_ppiten_pp12_it2 <= ap_reg_ppiten_pp12_it1;
                elsif ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103))) then 
                    ap_reg_ppiten_pp12_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp13_it0 assign process. --
    ap_reg_ppiten_pp13_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp13_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp13_stg0_fsm_110) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))) and not((ap_const_lv1_0 = exitcond14_fu_1474_p2)))) then 
                    ap_reg_ppiten_pp13_it0 <= ap_const_logic_0;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st136_fsm_109))) then 
                    ap_reg_ppiten_pp13_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp13_it1 assign process. --
    ap_reg_ppiten_pp13_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp13_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp13_stg0_fsm_110) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))) and (ap_const_lv1_0 = exitcond14_fu_1474_p2))) then 
                    ap_reg_ppiten_pp13_it1 <= ap_const_logic_1;
                elsif (((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st136_fsm_109)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp13_stg0_fsm_110) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))) and not((ap_const_lv1_0 = exitcond14_fu_1474_p2))))) then 
                    ap_reg_ppiten_pp13_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp13_it2 assign process. --
    ap_reg_ppiten_pp13_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp13_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2)))) then 
                    ap_reg_ppiten_pp13_it2 <= ap_reg_ppiten_pp13_it1;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st136_fsm_109))) then 
                    ap_reg_ppiten_pp13_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp14_it0 assign process. --
    ap_reg_ppiten_pp14_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp14_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp14_stg0_fsm_116) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))) and not((ap_const_lv1_0 = exitcond15_fu_1499_p2)))) then 
                    ap_reg_ppiten_pp14_it0 <= ap_const_logic_0;
                elsif ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115))) then 
                    ap_reg_ppiten_pp14_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp14_it1 assign process. --
    ap_reg_ppiten_pp14_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp14_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp14_stg0_fsm_116) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))) and (ap_const_lv1_0 = exitcond15_fu_1499_p2))) then 
                    ap_reg_ppiten_pp14_it1 <= ap_const_logic_1;
                elsif (((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp14_stg0_fsm_116) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))) and not((ap_const_lv1_0 = exitcond15_fu_1499_p2))))) then 
                    ap_reg_ppiten_pp14_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp14_it2 assign process. --
    ap_reg_ppiten_pp14_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp14_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2)))) then 
                    ap_reg_ppiten_pp14_it2 <= ap_reg_ppiten_pp14_it1;
                elsif ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115))) then 
                    ap_reg_ppiten_pp14_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp15_it0 assign process. --
    ap_reg_ppiten_pp15_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp15_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp15_stg0_fsm_122) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))) and not((ap_const_lv1_0 = exitcond16_fu_1530_p2)))) then 
                    ap_reg_ppiten_pp15_it0 <= ap_const_logic_0;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st152_fsm_121))) then 
                    ap_reg_ppiten_pp15_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp15_it1 assign process. --
    ap_reg_ppiten_pp15_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp15_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp15_stg0_fsm_122) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))) and (ap_const_lv1_0 = exitcond16_fu_1530_p2))) then 
                    ap_reg_ppiten_pp15_it1 <= ap_const_logic_1;
                elsif (((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st152_fsm_121)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp15_stg0_fsm_122) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))) and not((ap_const_lv1_0 = exitcond16_fu_1530_p2))))) then 
                    ap_reg_ppiten_pp15_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp15_it2 assign process. --
    ap_reg_ppiten_pp15_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp15_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2)))) then 
                    ap_reg_ppiten_pp15_it2 <= ap_reg_ppiten_pp15_it1;
                elsif ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st152_fsm_121))) then 
                    ap_reg_ppiten_pp15_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_lv1_0 = exitcond4_fu_906_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_22)) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and (ap_const_lv1_0 = exitcond4_fu_906_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_22) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_lv1_0 = exitcond4_fu_906_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_22)) then 
                    ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it0 assign process. --
    ap_reg_ppiten_pp2_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_lv1_0 = exitcond5_fu_978_p2)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_31)) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it1 assign process. --
    ap_reg_ppiten_pp2_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and (ap_const_lv1_0 = exitcond5_fu_978_p2))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_31) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_lv1_0 = exitcond5_fu_978_p2))))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it2 assign process. --
    ap_reg_ppiten_pp2_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))) then 
                    ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_31)) then 
                    ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it0 assign process. --
    ap_reg_ppiten_pp3_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_lv1_0 = exitcond6_fu_1042_p2)))) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_40)) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it1 assign process. --
    ap_reg_ppiten_pp3_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and (ap_const_lv1_0 = exitcond6_fu_1042_p2))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_40) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_lv1_0 = exitcond6_fu_1042_p2))))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it2 assign process. --
    ap_reg_ppiten_pp3_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))) then 
                    ap_reg_ppiten_pp3_it2 <= ap_reg_ppiten_pp3_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_40)) then 
                    ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp4_it0 assign process. --
    ap_reg_ppiten_pp4_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_lv1_0 = exitcond7_fu_1114_p2)))) then 
                    ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st58_fsm_49)) then 
                    ap_reg_ppiten_pp4_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp4_it1 assign process. --
    ap_reg_ppiten_pp4_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and (ap_const_lv1_0 = exitcond7_fu_1114_p2))) then 
                    ap_reg_ppiten_pp4_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st58_fsm_49) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_lv1_0 = exitcond7_fu_1114_p2))))) then 
                    ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp4_it2 assign process. --
    ap_reg_ppiten_pp4_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp4_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))) then 
                    ap_reg_ppiten_pp4_it2 <= ap_reg_ppiten_pp4_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st58_fsm_49)) then 
                    ap_reg_ppiten_pp4_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp5_it0 assign process. --
    ap_reg_ppiten_pp5_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp5_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_lv1_0 = exitcond8_fu_1178_p2)))) then 
                    ap_reg_ppiten_pp5_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st69_fsm_58)) then 
                    ap_reg_ppiten_pp5_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp5_it1 assign process. --
    ap_reg_ppiten_pp5_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp5_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and (ap_const_lv1_0 = exitcond8_fu_1178_p2))) then 
                    ap_reg_ppiten_pp5_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st69_fsm_58) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_lv1_0 = exitcond8_fu_1178_p2))))) then 
                    ap_reg_ppiten_pp5_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp5_it2 assign process. --
    ap_reg_ppiten_pp5_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp5_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))) then 
                    ap_reg_ppiten_pp5_it2 <= ap_reg_ppiten_pp5_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st69_fsm_58)) then 
                    ap_reg_ppiten_pp5_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp6_it0 assign process. --
    ap_reg_ppiten_pp6_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp6_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_68) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) and not((ap_const_lv1_0 = exitcond9_fu_1250_p2)))) then 
                    ap_reg_ppiten_pp6_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st80_fsm_67)) then 
                    ap_reg_ppiten_pp6_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp6_it1 assign process. --
    ap_reg_ppiten_pp6_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp6_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_68) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) and (ap_const_lv1_0 = exitcond9_fu_1250_p2))) then 
                    ap_reg_ppiten_pp6_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st80_fsm_67) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_68) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) and not((ap_const_lv1_0 = exitcond9_fu_1250_p2))))) then 
                    ap_reg_ppiten_pp6_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp6_it2 assign process. --
    ap_reg_ppiten_pp6_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp6_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1)))) then 
                    ap_reg_ppiten_pp6_it2 <= ap_reg_ppiten_pp6_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st80_fsm_67)) then 
                    ap_reg_ppiten_pp6_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp7_it0 assign process. --
    ap_reg_ppiten_pp7_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp7_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_77) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) and not((ap_const_lv1_0 = exitcond2_fu_1314_p2)))) then 
                    ap_reg_ppiten_pp7_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st91_fsm_76)) then 
                    ap_reg_ppiten_pp7_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp7_it1 assign process. --
    ap_reg_ppiten_pp7_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp7_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_77) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) and (ap_const_lv1_0 = exitcond2_fu_1314_p2))) then 
                    ap_reg_ppiten_pp7_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st91_fsm_76) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_77) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) and not((ap_const_lv1_0 = exitcond2_fu_1314_p2))))) then 
                    ap_reg_ppiten_pp7_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp7_it2 assign process. --
    ap_reg_ppiten_pp7_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp7_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1)))) then 
                    ap_reg_ppiten_pp7_it2 <= ap_reg_ppiten_pp7_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st91_fsm_76)) then 
                    ap_reg_ppiten_pp7_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp8_it0 assign process. --
    ap_reg_ppiten_pp8_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp8_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_80) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_lv1_0 = exitcond3_fu_1331_p2)))) then 
                    ap_reg_ppiten_pp8_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done))))) then 
                    ap_reg_ppiten_pp8_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp8_it1 assign process. --
    ap_reg_ppiten_pp8_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp8_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_80) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and (ap_const_lv1_0 = exitcond3_fu_1331_p2))) then 
                    ap_reg_ppiten_pp8_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_80) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_lv1_0 = exitcond3_fu_1331_p2))))) then 
                    ap_reg_ppiten_pp8_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp8_it2 assign process. --
    ap_reg_ppiten_pp8_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp8_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2)))) then 
                    ap_reg_ppiten_pp8_it2 <= ap_reg_ppiten_pp8_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done))))) then 
                    ap_reg_ppiten_pp8_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp9_it0 assign process. --
    ap_reg_ppiten_pp9_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp9_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_86) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_lv1_0 = exitcond10_fu_1362_p2)))) then 
                    ap_reg_ppiten_pp9_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st104_fsm_85) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))))) then 
                    ap_reg_ppiten_pp9_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp9_it1 assign process. --
    ap_reg_ppiten_pp9_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp9_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_86) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and (ap_const_lv1_0 = exitcond10_fu_1362_p2))) then 
                    ap_reg_ppiten_pp9_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st104_fsm_85) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_86) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_lv1_0 = exitcond10_fu_1362_p2))))) then 
                    ap_reg_ppiten_pp9_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp9_it2 assign process. --
    ap_reg_ppiten_pp9_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp9_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2)))) then 
                    ap_reg_ppiten_pp9_it2 <= ap_reg_ppiten_pp9_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st104_fsm_85) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))))) then 
                    ap_reg_ppiten_pp9_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_bgsub_process_fu_688_ap_start_ap_start_reg assign process. --
    grp_bgsub_process_fu_688_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bgsub_process_fu_688_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st95_fsm_78)) then 
                    grp_bgsub_process_fu_688_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bgsub_process_fu_688_ap_ready)) then 
                    grp_bgsub_process_fu_688_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_bgsub_process_fu_697_ap_start_ap_start_reg assign process. --
    grp_bgsub_process_fu_697_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bgsub_process_fu_697_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st95_fsm_78)) then 
                    grp_bgsub_process_fu_697_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bgsub_process_fu_697_ap_ready)) then 
                    grp_bgsub_process_fu_697_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_bgsub_process_fu_706_ap_start_ap_start_reg assign process. --
    grp_bgsub_process_fu_706_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bgsub_process_fu_706_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st95_fsm_78)) then 
                    grp_bgsub_process_fu_706_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bgsub_process_fu_706_ap_ready)) then 
                    grp_bgsub_process_fu_706_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_bgsub_process_fu_715_ap_start_ap_start_reg assign process. --
    grp_bgsub_process_fu_715_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bgsub_process_fu_715_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st95_fsm_78)) then 
                    grp_bgsub_process_fu_715_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bgsub_process_fu_715_ap_ready)) then 
                    grp_bgsub_process_fu_715_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- indvar10_reg_622 assign process. --
    indvar10_reg_622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))))) then 
                indvar10_reg_622 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_92) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and (ap_const_lv1_0 = exitcond11_fu_1387_p2))) then 
                indvar10_reg_622 <= indvar_next10_fu_1393_p2;
            end if; 
        end if;
    end process;

    -- indvar11_reg_633 assign process. --
    indvar11_reg_633_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st120_fsm_97))) then 
                indvar11_reg_633 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_98) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and (ap_const_lv1_0 = exitcond12_fu_1418_p2))) then 
                indvar11_reg_633 <= indvar_next11_fu_1424_p2;
            end if; 
        end if;
    end process;

    -- indvar12_reg_644 assign process. --
    indvar12_reg_644_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103))) then 
                indvar12_reg_644 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp12_stg0_fsm_104) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))) and (ap_const_lv1_0 = exitcond13_fu_1443_p2))) then 
                indvar12_reg_644 <= indvar_next12_fu_1449_p2;
            end if; 
        end if;
    end process;

    -- indvar13_reg_655 assign process. --
    indvar13_reg_655_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st136_fsm_109))) then 
                indvar13_reg_655 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp13_stg0_fsm_110) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))) and (ap_const_lv1_0 = exitcond14_fu_1474_p2))) then 
                indvar13_reg_655 <= indvar_next13_fu_1480_p2;
            end if; 
        end if;
    end process;

    -- indvar14_reg_666 assign process. --
    indvar14_reg_666_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115))) then 
                indvar14_reg_666 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp14_stg0_fsm_116) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))) and (ap_const_lv1_0 = exitcond15_fu_1499_p2))) then 
                indvar14_reg_666 <= indvar_next14_fu_1505_p2;
            end if; 
        end if;
    end process;

    -- indvar15_reg_677 assign process. --
    indvar15_reg_677_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st152_fsm_121))) then 
                indvar15_reg_677 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp15_stg0_fsm_122) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))) and (ap_const_lv1_0 = exitcond16_fu_1530_p2))) then 
                indvar15_reg_677 <= indvar_next15_fu_1536_p2;
            end if; 
        end if;
    end process;

    -- indvar1_reg_528 assign process. --
    indvar1_reg_528_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_lv1_0 = exitcond5_reg_1662) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then 
                indvar1_reg_528 <= indvar_next2_reg_1666;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_31)) then 
                indvar1_reg_528 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- indvar2_reg_540 assign process. --
    indvar2_reg_540_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_lv1_0 = exitcond6_reg_1682) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then 
                indvar2_reg_540 <= indvar_next3_reg_1686;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_40)) then 
                indvar2_reg_540 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- indvar3_reg_552 assign process. --
    indvar3_reg_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_lv1_0 = exitcond7_reg_1708) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then 
                indvar3_reg_552 <= indvar_next4_reg_1712;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st58_fsm_49)) then 
                indvar3_reg_552 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- indvar4_reg_564 assign process. --
    indvar4_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_lv1_0 = exitcond8_reg_1728) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))))) then 
                indvar4_reg_564 <= indvar_next5_reg_1732;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st69_fsm_58)) then 
                indvar4_reg_564 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- indvar5_reg_576 assign process. --
    indvar5_reg_576_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_68) and (ap_const_lv1_0 = exitcond9_reg_1754) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))))) then 
                indvar5_reg_576 <= indvar_next6_reg_1758;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st80_fsm_67)) then 
                indvar5_reg_576 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- indvar6_reg_588 assign process. --
    indvar6_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_77) and (ap_const_lv1_0 = exitcond2_reg_1774) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))))) then 
                indvar6_reg_588 <= indvar_next7_reg_1778;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st91_fsm_76)) then 
                indvar6_reg_588 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- indvar7_reg_600 assign process. --
    indvar7_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_80) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and (ap_const_lv1_0 = exitcond3_fu_1331_p2))) then 
                indvar7_reg_600 <= indvar_next8_fu_1337_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done))))) then 
                indvar7_reg_600 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- indvar8_reg_611 assign process. --
    indvar8_reg_611_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st104_fsm_85) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))))) then 
                indvar8_reg_611 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_86) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and (ap_const_lv1_0 = exitcond10_fu_1362_p2))) then 
                indvar8_reg_611 <= indvar_next9_fu_1368_p2;
            end if; 
        end if;
    end process;

    -- indvar9_reg_516 assign process. --
    indvar9_reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_lv1_0 = exitcond4_reg_1636) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then 
                indvar9_reg_516 <= indvar_next1_reg_1640;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_22)) then 
                indvar9_reg_516 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    -- indvar_reg_504 assign process. --
    indvar_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (exitcond1_reg_1616 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
                indvar_reg_504 <= indvar_next_reg_1620;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                indvar_reg_504 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- learningRate2_reg_479 assign process. --
    learningRate2_reg_479_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = init)) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(ap_sig_bdd_1489))) then 
                learningRate2_reg_479(23) <= '1';
                learningRate2_reg_479(24) <= '1';
                learningRate2_reg_479(25) <= '1';
                learningRate2_reg_479(26) <= '1';
                learningRate2_reg_479(27) <= '1';
                learningRate2_reg_479(28) <= '1';
                learningRate2_reg_479(29) <= '1';
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and (ap_const_lv1_0 = init) and not((ap_sig_bdd_502 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then 
                learningRate2_reg_479(23) <= '0';
                learningRate2_reg_479(24) <= '0';
                learningRate2_reg_479(25) <= '0';
                learningRate2_reg_479(26) <= '0';
                learningRate2_reg_479(27) <= '0';
                learningRate2_reg_479(28) <= '0';
                learningRate2_reg_479(29) <= '0';
            end if; 
        end if;
    end process;

    -- p_reg_468 assign process. --
    p_reg_468_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not((ap_sig_bdd_502 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then 
                p_reg_468 <= ap_const_lv20_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_773_p2) and not(((ap_const_lv1_0 = exitcond_fu_773_p2) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY))))) then 
                p_reg_468 <= p_1_fu_779_p2;
            end if; 
        end if;
    end process;

    -- part_reg_492 assign process. --
    part_reg_492_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st160_fsm_127) and not((m_axi_frame_out_BVALID = ap_const_logic_0)))) then 
                part_reg_492 <= part_1_reg_1955;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(ap_sig_bdd_1489))) then 
                part_reg_492 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_86) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))))) then
                ap_reg_ppstg_exitcond10_reg_1807_pp9_it1 <= exitcond10_reg_1807;
                exitcond10_reg_1807 <= exitcond10_fu_1362_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_92) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))))) then
                ap_reg_ppstg_exitcond11_reg_1826_pp10_it1 <= exitcond11_reg_1826;
                exitcond11_reg_1826 <= exitcond11_fu_1387_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_98) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))))) then
                ap_reg_ppstg_exitcond12_reg_1850_pp11_it1 <= exitcond12_reg_1850;
                exitcond12_reg_1850 <= exitcond12_fu_1418_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp12_stg0_fsm_104) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))))) then
                ap_reg_ppstg_exitcond13_reg_1869_pp12_it1 <= exitcond13_reg_1869;
                exitcond13_reg_1869 <= exitcond13_fu_1443_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp13_stg0_fsm_110) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))))) then
                ap_reg_ppstg_exitcond14_reg_1893_pp13_it1 <= exitcond14_reg_1893;
                exitcond14_reg_1893 <= exitcond14_fu_1474_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp14_stg0_fsm_116) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))))) then
                ap_reg_ppstg_exitcond15_reg_1912_pp14_it1 <= exitcond15_reg_1912;
                exitcond15_reg_1912 <= exitcond15_fu_1499_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp15_stg0_fsm_122) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))))) then
                ap_reg_ppstg_exitcond16_reg_1936_pp15_it1 <= exitcond16_reg_1936;
                exitcond16_reg_1936 <= exitcond16_fu_1530_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                ap_reg_ppstg_exitcond1_reg_1616_pp0_it1 <= exitcond1_reg_1616;
                ap_reg_ppstg_indvar_reg_504_pp0_it1 <= indvar_reg_504;
                exitcond1_reg_1616 <= exitcond1_fu_840_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_77) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))))) then
                ap_reg_ppstg_exitcond2_reg_1774_pp7_it1 <= exitcond2_reg_1774;
                ap_reg_ppstg_indvar6_reg_588_pp7_it1 <= indvar6_reg_588;
                exitcond2_reg_1774 <= exitcond2_fu_1314_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_80) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))))) then
                ap_reg_ppstg_exitcond3_reg_1783_pp8_it1 <= exitcond3_reg_1783;
                exitcond3_reg_1783 <= exitcond3_fu_1331_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                ap_reg_ppstg_exitcond4_reg_1636_pp1_it1 <= exitcond4_reg_1636;
                ap_reg_ppstg_indvar9_reg_516_pp1_it1 <= indvar9_reg_516;
                exitcond4_reg_1636 <= exitcond4_fu_906_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then
                ap_reg_ppstg_exitcond5_reg_1662_pp2_it1 <= exitcond5_reg_1662;
                ap_reg_ppstg_indvar1_reg_528_pp2_it1 <= indvar1_reg_528;
                exitcond5_reg_1662 <= exitcond5_fu_978_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then
                ap_reg_ppstg_exitcond6_reg_1682_pp3_it1 <= exitcond6_reg_1682;
                ap_reg_ppstg_indvar2_reg_540_pp3_it1 <= indvar2_reg_540;
                exitcond6_reg_1682 <= exitcond6_fu_1042_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then
                ap_reg_ppstg_exitcond7_reg_1708_pp4_it1 <= exitcond7_reg_1708;
                ap_reg_ppstg_indvar3_reg_552_pp4_it1 <= indvar3_reg_552;
                exitcond7_reg_1708 <= exitcond7_fu_1114_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))))) then
                ap_reg_ppstg_exitcond8_reg_1728_pp5_it1 <= exitcond8_reg_1728;
                ap_reg_ppstg_indvar4_reg_564_pp5_it1 <= indvar4_reg_564;
                exitcond8_reg_1728 <= exitcond8_fu_1178_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_68) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))))) then
                ap_reg_ppstg_exitcond9_reg_1754_pp6_it1 <= exitcond9_reg_1754;
                ap_reg_ppstg_indvar5_reg_576_pp6_it1 <= indvar5_reg_576;
                exitcond9_reg_1754 <= exitcond9_fu_1250_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16) and not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)))) then
                    bgmodel_addr_17_reg_1630(30 downto 0) <= tmp_120_fu_896_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34))) then
                    bgmodel_addr_18_reg_1676(30 downto 0) <= tmp_126_fu_1032_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52))) then
                    bgmodel_addr_19_reg_1722(30 downto 0) <= tmp_132_fu_1168_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY)) and (ap_const_logic_1 = ap_sig_cseq_ST_st85_fsm_70))) then
                    bgmodel_addr_20_reg_1768(30 downto 0) <= tmp_138_fu_1304_p1(32 - 1 downto 0)(30 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_98) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and (ap_const_lv1_0 = exitcond12_reg_1850))) then
                extLd1_reg_1864 <= extLd1_fu_1435_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp13_stg0_fsm_110) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))) and (ap_const_lv1_0 = exitcond14_reg_1893))) then
                extLd2_reg_1907 <= extLd2_fu_1491_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp15_stg0_fsm_122) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))) and (ap_const_lv1_0 = exitcond16_reg_1936))) then
                extLd3_reg_1950 <= extLd3_fu_1547_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_86) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and (ap_const_lv1_0 = exitcond10_reg_1807))) then
                extLd_reg_1821 <= extLd_fu_1379_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_24)) then
                frame_out_addr_2_reg_1656 <= tmp_123_fu_968_p1(32 - 1 downto 0);
                    tmp_121_reg_1651(16 downto 8) <= tmp_121_fu_959_p1(16 downto 8);
                    tmp_59_reg_1645(6 downto 1) <= tmp_59_fu_923_p2(6 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st51_fsm_42)) then
                frame_out_addr_3_reg_1702 <= tmp_129_fu_1104_p1(32 - 1 downto 0);
                    tmp_127_reg_1697(16 downto 7) <= tmp_127_fu_1095_p1(16 downto 7);
                    tmp_66_reg_1691(0) <= tmp_66_fu_1059_p2(0);    tmp_66_reg_1691(6 downto 2) <= tmp_66_fu_1059_p2(6 downto 2);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st73_fsm_60)) then
                frame_out_addr_4_reg_1748 <= tmp_135_fu_1240_p1(32 - 1 downto 0);
                    tmp_133_reg_1743(16 downto 9) <= tmp_133_fu_1231_p1(16 downto 9);
                    tmp_73_reg_1737(6 downto 2) <= tmp_73_fu_1195_p2(6 downto 2);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st100_fsm_81)) then
                frame_out_addr_5_reg_1802 <= tmp_140_fu_1352_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st116_fsm_93)) then
                frame_out_addr_6_reg_1845 <= tmp_142_fu_1408_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st132_fsm_105)) then
                frame_out_addr_7_reg_1888 <= tmp_144_fu_1464_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st148_fsm_117)) then
                frame_out_addr_8_reg_1931 <= tmp_146_fu_1520_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_54_fu_785_p2)))) then
                frame_out_addr_reg_1610 <= tmp_117_fu_830_p1(32 - 1 downto 0);
                    tmp_115_reg_1605(16 downto 7) <= tmp_115_fu_821_p1(16 downto 7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                indvar_next1_reg_1640 <= indvar_next1_fu_912_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then
                indvar_next2_reg_1666 <= indvar_next2_fu_984_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then
                indvar_next3_reg_1686 <= indvar_next3_fu_1048_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then
                indvar_next4_reg_1712 <= indvar_next4_fu_1120_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it0) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))))) then
                indvar_next5_reg_1732 <= indvar_next5_fu_1184_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_68) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it0) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))))) then
                indvar_next6_reg_1758 <= indvar_next6_fu_1256_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_77) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it0) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))))) then
                indvar_next7_reg_1778 <= indvar_next7_fu_1320_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                indvar_next_reg_1620 <= indvar_next_fu_846_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_92) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and (ap_const_lv1_0 = exitcond11_reg_1826))) then
                part2_bgmodel_load_reg_1840 <= part2_bgmodel_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp12_stg0_fsm_104) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))) and (ap_const_lv1_0 = exitcond13_reg_1869))) then
                part3_bgmodel_load_reg_1883 <= part3_bgmodel_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp14_stg0_fsm_116) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))) and (ap_const_lv1_0 = exitcond15_reg_1912))) then
                part4_bgmodel_load_reg_1926 <= part4_bgmodel_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st156_fsm_123)) then
                part_1_reg_1955 <= part_1_fu_1555_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_80) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and (ap_const_lv1_0 = exitcond3_reg_1783))) then
                part_bgmodel_load_reg_1797 <= part_bgmodel_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (exitcond1_reg_1616 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_lv1_0 = exitcond5_reg_1662) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_lv1_0 = exitcond7_reg_1708) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_68) and (ap_const_lv1_0 = exitcond9_reg_1754) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1)))))) then
                reg_724 <= m_axi_frame_out_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_lv1_0 = exitcond4_reg_1636) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_lv1_0 = exitcond6_reg_1682) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_lv1_0 = exitcond8_reg_1728) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_77) and (ap_const_lv1_0 = exitcond2_reg_1774) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1)))))) then
                reg_732 <= m_axi_bgmodel_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_sig_bdd_502 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then
                tmp_114_cast_reg_1565 <= tmp_114_cast_fu_740_p1;
                tmp_115_cast_reg_1573 <= tmp_115_cast_fu_744_p1;
                    tmp_116_cast_reg_1581(29 downto 0) <= tmp_116_cast_fu_758_p1(29 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_15)) then
                tmp_119_reg_1625 <= tmp_119_fu_891_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_33)) then
                tmp_125_reg_1671 <= tmp_125_fu_1027_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st62_fsm_51)) then
                tmp_131_reg_1717 <= tmp_131_fu_1163_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st84_fsm_69)) then
                tmp_137_reg_1763 <= tmp_137_fu_1299_p2;
            end if;
        end if;
    end process;
    tmp_116_cast_reg_1581(30) <= '0';
    tmp_115_reg_1605(6 downto 0) <= "0000000";
    tmp_115_reg_1605(32 downto 17) <= "0000000000000000";
    bgmodel_addr_17_reg_1630(31) <= '0';
    tmp_59_reg_1645(0) <= '1';
    tmp_121_reg_1651(7 downto 0) <= "10000000";
    tmp_121_reg_1651(32 downto 17) <= "0000000000000000";
    bgmodel_addr_18_reg_1676(31) <= '0';
    tmp_66_reg_1691(1) <= '1';
    tmp_127_reg_1697(6 downto 0) <= "0000000";
    tmp_127_reg_1697(32 downto 17) <= "0000000000000000";
    bgmodel_addr_19_reg_1722(31) <= '0';
    tmp_73_reg_1737(1 downto 0) <= "11";
    tmp_133_reg_1743(8 downto 0) <= "110000000";
    tmp_133_reg_1743(32 downto 17) <= "0000000000000000";
    bgmodel_addr_20_reg_1768(31) <= '0';
    learningRate2_reg_479(22 downto 0) <= "00000000000000000000000";
    learningRate2_reg_479(31 downto 30) <= "00";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, init, m_axi_bgmodel_BVALID, m_axi_frame_out_BVALID, ap_reg_ppiten_pp0_it0, ap_sig_bdd_277, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp1_it0, ap_sig_bdd_301, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp2_it0, ap_sig_bdd_324, ap_reg_ppiten_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppiten_pp3_it0, ap_sig_bdd_347, ap_reg_ppiten_pp3_it1, ap_reg_ppiten_pp3_it2, ap_reg_ppiten_pp4_it0, ap_sig_bdd_370, ap_reg_ppiten_pp4_it1, ap_reg_ppiten_pp4_it2, ap_reg_ppiten_pp5_it0, ap_sig_bdd_393, ap_reg_ppiten_pp5_it1, ap_reg_ppiten_pp5_it2, ap_reg_ppiten_pp6_it0, ap_sig_bdd_416, ap_reg_ppiten_pp6_it1, ap_reg_ppiten_pp6_it2, ap_reg_ppiten_pp7_it0, ap_sig_bdd_439, ap_reg_ppiten_pp7_it1, ap_reg_ppiten_pp7_it2, ap_sig_bdd_502, ap_sig_ioackin_m_axi_bgmodel_AWREADY, exitcond_fu_773_p2, ap_sig_ioackin_m_axi_bgmodel_WREADY, tmp_54_fu_785_p2, exitcond1_fu_840_p2, ap_sig_ioackin_m_axi_bgmodel_ARREADY, exitcond4_fu_906_p2, exitcond5_fu_978_p2, exitcond6_fu_1042_p2, exitcond7_fu_1114_p2, exitcond8_fu_1178_p2, exitcond9_fu_1250_p2, exitcond2_fu_1314_p2, exitcond3_fu_1331_p2, ap_reg_ppiten_pp8_it0, ap_reg_ppiten_pp8_it1, ap_reg_ppstg_exitcond3_reg_1783_pp8_it1, ap_reg_ppiten_pp8_it2, exitcond10_fu_1362_p2, ap_reg_ppiten_pp9_it0, ap_reg_ppiten_pp9_it1, ap_reg_ppstg_exitcond10_reg_1807_pp9_it1, ap_sig_ioackin_m_axi_frame_out_WREADY, ap_reg_ppiten_pp9_it2, exitcond11_fu_1387_p2, ap_reg_ppiten_pp10_it0, ap_reg_ppiten_pp10_it1, ap_reg_ppstg_exitcond11_reg_1826_pp10_it1, ap_reg_ppiten_pp10_it2, exitcond12_fu_1418_p2, ap_reg_ppiten_pp11_it0, ap_reg_ppiten_pp11_it1, ap_reg_ppstg_exitcond12_reg_1850_pp11_it1, ap_reg_ppiten_pp11_it2, exitcond13_fu_1443_p2, ap_reg_ppiten_pp12_it0, ap_reg_ppiten_pp12_it1, ap_reg_ppstg_exitcond13_reg_1869_pp12_it1, ap_reg_ppiten_pp12_it2, exitcond14_fu_1474_p2, ap_reg_ppiten_pp13_it0, ap_reg_ppiten_pp13_it1, ap_reg_ppstg_exitcond14_reg_1893_pp13_it1, ap_reg_ppiten_pp13_it2, exitcond15_fu_1499_p2, ap_reg_ppiten_pp14_it0, ap_reg_ppiten_pp14_it1, ap_reg_ppstg_exitcond15_reg_1912_pp14_it1, ap_reg_ppiten_pp14_it2, exitcond16_fu_1530_p2, ap_reg_ppiten_pp15_it0, ap_reg_ppiten_pp15_it1, ap_reg_ppstg_exitcond16_reg_1936_pp15_it1, ap_reg_ppiten_pp15_it2, grp_bgsub_process_fu_688_ap_done, grp_bgsub_process_fu_697_ap_done, grp_bgsub_process_fu_706_ap_done, grp_bgsub_process_fu_715_ap_done, ap_sig_ioackin_m_axi_frame_out_AWREADY, ap_sig_bdd_1489, ap_sig_ioackin_m_axi_frame_out_ARREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if ((not((ap_const_lv1_0 = init)) and not((ap_sig_bdd_502 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                elsif (((ap_const_lv1_0 = init) and not((ap_sig_bdd_502 or (not((ap_const_lv1_0 = init)) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY)))))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (((ap_const_lv1_0 = exitcond_fu_773_p2) and not(((ap_const_lv1_0 = exitcond_fu_773_p2) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                elsif ((not(((ap_const_lv1_0 = exitcond_fu_773_p2) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY))) and not((ap_const_lv1_0 = exitcond_fu_773_p2)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not(ap_sig_bdd_1489)) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                if ((ap_const_lv1_0 = tmp_54_fu_785_p2)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_14;
            when ap_ST_pp0_stg0_fsm_14 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond1_fu_840_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_14;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond1_fu_840_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_14;
                end if;
            when ap_ST_st18_fsm_15 => 
                ap_NS_fsm <= ap_ST_st19_fsm_16;
            when ap_ST_st19_fsm_16 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_16;
                end if;
            when ap_ST_st20_fsm_17 => 
                ap_NS_fsm <= ap_ST_st21_fsm_18;
            when ap_ST_st21_fsm_18 => 
                ap_NS_fsm <= ap_ST_st22_fsm_19;
            when ap_ST_st22_fsm_19 => 
                ap_NS_fsm <= ap_ST_st23_fsm_20;
            when ap_ST_st23_fsm_20 => 
                ap_NS_fsm <= ap_ST_st24_fsm_21;
            when ap_ST_st24_fsm_21 => 
                ap_NS_fsm <= ap_ST_st25_fsm_22;
            when ap_ST_st25_fsm_22 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_23;
            when ap_ST_pp1_stg0_fsm_23 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_lv1_0 = exitcond4_fu_906_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_23;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not((ap_const_lv1_0 = exitcond4_fu_906_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_st29_fsm_24;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_23;
                end if;
            when ap_ST_st29_fsm_24 => 
                ap_NS_fsm <= ap_ST_st30_fsm_25;
            when ap_ST_st30_fsm_25 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st31_fsm_26;
                else
                    ap_NS_fsm <= ap_ST_st30_fsm_25;
                end if;
            when ap_ST_st31_fsm_26 => 
                ap_NS_fsm <= ap_ST_st32_fsm_27;
            when ap_ST_st32_fsm_27 => 
                ap_NS_fsm <= ap_ST_st33_fsm_28;
            when ap_ST_st33_fsm_28 => 
                ap_NS_fsm <= ap_ST_st34_fsm_29;
            when ap_ST_st34_fsm_29 => 
                ap_NS_fsm <= ap_ST_st35_fsm_30;
            when ap_ST_st35_fsm_30 => 
                ap_NS_fsm <= ap_ST_st36_fsm_31;
            when ap_ST_st36_fsm_31 => 
                ap_NS_fsm <= ap_ST_pp2_stg0_fsm_32;
            when ap_ST_pp2_stg0_fsm_32 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_lv1_0 = exitcond5_fu_978_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_32;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and not((ap_const_lv1_0 = exitcond5_fu_978_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then
                    ap_NS_fsm <= ap_ST_st40_fsm_33;
                else
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_32;
                end if;
            when ap_ST_st40_fsm_33 => 
                ap_NS_fsm <= ap_ST_st41_fsm_34;
            when ap_ST_st41_fsm_34 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st42_fsm_35;
                else
                    ap_NS_fsm <= ap_ST_st41_fsm_34;
                end if;
            when ap_ST_st42_fsm_35 => 
                ap_NS_fsm <= ap_ST_st43_fsm_36;
            when ap_ST_st43_fsm_36 => 
                ap_NS_fsm <= ap_ST_st44_fsm_37;
            when ap_ST_st44_fsm_37 => 
                ap_NS_fsm <= ap_ST_st45_fsm_38;
            when ap_ST_st45_fsm_38 => 
                ap_NS_fsm <= ap_ST_st46_fsm_39;
            when ap_ST_st46_fsm_39 => 
                ap_NS_fsm <= ap_ST_st47_fsm_40;
            when ap_ST_st47_fsm_40 => 
                ap_NS_fsm <= ap_ST_pp3_stg0_fsm_41;
            when ap_ST_pp3_stg0_fsm_41 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_lv1_0 = exitcond6_fu_1042_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_41;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and not((ap_const_lv1_0 = exitcond6_fu_1042_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then
                    ap_NS_fsm <= ap_ST_st51_fsm_42;
                else
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_41;
                end if;
            when ap_ST_st51_fsm_42 => 
                ap_NS_fsm <= ap_ST_st52_fsm_43;
            when ap_ST_st52_fsm_43 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st53_fsm_44;
                else
                    ap_NS_fsm <= ap_ST_st52_fsm_43;
                end if;
            when ap_ST_st53_fsm_44 => 
                ap_NS_fsm <= ap_ST_st54_fsm_45;
            when ap_ST_st54_fsm_45 => 
                ap_NS_fsm <= ap_ST_st55_fsm_46;
            when ap_ST_st55_fsm_46 => 
                ap_NS_fsm <= ap_ST_st56_fsm_47;
            when ap_ST_st56_fsm_47 => 
                ap_NS_fsm <= ap_ST_st57_fsm_48;
            when ap_ST_st57_fsm_48 => 
                ap_NS_fsm <= ap_ST_st58_fsm_49;
            when ap_ST_st58_fsm_49 => 
                ap_NS_fsm <= ap_ST_pp4_stg0_fsm_50;
            when ap_ST_pp4_stg0_fsm_50 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it2) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_lv1_0 = exitcond7_fu_1114_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp4_stg0_fsm_50;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp4_it2) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and not((ap_const_lv1_0 = exitcond7_fu_1114_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then
                    ap_NS_fsm <= ap_ST_st62_fsm_51;
                else
                    ap_NS_fsm <= ap_ST_pp4_stg0_fsm_50;
                end if;
            when ap_ST_st62_fsm_51 => 
                ap_NS_fsm <= ap_ST_st63_fsm_52;
            when ap_ST_st63_fsm_52 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st64_fsm_53;
                else
                    ap_NS_fsm <= ap_ST_st63_fsm_52;
                end if;
            when ap_ST_st64_fsm_53 => 
                ap_NS_fsm <= ap_ST_st65_fsm_54;
            when ap_ST_st65_fsm_54 => 
                ap_NS_fsm <= ap_ST_st66_fsm_55;
            when ap_ST_st66_fsm_55 => 
                ap_NS_fsm <= ap_ST_st67_fsm_56;
            when ap_ST_st67_fsm_56 => 
                ap_NS_fsm <= ap_ST_st68_fsm_57;
            when ap_ST_st68_fsm_57 => 
                ap_NS_fsm <= ap_ST_st69_fsm_58;
            when ap_ST_st69_fsm_58 => 
                ap_NS_fsm <= ap_ST_pp5_stg0_fsm_59;
            when ap_ST_pp5_stg0_fsm_59 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp5_it2) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp5_it0) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_lv1_0 = exitcond8_fu_1178_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp5_stg0_fsm_59;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp5_it2) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp5_it0) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and not((ap_const_lv1_0 = exitcond8_fu_1178_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp5_it1))))) then
                    ap_NS_fsm <= ap_ST_st73_fsm_60;
                else
                    ap_NS_fsm <= ap_ST_pp5_stg0_fsm_59;
                end if;
            when ap_ST_st73_fsm_60 => 
                ap_NS_fsm <= ap_ST_st74_fsm_61;
            when ap_ST_st74_fsm_61 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st75_fsm_62;
                else
                    ap_NS_fsm <= ap_ST_st74_fsm_61;
                end if;
            when ap_ST_st75_fsm_62 => 
                ap_NS_fsm <= ap_ST_st76_fsm_63;
            when ap_ST_st76_fsm_63 => 
                ap_NS_fsm <= ap_ST_st77_fsm_64;
            when ap_ST_st77_fsm_64 => 
                ap_NS_fsm <= ap_ST_st78_fsm_65;
            when ap_ST_st78_fsm_65 => 
                ap_NS_fsm <= ap_ST_st79_fsm_66;
            when ap_ST_st79_fsm_66 => 
                ap_NS_fsm <= ap_ST_st80_fsm_67;
            when ap_ST_st80_fsm_67 => 
                ap_NS_fsm <= ap_ST_pp6_stg0_fsm_68;
            when ap_ST_pp6_stg0_fsm_68 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp6_it2) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp6_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp6_it0) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) and not((ap_const_lv1_0 = exitcond9_fu_1250_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp6_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp6_stg0_fsm_68;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp6_it2) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp6_it0) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) and not((ap_const_lv1_0 = exitcond9_fu_1250_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp6_it1))))) then
                    ap_NS_fsm <= ap_ST_st84_fsm_69;
                else
                    ap_NS_fsm <= ap_ST_pp6_stg0_fsm_68;
                end if;
            when ap_ST_st84_fsm_69 => 
                ap_NS_fsm <= ap_ST_st85_fsm_70;
            when ap_ST_st85_fsm_70 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st86_fsm_71;
                else
                    ap_NS_fsm <= ap_ST_st85_fsm_70;
                end if;
            when ap_ST_st86_fsm_71 => 
                ap_NS_fsm <= ap_ST_st87_fsm_72;
            when ap_ST_st87_fsm_72 => 
                ap_NS_fsm <= ap_ST_st88_fsm_73;
            when ap_ST_st88_fsm_73 => 
                ap_NS_fsm <= ap_ST_st89_fsm_74;
            when ap_ST_st89_fsm_74 => 
                ap_NS_fsm <= ap_ST_st90_fsm_75;
            when ap_ST_st90_fsm_75 => 
                ap_NS_fsm <= ap_ST_st91_fsm_76;
            when ap_ST_st91_fsm_76 => 
                ap_NS_fsm <= ap_ST_pp7_stg0_fsm_77;
            when ap_ST_pp7_stg0_fsm_77 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp7_it2) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp7_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp7_it0) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) and not((ap_const_lv1_0 = exitcond2_fu_1314_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp7_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp7_stg0_fsm_77;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp7_it2) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp7_it0) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) and not((ap_const_lv1_0 = exitcond2_fu_1314_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp7_it1))))) then
                    ap_NS_fsm <= ap_ST_st95_fsm_78;
                else
                    ap_NS_fsm <= ap_ST_pp7_stg0_fsm_77;
                end if;
            when ap_ST_st95_fsm_78 => 
                ap_NS_fsm <= ap_ST_st96_fsm_79;
            when ap_ST_st96_fsm_79 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done)))) then
                    ap_NS_fsm <= ap_ST_pp8_stg0_fsm_80;
                else
                    ap_NS_fsm <= ap_ST_st96_fsm_79;
                end if;
            when ap_ST_pp8_stg0_fsm_80 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp8_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp8_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_lv1_0 = exitcond3_fu_1331_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp8_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp8_stg0_fsm_80;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp8_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp8_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2))) and not((ap_const_lv1_0 = exitcond3_fu_1331_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp8_it1))))) then
                    ap_NS_fsm <= ap_ST_st100_fsm_81;
                else
                    ap_NS_fsm <= ap_ST_pp8_stg0_fsm_80;
                end if;
            when ap_ST_st100_fsm_81 => 
                ap_NS_fsm <= ap_ST_st101_fsm_82;
            when ap_ST_st101_fsm_82 => 
                ap_NS_fsm <= ap_ST_st102_fsm_83;
            when ap_ST_st102_fsm_83 => 
                ap_NS_fsm <= ap_ST_st103_fsm_84;
            when ap_ST_st103_fsm_84 => 
                ap_NS_fsm <= ap_ST_st104_fsm_85;
            when ap_ST_st104_fsm_85 => 
                if (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) then
                    ap_NS_fsm <= ap_ST_pp9_stg0_fsm_86;
                else
                    ap_NS_fsm <= ap_ST_st104_fsm_85;
                end if;
            when ap_ST_pp9_stg0_fsm_86 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp9_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp9_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_lv1_0 = exitcond10_fu_1362_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp9_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp9_stg0_fsm_86;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp9_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp9_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))) and not((ap_const_lv1_0 = exitcond10_fu_1362_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp9_it1))))) then
                    ap_NS_fsm <= ap_ST_st108_fsm_87;
                else
                    ap_NS_fsm <= ap_ST_pp9_stg0_fsm_86;
                end if;
            when ap_ST_st108_fsm_87 => 
                ap_NS_fsm <= ap_ST_st109_fsm_88;
            when ap_ST_st109_fsm_88 => 
                ap_NS_fsm <= ap_ST_st110_fsm_89;
            when ap_ST_st110_fsm_89 => 
                ap_NS_fsm <= ap_ST_st111_fsm_90;
            when ap_ST_st111_fsm_90 => 
                ap_NS_fsm <= ap_ST_st112_fsm_91;
            when ap_ST_st112_fsm_91 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_pp10_stg0_fsm_92;
                else
                    ap_NS_fsm <= ap_ST_st112_fsm_91;
                end if;
            when ap_ST_pp10_stg0_fsm_92 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp10_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp10_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_lv1_0 = exitcond11_fu_1387_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp10_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp10_stg0_fsm_92;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp10_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp10_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2))) and not((ap_const_lv1_0 = exitcond11_fu_1387_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp10_it1))))) then
                    ap_NS_fsm <= ap_ST_st116_fsm_93;
                else
                    ap_NS_fsm <= ap_ST_pp10_stg0_fsm_92;
                end if;
            when ap_ST_st116_fsm_93 => 
                ap_NS_fsm <= ap_ST_st117_fsm_94;
            when ap_ST_st117_fsm_94 => 
                ap_NS_fsm <= ap_ST_st118_fsm_95;
            when ap_ST_st118_fsm_95 => 
                ap_NS_fsm <= ap_ST_st119_fsm_96;
            when ap_ST_st119_fsm_96 => 
                ap_NS_fsm <= ap_ST_st120_fsm_97;
            when ap_ST_st120_fsm_97 => 
                if (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) then
                    ap_NS_fsm <= ap_ST_pp11_stg0_fsm_98;
                else
                    ap_NS_fsm <= ap_ST_st120_fsm_97;
                end if;
            when ap_ST_pp11_stg0_fsm_98 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp11_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp11_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_lv1_0 = exitcond12_fu_1418_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp11_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp11_stg0_fsm_98;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp11_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp11_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))) and not((ap_const_lv1_0 = exitcond12_fu_1418_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp11_it1))))) then
                    ap_NS_fsm <= ap_ST_st124_fsm_99;
                else
                    ap_NS_fsm <= ap_ST_pp11_stg0_fsm_98;
                end if;
            when ap_ST_st124_fsm_99 => 
                ap_NS_fsm <= ap_ST_st125_fsm_100;
            when ap_ST_st125_fsm_100 => 
                ap_NS_fsm <= ap_ST_st126_fsm_101;
            when ap_ST_st126_fsm_101 => 
                ap_NS_fsm <= ap_ST_st127_fsm_102;
            when ap_ST_st127_fsm_102 => 
                ap_NS_fsm <= ap_ST_st128_fsm_103;
            when ap_ST_st128_fsm_103 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_pp12_stg0_fsm_104;
                else
                    ap_NS_fsm <= ap_ST_st128_fsm_103;
                end if;
            when ap_ST_pp12_stg0_fsm_104 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp12_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp12_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp12_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))) and not((ap_const_lv1_0 = exitcond13_fu_1443_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp12_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp12_stg0_fsm_104;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp12_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp12_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp12_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2))) and not((ap_const_lv1_0 = exitcond13_fu_1443_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp12_it1))))) then
                    ap_NS_fsm <= ap_ST_st132_fsm_105;
                else
                    ap_NS_fsm <= ap_ST_pp12_stg0_fsm_104;
                end if;
            when ap_ST_st132_fsm_105 => 
                ap_NS_fsm <= ap_ST_st133_fsm_106;
            when ap_ST_st133_fsm_106 => 
                ap_NS_fsm <= ap_ST_st134_fsm_107;
            when ap_ST_st134_fsm_107 => 
                ap_NS_fsm <= ap_ST_st135_fsm_108;
            when ap_ST_st135_fsm_108 => 
                ap_NS_fsm <= ap_ST_st136_fsm_109;
            when ap_ST_st136_fsm_109 => 
                if (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) then
                    ap_NS_fsm <= ap_ST_pp13_stg0_fsm_110;
                else
                    ap_NS_fsm <= ap_ST_st136_fsm_109;
                end if;
            when ap_ST_pp13_stg0_fsm_110 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp13_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp13_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp13_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))) and not((ap_const_lv1_0 = exitcond14_fu_1474_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp13_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp13_stg0_fsm_110;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp13_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp13_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp13_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))) and not((ap_const_lv1_0 = exitcond14_fu_1474_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp13_it1))))) then
                    ap_NS_fsm <= ap_ST_st140_fsm_111;
                else
                    ap_NS_fsm <= ap_ST_pp13_stg0_fsm_110;
                end if;
            when ap_ST_st140_fsm_111 => 
                ap_NS_fsm <= ap_ST_st141_fsm_112;
            when ap_ST_st141_fsm_112 => 
                ap_NS_fsm <= ap_ST_st142_fsm_113;
            when ap_ST_st142_fsm_113 => 
                ap_NS_fsm <= ap_ST_st143_fsm_114;
            when ap_ST_st143_fsm_114 => 
                ap_NS_fsm <= ap_ST_st144_fsm_115;
            when ap_ST_st144_fsm_115 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_pp14_stg0_fsm_116;
                else
                    ap_NS_fsm <= ap_ST_st144_fsm_115;
                end if;
            when ap_ST_pp14_stg0_fsm_116 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp14_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp14_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp14_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))) and not((ap_const_lv1_0 = exitcond15_fu_1499_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp14_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp14_stg0_fsm_116;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp14_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp14_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp14_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2))) and not((ap_const_lv1_0 = exitcond15_fu_1499_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp14_it1))))) then
                    ap_NS_fsm <= ap_ST_st148_fsm_117;
                else
                    ap_NS_fsm <= ap_ST_pp14_stg0_fsm_116;
                end if;
            when ap_ST_st148_fsm_117 => 
                ap_NS_fsm <= ap_ST_st149_fsm_118;
            when ap_ST_st149_fsm_118 => 
                ap_NS_fsm <= ap_ST_st150_fsm_119;
            when ap_ST_st150_fsm_119 => 
                ap_NS_fsm <= ap_ST_st151_fsm_120;
            when ap_ST_st151_fsm_120 => 
                ap_NS_fsm <= ap_ST_st152_fsm_121;
            when ap_ST_st152_fsm_121 => 
                if (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) then
                    ap_NS_fsm <= ap_ST_pp15_stg0_fsm_122;
                else
                    ap_NS_fsm <= ap_ST_st152_fsm_121;
                end if;
            when ap_ST_pp15_stg0_fsm_122 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp15_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp15_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp15_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))) and not((ap_const_lv1_0 = exitcond16_fu_1530_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp15_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp15_stg0_fsm_122;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp15_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp15_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp15_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))) and not((ap_const_lv1_0 = exitcond16_fu_1530_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp15_it1))))) then
                    ap_NS_fsm <= ap_ST_st156_fsm_123;
                else
                    ap_NS_fsm <= ap_ST_pp15_stg0_fsm_122;
                end if;
            when ap_ST_st156_fsm_123 => 
                ap_NS_fsm <= ap_ST_st157_fsm_124;
            when ap_ST_st157_fsm_124 => 
                ap_NS_fsm <= ap_ST_st158_fsm_125;
            when ap_ST_st158_fsm_125 => 
                ap_NS_fsm <= ap_ST_st159_fsm_126;
            when ap_ST_st159_fsm_126 => 
                ap_NS_fsm <= ap_ST_st160_fsm_127;
            when ap_ST_st160_fsm_127 => 
                if (not((m_axi_frame_out_BVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st160_fsm_127;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st7_fsm_6, tmp_54_fu_785_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_54_fu_785_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, tmp_54_fu_785_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_54_fu_785_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1007 assign process. --
    ap_sig_bdd_1007_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1007 <= (ap_const_lv1_1 = ap_CS_fsm(117 downto 117));
    end process;


    -- ap_sig_bdd_1016 assign process. --
    ap_sig_bdd_1016_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1016 <= (ap_const_lv1_1 = ap_CS_fsm(122 downto 122));
    end process;


    -- ap_sig_bdd_1050 assign process. --
    ap_sig_bdd_1050_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1050 <= (ap_const_lv1_1 = ap_CS_fsm(123 downto 123));
    end process;


    -- ap_sig_bdd_1057 assign process. --
    ap_sig_bdd_1057_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1057 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_1069 assign process. --
    ap_sig_bdd_1069_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1069 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    -- ap_sig_bdd_1081 assign process. --
    ap_sig_bdd_1081_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1081 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    -- ap_sig_bdd_1093 assign process. --
    ap_sig_bdd_1093_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1093 <= (ap_const_lv1_1 = ap_CS_fsm(40 downto 40));
    end process;


    -- ap_sig_bdd_1105 assign process. --
    ap_sig_bdd_1105_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1105 <= (ap_const_lv1_1 = ap_CS_fsm(49 downto 49));
    end process;


    -- ap_sig_bdd_1117 assign process. --
    ap_sig_bdd_1117_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1117 <= (ap_const_lv1_1 = ap_CS_fsm(58 downto 58));
    end process;


    -- ap_sig_bdd_1129 assign process. --
    ap_sig_bdd_1129_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1129 <= (ap_const_lv1_1 = ap_CS_fsm(67 downto 67));
    end process;


    -- ap_sig_bdd_1141 assign process. --
    ap_sig_bdd_1141_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1141 <= (ap_const_lv1_1 = ap_CS_fsm(76 downto 76));
    end process;


    -- ap_sig_bdd_1153 assign process. --
    ap_sig_bdd_1153_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1153 <= (ap_const_lv1_1 = ap_CS_fsm(79 downto 79));
    end process;


    -- ap_sig_bdd_1177 assign process. --
    ap_sig_bdd_1177_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1177 <= (ap_const_lv1_1 = ap_CS_fsm(85 downto 85));
    end process;


    -- ap_sig_bdd_1193 assign process. --
    ap_sig_bdd_1193_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1193 <= (ap_const_lv1_1 = ap_CS_fsm(91 downto 91));
    end process;


    -- ap_sig_bdd_1207 assign process. --
    ap_sig_bdd_1207_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1207 <= (ap_const_lv1_1 = ap_CS_fsm(97 downto 97));
    end process;


    -- ap_sig_bdd_1218 assign process. --
    ap_sig_bdd_1218_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1218 <= (ap_const_lv1_1 = ap_CS_fsm(103 downto 103));
    end process;


    -- ap_sig_bdd_1229 assign process. --
    ap_sig_bdd_1229_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1229 <= (ap_const_lv1_1 = ap_CS_fsm(109 downto 109));
    end process;


    -- ap_sig_bdd_1240 assign process. --
    ap_sig_bdd_1240_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1240 <= (ap_const_lv1_1 = ap_CS_fsm(115 downto 115));
    end process;


    -- ap_sig_bdd_1251 assign process. --
    ap_sig_bdd_1251_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1251 <= (ap_const_lv1_1 = ap_CS_fsm(121 downto 121));
    end process;


    -- ap_sig_bdd_147 assign process. --
    ap_sig_bdd_147_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_147 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_1486 assign process. --
    ap_sig_bdd_1486_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1486 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_1489 assign process. --
    ap_sig_bdd_1489_assign_proc : process(init, m_axi_bgmodel_BVALID)
    begin
                ap_sig_bdd_1489 <= (not((ap_const_lv1_0 = init)) and (m_axi_bgmodel_BVALID = ap_const_logic_0));
    end process;


    -- ap_sig_bdd_1502 assign process. --
    ap_sig_bdd_1502_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1502 <= (ap_const_lv1_1 = ap_CS_fsm(127 downto 127));
    end process;


    -- ap_sig_bdd_1547 assign process. --
    ap_sig_bdd_1547_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1547 <= (ap_const_lv1_1 = ap_CS_fsm(78 downto 78));
    end process;


    -- ap_sig_bdd_1622 assign process. --
    ap_sig_bdd_1622_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, init, ap_sig_bdd_502)
    begin
                ap_sig_bdd_1622 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not(ap_sig_bdd_502));
    end process;


    -- ap_sig_bdd_1633 assign process. --
    ap_sig_bdd_1633_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_773_p2)
    begin
                ap_sig_bdd_1633 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_773_p2));
    end process;


    -- ap_sig_bdd_1662 assign process. --
    ap_sig_bdd_1662_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_ap_done, grp_bgsub_process_fu_697_ap_done, grp_bgsub_process_fu_706_ap_done, grp_bgsub_process_fu_715_ap_done)
    begin
                ap_sig_bdd_1662 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79) and not(((ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done))));
    end process;


    -- ap_sig_bdd_1668 assign process. --
    ap_sig_bdd_1668_assign_proc : process(ap_reg_ppstg_exitcond3_reg_1783_pp8_it1, ap_reg_ppiten_pp8_it2)
    begin
                ap_sig_bdd_1668 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2));
    end process;


    -- ap_sig_bdd_1677 assign process. --
    ap_sig_bdd_1677_assign_proc : process(m_axi_frame_out_BVALID, ap_sig_cseq_ST_st112_fsm_91)
    begin
                ap_sig_bdd_1677 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not((m_axi_frame_out_BVALID = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_1684 assign process. --
    ap_sig_bdd_1684_assign_proc : process(ap_reg_ppstg_exitcond11_reg_1826_pp10_it1, ap_reg_ppiten_pp10_it2)
    begin
                ap_sig_bdd_1684 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2));
    end process;


    -- ap_sig_bdd_1693 assign process. --
    ap_sig_bdd_1693_assign_proc : process(m_axi_frame_out_BVALID, ap_sig_cseq_ST_st128_fsm_103)
    begin
                ap_sig_bdd_1693 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103) and not((m_axi_frame_out_BVALID = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_1700 assign process. --
    ap_sig_bdd_1700_assign_proc : process(ap_reg_ppstg_exitcond13_reg_1869_pp12_it1, ap_reg_ppiten_pp12_it2)
    begin
                ap_sig_bdd_1700 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2));
    end process;


    -- ap_sig_bdd_1709 assign process. --
    ap_sig_bdd_1709_assign_proc : process(m_axi_frame_out_BVALID, ap_sig_cseq_ST_st144_fsm_115)
    begin
                ap_sig_bdd_1709 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115) and not((m_axi_frame_out_BVALID = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_1716 assign process. --
    ap_sig_bdd_1716_assign_proc : process(ap_reg_ppstg_exitcond15_reg_1912_pp14_it1, ap_reg_ppiten_pp14_it2)
    begin
                ap_sig_bdd_1716 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2));
    end process;


    -- ap_sig_bdd_1732 assign process. --
    ap_sig_bdd_1732_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1732 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_1747 assign process. --
    ap_sig_bdd_1747_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1747 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    -- ap_sig_bdd_1760 assign process. --
    ap_sig_bdd_1760_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1760 <= (ap_const_lv1_1 = ap_CS_fsm(43 downto 43));
    end process;


    -- ap_sig_bdd_1773 assign process. --
    ap_sig_bdd_1773_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1773 <= (ap_const_lv1_1 = ap_CS_fsm(61 downto 61));
    end process;


    -- ap_sig_bdd_1792 assign process. --
    ap_sig_bdd_1792_assign_proc : process(ap_reg_ppstg_exitcond10_reg_1807_pp9_it1, ap_reg_ppiten_pp9_it2)
    begin
                ap_sig_bdd_1792 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2));
    end process;


    -- ap_sig_bdd_1805 assign process. --
    ap_sig_bdd_1805_assign_proc : process(ap_reg_ppstg_exitcond12_reg_1850_pp11_it1, ap_reg_ppiten_pp11_it2)
    begin
                ap_sig_bdd_1805 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2));
    end process;


    -- ap_sig_bdd_1820 assign process. --
    ap_sig_bdd_1820_assign_proc : process(ap_reg_ppstg_exitcond14_reg_1893_pp13_it1, ap_reg_ppiten_pp13_it2)
    begin
                ap_sig_bdd_1820 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2));
    end process;


    -- ap_sig_bdd_1835 assign process. --
    ap_sig_bdd_1835_assign_proc : process(ap_reg_ppstg_exitcond16_reg_1936_pp15_it1, ap_reg_ppiten_pp15_it2)
    begin
                ap_sig_bdd_1835 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2));
    end process;


    -- ap_sig_bdd_268 assign process. --
    ap_sig_bdd_268_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_268 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_2768 assign process. --
    ap_sig_bdd_2768_assign_proc : process(m_axi_bgmodel_BVALID, ap_reg_ioackin_m_axi_frame_out_AWREADY)
    begin
                ap_sig_bdd_2768 <= (not((m_axi_bgmodel_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY));
    end process;


    -- ap_sig_bdd_277 assign process. --
    ap_sig_bdd_277_assign_proc : process(m_axi_frame_out_RVALID, exitcond1_reg_1616)
    begin
                ap_sig_bdd_277 <= ((m_axi_frame_out_RVALID = ap_const_logic_0) and (exitcond1_reg_1616 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_293 assign process. --
    ap_sig_bdd_293_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_293 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    -- ap_sig_bdd_301 assign process. --
    ap_sig_bdd_301_assign_proc : process(m_axi_bgmodel_RVALID, exitcond4_reg_1636)
    begin
                ap_sig_bdd_301 <= ((m_axi_bgmodel_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond4_reg_1636));
    end process;


    -- ap_sig_bdd_317 assign process. --
    ap_sig_bdd_317_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_317 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    -- ap_sig_bdd_324 assign process. --
    ap_sig_bdd_324_assign_proc : process(m_axi_frame_out_RVALID, exitcond5_reg_1662)
    begin
                ap_sig_bdd_324 <= ((m_axi_frame_out_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond5_reg_1662));
    end process;


    -- ap_sig_bdd_340 assign process. --
    ap_sig_bdd_340_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_340 <= (ap_const_lv1_1 = ap_CS_fsm(41 downto 41));
    end process;


    -- ap_sig_bdd_347 assign process. --
    ap_sig_bdd_347_assign_proc : process(m_axi_bgmodel_RVALID, exitcond6_reg_1682)
    begin
                ap_sig_bdd_347 <= ((m_axi_bgmodel_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond6_reg_1682));
    end process;


    -- ap_sig_bdd_363 assign process. --
    ap_sig_bdd_363_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_363 <= (ap_const_lv1_1 = ap_CS_fsm(50 downto 50));
    end process;


    -- ap_sig_bdd_370 assign process. --
    ap_sig_bdd_370_assign_proc : process(m_axi_frame_out_RVALID, exitcond7_reg_1708)
    begin
                ap_sig_bdd_370 <= ((m_axi_frame_out_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond7_reg_1708));
    end process;


    -- ap_sig_bdd_386 assign process. --
    ap_sig_bdd_386_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_386 <= (ap_const_lv1_1 = ap_CS_fsm(59 downto 59));
    end process;


    -- ap_sig_bdd_393 assign process. --
    ap_sig_bdd_393_assign_proc : process(m_axi_bgmodel_RVALID, exitcond8_reg_1728)
    begin
                ap_sig_bdd_393 <= ((m_axi_bgmodel_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond8_reg_1728));
    end process;


    -- ap_sig_bdd_409 assign process. --
    ap_sig_bdd_409_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_409 <= (ap_const_lv1_1 = ap_CS_fsm(68 downto 68));
    end process;


    -- ap_sig_bdd_416 assign process. --
    ap_sig_bdd_416_assign_proc : process(m_axi_frame_out_RVALID, exitcond9_reg_1754)
    begin
                ap_sig_bdd_416 <= ((m_axi_frame_out_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond9_reg_1754));
    end process;


    -- ap_sig_bdd_432 assign process. --
    ap_sig_bdd_432_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_432 <= (ap_const_lv1_1 = ap_CS_fsm(77 downto 77));
    end process;


    -- ap_sig_bdd_439 assign process. --
    ap_sig_bdd_439_assign_proc : process(m_axi_bgmodel_RVALID, exitcond2_reg_1774)
    begin
                ap_sig_bdd_439 <= ((m_axi_bgmodel_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond2_reg_1774));
    end process;


    -- ap_sig_bdd_502 assign process. --
    ap_sig_bdd_502_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_502 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_527 assign process. --
    ap_sig_bdd_527_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_527 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_543 assign process. --
    ap_sig_bdd_543_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_543 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_565 assign process. --
    ap_sig_bdd_565_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_565 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_574 assign process. --
    ap_sig_bdd_574_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_574 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_bdd_594 assign process. --
    ap_sig_bdd_594_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_594 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    -- ap_sig_bdd_614 assign process. --
    ap_sig_bdd_614_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_614 <= (ap_const_lv1_1 = ap_CS_fsm(33 downto 33));
    end process;


    -- ap_sig_bdd_623 assign process. --
    ap_sig_bdd_623_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_623 <= (ap_const_lv1_1 = ap_CS_fsm(34 downto 34));
    end process;


    -- ap_sig_bdd_640 assign process. --
    ap_sig_bdd_640_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_640 <= (ap_const_lv1_1 = ap_CS_fsm(42 downto 42));
    end process;


    -- ap_sig_bdd_660 assign process. --
    ap_sig_bdd_660_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_660 <= (ap_const_lv1_1 = ap_CS_fsm(51 downto 51));
    end process;


    -- ap_sig_bdd_669 assign process. --
    ap_sig_bdd_669_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_669 <= (ap_const_lv1_1 = ap_CS_fsm(52 downto 52));
    end process;


    -- ap_sig_bdd_686 assign process. --
    ap_sig_bdd_686_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_686 <= (ap_const_lv1_1 = ap_CS_fsm(60 downto 60));
    end process;


    -- ap_sig_bdd_706 assign process. --
    ap_sig_bdd_706_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_706 <= (ap_const_lv1_1 = ap_CS_fsm(69 downto 69));
    end process;


    -- ap_sig_bdd_715 assign process. --
    ap_sig_bdd_715_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_715 <= (ap_const_lv1_1 = ap_CS_fsm(70 downto 70));
    end process;


    -- ap_sig_bdd_732 assign process. --
    ap_sig_bdd_732_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_732 <= (ap_const_lv1_1 = ap_CS_fsm(80 downto 80));
    end process;


    -- ap_sig_bdd_768 assign process. --
    ap_sig_bdd_768_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_768 <= (ap_const_lv1_1 = ap_CS_fsm(81 downto 81));
    end process;


    -- ap_sig_bdd_777 assign process. --
    ap_sig_bdd_777_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_777 <= (ap_const_lv1_1 = ap_CS_fsm(86 downto 86));
    end process;


    -- ap_sig_bdd_813 assign process. --
    ap_sig_bdd_813_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_813 <= (ap_const_lv1_1 = ap_CS_fsm(92 downto 92));
    end process;


    -- ap_sig_bdd_849 assign process. --
    ap_sig_bdd_849_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_849 <= (ap_const_lv1_1 = ap_CS_fsm(93 downto 93));
    end process;


    -- ap_sig_bdd_858 assign process. --
    ap_sig_bdd_858_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_858 <= (ap_const_lv1_1 = ap_CS_fsm(98 downto 98));
    end process;


    -- ap_sig_bdd_892 assign process. --
    ap_sig_bdd_892_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_892 <= (ap_const_lv1_1 = ap_CS_fsm(104 downto 104));
    end process;


    -- ap_sig_bdd_928 assign process. --
    ap_sig_bdd_928_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_928 <= (ap_const_lv1_1 = ap_CS_fsm(105 downto 105));
    end process;


    -- ap_sig_bdd_937 assign process. --
    ap_sig_bdd_937_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_937 <= (ap_const_lv1_1 = ap_CS_fsm(110 downto 110));
    end process;


    -- ap_sig_bdd_971 assign process. --
    ap_sig_bdd_971_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_971 <= (ap_const_lv1_1 = ap_CS_fsm(116 downto 116));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_14 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_14_assign_proc : process(ap_sig_bdd_268)
    begin
        if (ap_sig_bdd_268) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp10_stg0_fsm_92 assign process. --
    ap_sig_cseq_ST_pp10_stg0_fsm_92_assign_proc : process(ap_sig_bdd_813)
    begin
        if (ap_sig_bdd_813) then 
            ap_sig_cseq_ST_pp10_stg0_fsm_92 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp10_stg0_fsm_92 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp11_stg0_fsm_98 assign process. --
    ap_sig_cseq_ST_pp11_stg0_fsm_98_assign_proc : process(ap_sig_bdd_858)
    begin
        if (ap_sig_bdd_858) then 
            ap_sig_cseq_ST_pp11_stg0_fsm_98 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp11_stg0_fsm_98 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp12_stg0_fsm_104 assign process. --
    ap_sig_cseq_ST_pp12_stg0_fsm_104_assign_proc : process(ap_sig_bdd_892)
    begin
        if (ap_sig_bdd_892) then 
            ap_sig_cseq_ST_pp12_stg0_fsm_104 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp12_stg0_fsm_104 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp13_stg0_fsm_110 assign process. --
    ap_sig_cseq_ST_pp13_stg0_fsm_110_assign_proc : process(ap_sig_bdd_937)
    begin
        if (ap_sig_bdd_937) then 
            ap_sig_cseq_ST_pp13_stg0_fsm_110 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp13_stg0_fsm_110 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp14_stg0_fsm_116 assign process. --
    ap_sig_cseq_ST_pp14_stg0_fsm_116_assign_proc : process(ap_sig_bdd_971)
    begin
        if (ap_sig_bdd_971) then 
            ap_sig_cseq_ST_pp14_stg0_fsm_116 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp14_stg0_fsm_116 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp15_stg0_fsm_122 assign process. --
    ap_sig_cseq_ST_pp15_stg0_fsm_122_assign_proc : process(ap_sig_bdd_1016)
    begin
        if (ap_sig_bdd_1016) then 
            ap_sig_cseq_ST_pp15_stg0_fsm_122 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp15_stg0_fsm_122 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_23 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_23_assign_proc : process(ap_sig_bdd_293)
    begin
        if (ap_sig_bdd_293) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg0_fsm_32 assign process. --
    ap_sig_cseq_ST_pp2_stg0_fsm_32_assign_proc : process(ap_sig_bdd_317)
    begin
        if (ap_sig_bdd_317) then 
            ap_sig_cseq_ST_pp2_stg0_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg0_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp3_stg0_fsm_41 assign process. --
    ap_sig_cseq_ST_pp3_stg0_fsm_41_assign_proc : process(ap_sig_bdd_340)
    begin
        if (ap_sig_bdd_340) then 
            ap_sig_cseq_ST_pp3_stg0_fsm_41 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp3_stg0_fsm_41 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp4_stg0_fsm_50 assign process. --
    ap_sig_cseq_ST_pp4_stg0_fsm_50_assign_proc : process(ap_sig_bdd_363)
    begin
        if (ap_sig_bdd_363) then 
            ap_sig_cseq_ST_pp4_stg0_fsm_50 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp4_stg0_fsm_50 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp5_stg0_fsm_59 assign process. --
    ap_sig_cseq_ST_pp5_stg0_fsm_59_assign_proc : process(ap_sig_bdd_386)
    begin
        if (ap_sig_bdd_386) then 
            ap_sig_cseq_ST_pp5_stg0_fsm_59 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp5_stg0_fsm_59 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp6_stg0_fsm_68 assign process. --
    ap_sig_cseq_ST_pp6_stg0_fsm_68_assign_proc : process(ap_sig_bdd_409)
    begin
        if (ap_sig_bdd_409) then 
            ap_sig_cseq_ST_pp6_stg0_fsm_68 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp6_stg0_fsm_68 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp7_stg0_fsm_77 assign process. --
    ap_sig_cseq_ST_pp7_stg0_fsm_77_assign_proc : process(ap_sig_bdd_432)
    begin
        if (ap_sig_bdd_432) then 
            ap_sig_cseq_ST_pp7_stg0_fsm_77 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp7_stg0_fsm_77 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp8_stg0_fsm_80 assign process. --
    ap_sig_cseq_ST_pp8_stg0_fsm_80_assign_proc : process(ap_sig_bdd_732)
    begin
        if (ap_sig_bdd_732) then 
            ap_sig_cseq_ST_pp8_stg0_fsm_80 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp8_stg0_fsm_80 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp9_stg0_fsm_86 assign process. --
    ap_sig_cseq_ST_pp9_stg0_fsm_86_assign_proc : process(ap_sig_bdd_777)
    begin
        if (ap_sig_bdd_777) then 
            ap_sig_cseq_ST_pp9_stg0_fsm_86 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp9_stg0_fsm_86 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st100_fsm_81 assign process. --
    ap_sig_cseq_ST_st100_fsm_81_assign_proc : process(ap_sig_bdd_768)
    begin
        if (ap_sig_bdd_768) then 
            ap_sig_cseq_ST_st100_fsm_81 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st100_fsm_81 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st104_fsm_85 assign process. --
    ap_sig_cseq_ST_st104_fsm_85_assign_proc : process(ap_sig_bdd_1177)
    begin
        if (ap_sig_bdd_1177) then 
            ap_sig_cseq_ST_st104_fsm_85 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st104_fsm_85 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st112_fsm_91 assign process. --
    ap_sig_cseq_ST_st112_fsm_91_assign_proc : process(ap_sig_bdd_1193)
    begin
        if (ap_sig_bdd_1193) then 
            ap_sig_cseq_ST_st112_fsm_91 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st112_fsm_91 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st116_fsm_93 assign process. --
    ap_sig_cseq_ST_st116_fsm_93_assign_proc : process(ap_sig_bdd_849)
    begin
        if (ap_sig_bdd_849) then 
            ap_sig_cseq_ST_st116_fsm_93 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st116_fsm_93 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st120_fsm_97 assign process. --
    ap_sig_cseq_ST_st120_fsm_97_assign_proc : process(ap_sig_bdd_1207)
    begin
        if (ap_sig_bdd_1207) then 
            ap_sig_cseq_ST_st120_fsm_97 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st120_fsm_97 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st128_fsm_103 assign process. --
    ap_sig_cseq_ST_st128_fsm_103_assign_proc : process(ap_sig_bdd_1218)
    begin
        if (ap_sig_bdd_1218) then 
            ap_sig_cseq_ST_st128_fsm_103 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st128_fsm_103 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st132_fsm_105 assign process. --
    ap_sig_cseq_ST_st132_fsm_105_assign_proc : process(ap_sig_bdd_928)
    begin
        if (ap_sig_bdd_928) then 
            ap_sig_cseq_ST_st132_fsm_105 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st132_fsm_105 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st136_fsm_109 assign process. --
    ap_sig_cseq_ST_st136_fsm_109_assign_proc : process(ap_sig_bdd_1229)
    begin
        if (ap_sig_bdd_1229) then 
            ap_sig_cseq_ST_st136_fsm_109 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st136_fsm_109 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st144_fsm_115 assign process. --
    ap_sig_cseq_ST_st144_fsm_115_assign_proc : process(ap_sig_bdd_1240)
    begin
        if (ap_sig_bdd_1240) then 
            ap_sig_cseq_ST_st144_fsm_115 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st144_fsm_115 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st148_fsm_117 assign process. --
    ap_sig_cseq_ST_st148_fsm_117_assign_proc : process(ap_sig_bdd_1007)
    begin
        if (ap_sig_bdd_1007) then 
            ap_sig_cseq_ST_st148_fsm_117 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st148_fsm_117 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_13 assign process. --
    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_bdd_1057)
    begin
        if (ap_sig_bdd_1057) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st152_fsm_121 assign process. --
    ap_sig_cseq_ST_st152_fsm_121_assign_proc : process(ap_sig_bdd_1251)
    begin
        if (ap_sig_bdd_1251) then 
            ap_sig_cseq_ST_st152_fsm_121 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st152_fsm_121 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st156_fsm_123 assign process. --
    ap_sig_cseq_ST_st156_fsm_123_assign_proc : process(ap_sig_bdd_1050)
    begin
        if (ap_sig_bdd_1050) then 
            ap_sig_cseq_ST_st156_fsm_123 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st156_fsm_123 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st160_fsm_127 assign process. --
    ap_sig_cseq_ST_st160_fsm_127_assign_proc : process(ap_sig_bdd_1502)
    begin
        if (ap_sig_bdd_1502) then 
            ap_sig_cseq_ST_st160_fsm_127 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st160_fsm_127 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st18_fsm_15 assign process. --
    ap_sig_cseq_ST_st18_fsm_15_assign_proc : process(ap_sig_bdd_565)
    begin
        if (ap_sig_bdd_565) then 
            ap_sig_cseq_ST_st18_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st19_fsm_16 assign process. --
    ap_sig_cseq_ST_st19_fsm_16_assign_proc : process(ap_sig_bdd_574)
    begin
        if (ap_sig_bdd_574) then 
            ap_sig_cseq_ST_st19_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_147)
    begin
        if (ap_sig_bdd_147) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st25_fsm_22 assign process. --
    ap_sig_cseq_ST_st25_fsm_22_assign_proc : process(ap_sig_bdd_1069)
    begin
        if (ap_sig_bdd_1069) then 
            ap_sig_cseq_ST_st25_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st29_fsm_24 assign process. --
    ap_sig_cseq_ST_st29_fsm_24_assign_proc : process(ap_sig_bdd_594)
    begin
        if (ap_sig_bdd_594) then 
            ap_sig_cseq_ST_st29_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_527)
    begin
        if (ap_sig_bdd_527) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st30_fsm_25 assign process. --
    ap_sig_cseq_ST_st30_fsm_25_assign_proc : process(ap_sig_bdd_1747)
    begin
        if (ap_sig_bdd_1747) then 
            ap_sig_cseq_ST_st30_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st30_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st36_fsm_31 assign process. --
    ap_sig_cseq_ST_st36_fsm_31_assign_proc : process(ap_sig_bdd_1081)
    begin
        if (ap_sig_bdd_1081) then 
            ap_sig_cseq_ST_st36_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st36_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st40_fsm_33 assign process. --
    ap_sig_cseq_ST_st40_fsm_33_assign_proc : process(ap_sig_bdd_614)
    begin
        if (ap_sig_bdd_614) then 
            ap_sig_cseq_ST_st40_fsm_33 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st40_fsm_33 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st41_fsm_34 assign process. --
    ap_sig_cseq_ST_st41_fsm_34_assign_proc : process(ap_sig_bdd_623)
    begin
        if (ap_sig_bdd_623) then 
            ap_sig_cseq_ST_st41_fsm_34 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st41_fsm_34 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st47_fsm_40 assign process. --
    ap_sig_cseq_ST_st47_fsm_40_assign_proc : process(ap_sig_bdd_1093)
    begin
        if (ap_sig_bdd_1093) then 
            ap_sig_cseq_ST_st47_fsm_40 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st47_fsm_40 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st51_fsm_42 assign process. --
    ap_sig_cseq_ST_st51_fsm_42_assign_proc : process(ap_sig_bdd_640)
    begin
        if (ap_sig_bdd_640) then 
            ap_sig_cseq_ST_st51_fsm_42 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st51_fsm_42 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st52_fsm_43 assign process. --
    ap_sig_cseq_ST_st52_fsm_43_assign_proc : process(ap_sig_bdd_1760)
    begin
        if (ap_sig_bdd_1760) then 
            ap_sig_cseq_ST_st52_fsm_43 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st52_fsm_43 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st58_fsm_49 assign process. --
    ap_sig_cseq_ST_st58_fsm_49_assign_proc : process(ap_sig_bdd_1105)
    begin
        if (ap_sig_bdd_1105) then 
            ap_sig_cseq_ST_st58_fsm_49 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st58_fsm_49 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st62_fsm_51 assign process. --
    ap_sig_cseq_ST_st62_fsm_51_assign_proc : process(ap_sig_bdd_660)
    begin
        if (ap_sig_bdd_660) then 
            ap_sig_cseq_ST_st62_fsm_51 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st62_fsm_51 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st63_fsm_52 assign process. --
    ap_sig_cseq_ST_st63_fsm_52_assign_proc : process(ap_sig_bdd_669)
    begin
        if (ap_sig_bdd_669) then 
            ap_sig_cseq_ST_st63_fsm_52 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st63_fsm_52 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st69_fsm_58 assign process. --
    ap_sig_cseq_ST_st69_fsm_58_assign_proc : process(ap_sig_bdd_1117)
    begin
        if (ap_sig_bdd_1117) then 
            ap_sig_cseq_ST_st69_fsm_58 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st69_fsm_58 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_1486)
    begin
        if (ap_sig_bdd_1486) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st73_fsm_60 assign process. --
    ap_sig_cseq_ST_st73_fsm_60_assign_proc : process(ap_sig_bdd_686)
    begin
        if (ap_sig_bdd_686) then 
            ap_sig_cseq_ST_st73_fsm_60 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st73_fsm_60 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st74_fsm_61 assign process. --
    ap_sig_cseq_ST_st74_fsm_61_assign_proc : process(ap_sig_bdd_1773)
    begin
        if (ap_sig_bdd_1773) then 
            ap_sig_cseq_ST_st74_fsm_61 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st74_fsm_61 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_543)
    begin
        if (ap_sig_bdd_543) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st80_fsm_67 assign process. --
    ap_sig_cseq_ST_st80_fsm_67_assign_proc : process(ap_sig_bdd_1129)
    begin
        if (ap_sig_bdd_1129) then 
            ap_sig_cseq_ST_st80_fsm_67 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st80_fsm_67 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st84_fsm_69 assign process. --
    ap_sig_cseq_ST_st84_fsm_69_assign_proc : process(ap_sig_bdd_706)
    begin
        if (ap_sig_bdd_706) then 
            ap_sig_cseq_ST_st84_fsm_69 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st84_fsm_69 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st85_fsm_70 assign process. --
    ap_sig_cseq_ST_st85_fsm_70_assign_proc : process(ap_sig_bdd_715)
    begin
        if (ap_sig_bdd_715) then 
            ap_sig_cseq_ST_st85_fsm_70 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st85_fsm_70 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_1732)
    begin
        if (ap_sig_bdd_1732) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st91_fsm_76 assign process. --
    ap_sig_cseq_ST_st91_fsm_76_assign_proc : process(ap_sig_bdd_1141)
    begin
        if (ap_sig_bdd_1141) then 
            ap_sig_cseq_ST_st91_fsm_76 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st91_fsm_76 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st95_fsm_78 assign process. --
    ap_sig_cseq_ST_st95_fsm_78_assign_proc : process(ap_sig_bdd_1547)
    begin
        if (ap_sig_bdd_1547) then 
            ap_sig_cseq_ST_st95_fsm_78 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st95_fsm_78 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st96_fsm_79 assign process. --
    ap_sig_cseq_ST_st96_fsm_79_assign_proc : process(ap_sig_bdd_1153)
    begin
        if (ap_sig_bdd_1153) then 
            ap_sig_cseq_ST_st96_fsm_79 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st96_fsm_79 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_bgmodel_ARREADY assign process. --
    ap_sig_ioackin_m_axi_bgmodel_ARREADY_assign_proc : process(m_axi_bgmodel_ARREADY, ap_reg_ioackin_m_axi_bgmodel_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)) then 
            ap_sig_ioackin_m_axi_bgmodel_ARREADY <= m_axi_bgmodel_ARREADY;
        else 
            ap_sig_ioackin_m_axi_bgmodel_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_bgmodel_AWREADY assign process. --
    ap_sig_ioackin_m_axi_bgmodel_AWREADY_assign_proc : process(m_axi_bgmodel_AWREADY, ap_reg_ioackin_m_axi_bgmodel_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) then 
            ap_sig_ioackin_m_axi_bgmodel_AWREADY <= m_axi_bgmodel_AWREADY;
        else 
            ap_sig_ioackin_m_axi_bgmodel_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_bgmodel_WREADY assign process. --
    ap_sig_ioackin_m_axi_bgmodel_WREADY_assign_proc : process(m_axi_bgmodel_WREADY, ap_reg_ioackin_m_axi_bgmodel_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) then 
            ap_sig_ioackin_m_axi_bgmodel_WREADY <= m_axi_bgmodel_WREADY;
        else 
            ap_sig_ioackin_m_axi_bgmodel_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_frame_out_ARREADY assign process. --
    ap_sig_ioackin_m_axi_frame_out_ARREADY_assign_proc : process(m_axi_frame_out_ARREADY, ap_reg_ioackin_m_axi_frame_out_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY)) then 
            ap_sig_ioackin_m_axi_frame_out_ARREADY <= m_axi_frame_out_ARREADY;
        else 
            ap_sig_ioackin_m_axi_frame_out_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_frame_out_AWREADY assign process. --
    ap_sig_ioackin_m_axi_frame_out_AWREADY_assign_proc : process(m_axi_frame_out_AWREADY, ap_reg_ioackin_m_axi_frame_out_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY)) then 
            ap_sig_ioackin_m_axi_frame_out_AWREADY <= m_axi_frame_out_AWREADY;
        else 
            ap_sig_ioackin_m_axi_frame_out_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_frame_out_WREADY assign process. --
    ap_sig_ioackin_m_axi_frame_out_WREADY_assign_proc : process(m_axi_frame_out_WREADY, ap_reg_ioackin_m_axi_frame_out_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)) then 
            ap_sig_ioackin_m_axi_frame_out_WREADY <= m_axi_frame_out_WREADY;
        else 
            ap_sig_ioackin_m_axi_frame_out_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond10_fu_1362_p2 <= "1" when (indvar8_reg_611 = ap_const_lv10_280) else "0";
    exitcond11_fu_1387_p2 <= "1" when (indvar10_reg_622 = ap_const_lv13_1400) else "0";
    exitcond12_fu_1418_p2 <= "1" when (indvar11_reg_633 = ap_const_lv10_280) else "0";
    exitcond13_fu_1443_p2 <= "1" when (indvar12_reg_644 = ap_const_lv13_1400) else "0";
    exitcond14_fu_1474_p2 <= "1" when (indvar13_reg_655 = ap_const_lv10_280) else "0";
    exitcond15_fu_1499_p2 <= "1" when (indvar14_reg_666 = ap_const_lv13_1400) else "0";
    exitcond16_fu_1530_p2 <= "1" when (indvar15_reg_677 = ap_const_lv10_280) else "0";
    exitcond1_fu_840_p2 <= "1" when (indvar_phi_fu_508_p4 = ap_const_lv10_280) else "0";
    exitcond2_fu_1314_p2 <= "1" when (indvar6_phi_fu_592_p4 = ap_const_lv13_1400) else "0";
    exitcond3_fu_1331_p2 <= "1" when (indvar7_reg_600 = ap_const_lv13_1400) else "0";
    exitcond4_fu_906_p2 <= "1" when (indvar9_phi_fu_520_p4 = ap_const_lv13_1400) else "0";
    exitcond5_fu_978_p2 <= "1" when (indvar1_phi_fu_532_p4 = ap_const_lv10_280) else "0";
    exitcond6_fu_1042_p2 <= "1" when (indvar2_phi_fu_544_p4 = ap_const_lv13_1400) else "0";
    exitcond7_fu_1114_p2 <= "1" when (indvar3_phi_fu_556_p4 = ap_const_lv10_280) else "0";
    exitcond8_fu_1178_p2 <= "1" when (indvar4_phi_fu_568_p4 = ap_const_lv13_1400) else "0";
    exitcond9_fu_1250_p2 <= "1" when (indvar5_phi_fu_580_p4 = ap_const_lv10_280) else "0";
    exitcond_fu_773_p2 <= "1" when (p_reg_468 = ap_const_lv20_96000) else "0";
    extLd1_fu_1435_p3 <= 
        ap_const_lv8_FF when (part2_frame_out_q0(0) = '1') else 
        ap_const_lv8_0;
    extLd2_fu_1491_p3 <= 
        ap_const_lv8_FF when (part3_frame_out_q0(0) = '1') else 
        ap_const_lv8_0;
    extLd3_fu_1547_p3 <= 
        ap_const_lv8_FF when (part4_frame_out_q0(0) = '1') else 
        ap_const_lv8_0;
    extLd_fu_1379_p3 <= 
        ap_const_lv8_FF when (part_frame_out_q0(0) = '1') else 
        ap_const_lv8_0;
    grp_bgsub_process_fu_688_ap_start <= grp_bgsub_process_fu_688_ap_start_ap_start_reg;
    grp_bgsub_process_fu_688_bgmodel_q0 <= part_bgmodel_q0;
    grp_bgsub_process_fu_688_bgmodel_q1 <= part_bgmodel_q1;
    grp_bgsub_process_fu_688_frame_in_q0 <= part_frame_in_q0;
    grp_bgsub_process_fu_688_learningRate <= learningRate2_reg_479;
    grp_bgsub_process_fu_697_ap_start <= grp_bgsub_process_fu_697_ap_start_ap_start_reg;
    grp_bgsub_process_fu_697_bgmodel_q0 <= part2_bgmodel_q0;
    grp_bgsub_process_fu_697_bgmodel_q1 <= part2_bgmodel_q1;
    grp_bgsub_process_fu_697_frame_in_q0 <= part2_frame_in_q0;
    grp_bgsub_process_fu_697_learningRate <= learningRate2_reg_479;
    grp_bgsub_process_fu_706_ap_start <= grp_bgsub_process_fu_706_ap_start_ap_start_reg;
    grp_bgsub_process_fu_706_bgmodel_q0 <= part3_bgmodel_q0;
    grp_bgsub_process_fu_706_bgmodel_q1 <= part3_bgmodel_q1;
    grp_bgsub_process_fu_706_frame_in_q0 <= part3_frame_in_q0;
    grp_bgsub_process_fu_706_learningRate <= learningRate2_reg_479;
    grp_bgsub_process_fu_715_ap_start <= grp_bgsub_process_fu_715_ap_start_ap_start_reg;
    grp_bgsub_process_fu_715_bgmodel_q0 <= part4_bgmodel_q0;
    grp_bgsub_process_fu_715_bgmodel_q1 <= part4_bgmodel_q1;
    grp_bgsub_process_fu_715_frame_in_q0 <= part4_frame_in_q0;
    grp_bgsub_process_fu_715_learningRate <= learningRate2_reg_479;

    -- indvar1_phi_fu_532_p4 assign process. --
    indvar1_phi_fu_532_p4_assign_proc : process(indvar1_reg_528, ap_sig_cseq_ST_pp2_stg0_fsm_32, exitcond5_reg_1662, ap_reg_ppiten_pp2_it1, indvar_next2_reg_1666)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_lv1_0 = exitcond5_reg_1662) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            indvar1_phi_fu_532_p4 <= indvar_next2_reg_1666;
        else 
            indvar1_phi_fu_532_p4 <= indvar1_reg_528;
        end if; 
    end process;


    -- indvar2_phi_fu_544_p4 assign process. --
    indvar2_phi_fu_544_p4_assign_proc : process(indvar2_reg_540, ap_sig_cseq_ST_pp3_stg0_fsm_41, exitcond6_reg_1682, ap_reg_ppiten_pp3_it1, indvar_next3_reg_1686)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_lv1_0 = exitcond6_reg_1682) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) then 
            indvar2_phi_fu_544_p4 <= indvar_next3_reg_1686;
        else 
            indvar2_phi_fu_544_p4 <= indvar2_reg_540;
        end if; 
    end process;


    -- indvar3_phi_fu_556_p4 assign process. --
    indvar3_phi_fu_556_p4_assign_proc : process(indvar3_reg_552, ap_sig_cseq_ST_pp4_stg0_fsm_50, exitcond7_reg_1708, ap_reg_ppiten_pp4_it1, indvar_next4_reg_1712)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_lv1_0 = exitcond7_reg_1708) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) then 
            indvar3_phi_fu_556_p4 <= indvar_next4_reg_1712;
        else 
            indvar3_phi_fu_556_p4 <= indvar3_reg_552;
        end if; 
    end process;


    -- indvar4_phi_fu_568_p4 assign process. --
    indvar4_phi_fu_568_p4_assign_proc : process(indvar4_reg_564, ap_sig_cseq_ST_pp5_stg0_fsm_59, exitcond8_reg_1728, ap_reg_ppiten_pp5_it1, indvar_next5_reg_1732)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_lv1_0 = exitcond8_reg_1728) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) then 
            indvar4_phi_fu_568_p4 <= indvar_next5_reg_1732;
        else 
            indvar4_phi_fu_568_p4 <= indvar4_reg_564;
        end if; 
    end process;


    -- indvar5_phi_fu_580_p4 assign process. --
    indvar5_phi_fu_580_p4_assign_proc : process(indvar5_reg_576, ap_sig_cseq_ST_pp6_stg0_fsm_68, exitcond9_reg_1754, ap_reg_ppiten_pp6_it1, indvar_next6_reg_1758)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_68) and (ap_const_lv1_0 = exitcond9_reg_1754) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) then 
            indvar5_phi_fu_580_p4 <= indvar_next6_reg_1758;
        else 
            indvar5_phi_fu_580_p4 <= indvar5_reg_576;
        end if; 
    end process;


    -- indvar6_phi_fu_592_p4 assign process. --
    indvar6_phi_fu_592_p4_assign_proc : process(indvar6_reg_588, ap_sig_cseq_ST_pp7_stg0_fsm_77, exitcond2_reg_1774, ap_reg_ppiten_pp7_it1, indvar_next7_reg_1778)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_77) and (ap_const_lv1_0 = exitcond2_reg_1774) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) then 
            indvar6_phi_fu_592_p4 <= indvar_next7_reg_1778;
        else 
            indvar6_phi_fu_592_p4 <= indvar6_reg_588;
        end if; 
    end process;


    -- indvar9_phi_fu_520_p4 assign process. --
    indvar9_phi_fu_520_p4_assign_proc : process(indvar9_reg_516, ap_sig_cseq_ST_pp1_stg0_fsm_23, exitcond4_reg_1636, ap_reg_ppiten_pp1_it1, indvar_next1_reg_1640)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_lv1_0 = exitcond4_reg_1636) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            indvar9_phi_fu_520_p4 <= indvar_next1_reg_1640;
        else 
            indvar9_phi_fu_520_p4 <= indvar9_reg_516;
        end if; 
    end process;

    indvar_next10_fu_1393_p2 <= std_logic_vector(unsigned(indvar10_reg_622) + unsigned(ap_const_lv13_1));
    indvar_next11_fu_1424_p2 <= std_logic_vector(unsigned(indvar11_reg_633) + unsigned(ap_const_lv10_1));
    indvar_next12_fu_1449_p2 <= std_logic_vector(unsigned(indvar12_reg_644) + unsigned(ap_const_lv13_1));
    indvar_next13_fu_1480_p2 <= std_logic_vector(unsigned(indvar13_reg_655) + unsigned(ap_const_lv10_1));
    indvar_next14_fu_1505_p2 <= std_logic_vector(unsigned(indvar14_reg_666) + unsigned(ap_const_lv13_1));
    indvar_next15_fu_1536_p2 <= std_logic_vector(unsigned(indvar15_reg_677) + unsigned(ap_const_lv10_1));
    indvar_next1_fu_912_p2 <= std_logic_vector(unsigned(indvar9_phi_fu_520_p4) + unsigned(ap_const_lv13_1));
    indvar_next2_fu_984_p2 <= std_logic_vector(unsigned(indvar1_phi_fu_532_p4) + unsigned(ap_const_lv10_1));
    indvar_next3_fu_1048_p2 <= std_logic_vector(unsigned(indvar2_phi_fu_544_p4) + unsigned(ap_const_lv13_1));
    indvar_next4_fu_1120_p2 <= std_logic_vector(unsigned(indvar3_phi_fu_556_p4) + unsigned(ap_const_lv10_1));
    indvar_next5_fu_1184_p2 <= std_logic_vector(unsigned(indvar4_phi_fu_568_p4) + unsigned(ap_const_lv13_1));
    indvar_next6_fu_1256_p2 <= std_logic_vector(unsigned(indvar5_phi_fu_580_p4) + unsigned(ap_const_lv10_1));
    indvar_next7_fu_1320_p2 <= std_logic_vector(unsigned(indvar6_phi_fu_592_p4) + unsigned(ap_const_lv13_1));
    indvar_next8_fu_1337_p2 <= std_logic_vector(unsigned(indvar7_reg_600) + unsigned(ap_const_lv13_1));
    indvar_next9_fu_1368_p2 <= std_logic_vector(unsigned(indvar8_reg_611) + unsigned(ap_const_lv10_1));
    indvar_next_fu_846_p2 <= std_logic_vector(unsigned(indvar_phi_fu_508_p4) + unsigned(ap_const_lv10_1));

    -- indvar_phi_fu_508_p4 assign process. --
    indvar_phi_fu_508_p4_assign_proc : process(indvar_reg_504, ap_sig_cseq_ST_pp0_stg0_fsm_14, exitcond1_reg_1616, ap_reg_ppiten_pp0_it1, indvar_next_reg_1620)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (exitcond1_reg_1616 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            indvar_phi_fu_508_p4 <= indvar_next_reg_1620;
        else 
            indvar_phi_fu_508_p4 <= indvar_reg_504;
        end if; 
    end process;


    -- m_axi_bgmodel_ARADDR assign process. --
    m_axi_bgmodel_ARADDR_assign_proc : process(ap_sig_cseq_ST_st19_fsm_16, ap_sig_cseq_ST_st41_fsm_34, ap_sig_cseq_ST_st63_fsm_52, ap_sig_cseq_ST_st85_fsm_70, tmp_120_fu_896_p1, tmp_126_fu_1032_p1, tmp_132_fu_1168_p1, tmp_138_fu_1304_p1, ap_reg_ioackin_m_axi_bgmodel_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st85_fsm_70)) then 
                m_axi_bgmodel_ARADDR <= tmp_138_fu_1304_p1(32 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52)) then 
                m_axi_bgmodel_ARADDR <= tmp_132_fu_1168_p1(32 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34)) then 
                m_axi_bgmodel_ARADDR <= tmp_126_fu_1032_p1(32 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16)) then 
                m_axi_bgmodel_ARADDR <= tmp_120_fu_896_p1(32 - 1 downto 0);
            else 
                m_axi_bgmodel_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_bgmodel_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_bgmodel_ARBURST <= ap_const_lv2_0;
    m_axi_bgmodel_ARCACHE <= ap_const_lv4_0;
    m_axi_bgmodel_ARID <= ap_const_lv1_0;
    m_axi_bgmodel_ARLEN <= ap_const_lv32_1400;
    m_axi_bgmodel_ARLOCK <= ap_const_lv2_0;
    m_axi_bgmodel_ARPROT <= ap_const_lv3_0;
    m_axi_bgmodel_ARQOS <= ap_const_lv4_0;
    m_axi_bgmodel_ARREGION <= ap_const_lv4_0;
    m_axi_bgmodel_ARSIZE <= ap_const_lv3_0;
    m_axi_bgmodel_ARUSER <= ap_const_lv1_0;

    -- m_axi_bgmodel_ARVALID assign process. --
    m_axi_bgmodel_ARVALID_assign_proc : process(ap_sig_cseq_ST_st19_fsm_16, ap_sig_cseq_ST_st41_fsm_34, ap_sig_cseq_ST_st63_fsm_52, ap_sig_cseq_ST_st85_fsm_70, ap_reg_ioackin_m_axi_bgmodel_ARREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_34) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st63_fsm_52) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st85_fsm_70) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_ARREADY)))) then 
            m_axi_bgmodel_ARVALID <= ap_const_logic_1;
        else 
            m_axi_bgmodel_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_bgmodel_AWADDR assign process. --
    m_axi_bgmodel_AWADDR_assign_proc : process(bgmodel_addr_17_reg_1630, bgmodel_addr_18_reg_1676, bgmodel_addr_19_reg_1722, bgmodel_addr_20_reg_1768, tmp_114_fu_762_p1, ap_reg_ioackin_m_axi_bgmodel_AWREADY, ap_sig_bdd_1622, ap_sig_bdd_1662, ap_sig_bdd_1677, ap_sig_bdd_1693, ap_sig_bdd_1709)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) then
            if (ap_sig_bdd_1709) then 
                m_axi_bgmodel_AWADDR <= bgmodel_addr_20_reg_1768;
            elsif (ap_sig_bdd_1693) then 
                m_axi_bgmodel_AWADDR <= bgmodel_addr_19_reg_1722;
            elsif (ap_sig_bdd_1677) then 
                m_axi_bgmodel_AWADDR <= bgmodel_addr_18_reg_1676;
            elsif (ap_sig_bdd_1662) then 
                m_axi_bgmodel_AWADDR <= bgmodel_addr_17_reg_1630;
            elsif (ap_sig_bdd_1622) then 
                m_axi_bgmodel_AWADDR <= tmp_114_fu_762_p1(32 - 1 downto 0);
            else 
                m_axi_bgmodel_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_bgmodel_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_bgmodel_AWBURST <= ap_const_lv2_0;
    m_axi_bgmodel_AWCACHE <= ap_const_lv4_0;
    m_axi_bgmodel_AWID <= ap_const_lv1_0;

    -- m_axi_bgmodel_AWLEN assign process. --
    m_axi_bgmodel_AWLEN_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, init, m_axi_frame_out_BVALID, ap_sig_bdd_502, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_ap_done, grp_bgsub_process_fu_697_ap_done, grp_bgsub_process_fu_706_ap_done, grp_bgsub_process_fu_715_ap_done, ap_sig_cseq_ST_st112_fsm_91, ap_sig_cseq_ST_st128_fsm_103, ap_sig_cseq_ST_st144_fsm_115, ap_reg_ioackin_m_axi_bgmodel_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY) and not(((ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)))) then 
            m_axi_bgmodel_AWLEN <= ap_const_lv32_1400;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not(ap_sig_bdd_502) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY))) then 
            m_axi_bgmodel_AWLEN <= ap_const_lv32_96000;
        else 
            m_axi_bgmodel_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_bgmodel_AWLOCK <= ap_const_lv2_0;
    m_axi_bgmodel_AWPROT <= ap_const_lv3_0;
    m_axi_bgmodel_AWQOS <= ap_const_lv4_0;
    m_axi_bgmodel_AWREGION <= ap_const_lv4_0;
    m_axi_bgmodel_AWSIZE <= ap_const_lv3_0;
    m_axi_bgmodel_AWUSER <= ap_const_lv1_0;

    -- m_axi_bgmodel_AWVALID assign process. --
    m_axi_bgmodel_AWVALID_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, init, m_axi_frame_out_BVALID, ap_sig_bdd_502, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_ap_done, grp_bgsub_process_fu_697_ap_done, grp_bgsub_process_fu_706_ap_done, grp_bgsub_process_fu_715_ap_done, ap_sig_cseq_ST_st112_fsm_91, ap_sig_cseq_ST_st128_fsm_103, ap_sig_cseq_ST_st144_fsm_115, ap_reg_ioackin_m_axi_bgmodel_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_const_lv1_0 = init)) and not(ap_sig_bdd_502) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY) and not(((ap_const_logic_0 = grp_bgsub_process_fu_688_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_697_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_706_ap_done) or (ap_const_logic_0 = grp_bgsub_process_fu_715_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115) and not((m_axi_frame_out_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_AWREADY)))) then 
            m_axi_bgmodel_AWVALID <= ap_const_logic_1;
        else 
            m_axi_bgmodel_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_bgmodel_BREADY assign process. --
    m_axi_bgmodel_BREADY_assign_proc : process(init, m_axi_bgmodel_BVALID, ap_sig_cseq_ST_st104_fsm_85, ap_sig_ioackin_m_axi_frame_out_AWREADY, ap_sig_cseq_ST_st120_fsm_97, ap_sig_cseq_ST_st136_fsm_109, ap_sig_cseq_ST_st152_fsm_121, ap_sig_cseq_ST_st6_fsm_5, ap_sig_bdd_1489)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st104_fsm_85) and not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY)))) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st120_fsm_97)) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st136_fsm_109)) or (not(((m_axi_bgmodel_BVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_AWREADY))) and (ap_const_logic_1 = ap_sig_cseq_ST_st152_fsm_121)) or (not((ap_const_lv1_0 = init)) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(ap_sig_bdd_1489)))) then 
            m_axi_bgmodel_BREADY <= ap_const_logic_1;
        else 
            m_axi_bgmodel_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_bgmodel_RREADY assign process. --
    m_axi_bgmodel_RREADY_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_23, exitcond4_reg_1636, ap_sig_bdd_301, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp3_stg0_fsm_41, exitcond6_reg_1682, ap_sig_bdd_347, ap_reg_ppiten_pp3_it1, ap_sig_cseq_ST_pp5_stg0_fsm_59, exitcond8_reg_1728, ap_sig_bdd_393, ap_reg_ppiten_pp5_it1, ap_sig_cseq_ST_pp7_stg0_fsm_77, exitcond2_reg_1774, ap_sig_bdd_439, ap_reg_ppiten_pp7_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_23) and (ap_const_lv1_0 = exitcond4_reg_1636) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_41) and (ap_const_lv1_0 = exitcond6_reg_1682) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp5_stg0_fsm_59) and (ap_const_lv1_0 = exitcond8_reg_1728) and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp7_stg0_fsm_77) and (ap_const_lv1_0 = exitcond2_reg_1774) and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1)))))) then 
            m_axi_bgmodel_RREADY <= ap_const_logic_1;
        else 
            m_axi_bgmodel_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_bgmodel_WDATA assign process. --
    m_axi_bgmodel_WDATA_assign_proc : process(part_bgmodel_load_reg_1797, part2_bgmodel_load_reg_1840, part3_bgmodel_load_reg_1883, part4_bgmodel_load_reg_1926, ap_reg_ioackin_m_axi_bgmodel_WREADY, ap_sig_bdd_1633, ap_sig_bdd_1668, ap_sig_bdd_1684, ap_sig_bdd_1700, ap_sig_bdd_1716)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) then
            if (ap_sig_bdd_1716) then 
                m_axi_bgmodel_WDATA <= part4_bgmodel_load_reg_1926;
            elsif (ap_sig_bdd_1700) then 
                m_axi_bgmodel_WDATA <= part3_bgmodel_load_reg_1883;
            elsif (ap_sig_bdd_1684) then 
                m_axi_bgmodel_WDATA <= part2_bgmodel_load_reg_1840;
            elsif (ap_sig_bdd_1668) then 
                m_axi_bgmodel_WDATA <= part_bgmodel_load_reg_1797;
            elsif (ap_sig_bdd_1633) then 
                m_axi_bgmodel_WDATA <= ap_const_lv32_0;
            else 
                m_axi_bgmodel_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_bgmodel_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_bgmodel_WID <= ap_const_lv1_0;
    m_axi_bgmodel_WLAST <= ap_const_logic_0;
    m_axi_bgmodel_WSTRB <= ap_const_lv4_F;
    m_axi_bgmodel_WUSER <= ap_const_lv1_0;

    -- m_axi_bgmodel_WVALID assign process. --
    m_axi_bgmodel_WVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_773_p2, ap_reg_ppstg_exitcond3_reg_1783_pp8_it1, ap_reg_ppiten_pp8_it2, ap_reg_ppstg_exitcond11_reg_1826_pp10_it1, ap_reg_ppiten_pp10_it2, ap_reg_ppstg_exitcond13_reg_1869_pp12_it1, ap_reg_ppiten_pp12_it2, ap_reg_ppstg_exitcond15_reg_1912_pp14_it1, ap_reg_ppiten_pp14_it2, ap_reg_ioackin_m_axi_bgmodel_WREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond_fu_773_p2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_bgmodel_WREADY)))) then 
            m_axi_bgmodel_WVALID <= ap_const_logic_1;
        else 
            m_axi_bgmodel_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_ARADDR assign process. --
    m_axi_frame_out_ARADDR_assign_proc : process(frame_out_addr_reg_1610, frame_out_addr_2_reg_1656, frame_out_addr_3_reg_1702, frame_out_addr_4_reg_1748, ap_reg_ioackin_m_axi_frame_out_ARREADY, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st30_fsm_25, ap_sig_cseq_ST_st52_fsm_43, ap_sig_cseq_ST_st74_fsm_61)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)) then 
                m_axi_frame_out_ARADDR <= frame_out_addr_4_reg_1748;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_43)) then 
                m_axi_frame_out_ARADDR <= frame_out_addr_3_reg_1702;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_25)) then 
                m_axi_frame_out_ARADDR <= frame_out_addr_2_reg_1656;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                m_axi_frame_out_ARADDR <= frame_out_addr_reg_1610;
            else 
                m_axi_frame_out_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_frame_out_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_frame_out_ARBURST <= ap_const_lv2_0;
    m_axi_frame_out_ARCACHE <= ap_const_lv4_0;
    m_axi_frame_out_ARID <= ap_const_lv1_0;
    m_axi_frame_out_ARLEN <= ap_const_lv32_280;
    m_axi_frame_out_ARLOCK <= ap_const_lv2_0;
    m_axi_frame_out_ARPROT <= ap_const_lv3_0;
    m_axi_frame_out_ARQOS <= ap_const_lv4_0;
    m_axi_frame_out_ARREGION <= ap_const_lv4_0;
    m_axi_frame_out_ARSIZE <= ap_const_lv3_0;
    m_axi_frame_out_ARUSER <= ap_const_lv1_0;

    -- m_axi_frame_out_ARVALID assign process. --
    m_axi_frame_out_ARVALID_assign_proc : process(ap_reg_ioackin_m_axi_frame_out_ARREADY, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st30_fsm_25, ap_sig_cseq_ST_st52_fsm_43, ap_sig_cseq_ST_st74_fsm_61)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY)) or ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_25)) or ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_43)) or ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_ARREADY) and (ap_const_logic_1 = ap_sig_cseq_ST_st74_fsm_61)))) then 
            m_axi_frame_out_ARVALID <= ap_const_logic_1;
        else 
            m_axi_frame_out_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_AWADDR assign process. --
    m_axi_frame_out_AWADDR_assign_proc : process(frame_out_addr_5_reg_1802, frame_out_addr_6_reg_1845, frame_out_addr_7_reg_1888, frame_out_addr_8_reg_1931, ap_sig_cseq_ST_st104_fsm_85, ap_sig_cseq_ST_st120_fsm_97, ap_sig_cseq_ST_st136_fsm_109, ap_sig_cseq_ST_st152_fsm_121, ap_sig_bdd_2768)
    begin
        if (ap_sig_bdd_2768) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st152_fsm_121)) then 
                m_axi_frame_out_AWADDR <= frame_out_addr_8_reg_1931;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st136_fsm_109)) then 
                m_axi_frame_out_AWADDR <= frame_out_addr_7_reg_1888;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st120_fsm_97)) then 
                m_axi_frame_out_AWADDR <= frame_out_addr_6_reg_1845;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st104_fsm_85)) then 
                m_axi_frame_out_AWADDR <= frame_out_addr_5_reg_1802;
            else 
                m_axi_frame_out_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_frame_out_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_frame_out_AWBURST <= ap_const_lv2_0;
    m_axi_frame_out_AWCACHE <= ap_const_lv4_0;
    m_axi_frame_out_AWID <= ap_const_lv1_0;
    m_axi_frame_out_AWLEN <= ap_const_lv32_280;
    m_axi_frame_out_AWLOCK <= ap_const_lv2_0;
    m_axi_frame_out_AWPROT <= ap_const_lv3_0;
    m_axi_frame_out_AWQOS <= ap_const_lv4_0;
    m_axi_frame_out_AWREGION <= ap_const_lv4_0;
    m_axi_frame_out_AWSIZE <= ap_const_lv3_0;
    m_axi_frame_out_AWUSER <= ap_const_lv1_0;

    -- m_axi_frame_out_AWVALID assign process. --
    m_axi_frame_out_AWVALID_assign_proc : process(m_axi_bgmodel_BVALID, ap_sig_cseq_ST_st104_fsm_85, ap_sig_cseq_ST_st120_fsm_97, ap_sig_cseq_ST_st136_fsm_109, ap_sig_cseq_ST_st152_fsm_121, ap_reg_ioackin_m_axi_frame_out_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st104_fsm_85) and not((m_axi_bgmodel_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st120_fsm_97) and not((m_axi_bgmodel_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st136_fsm_109) and not((m_axi_bgmodel_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st152_fsm_121) and not((m_axi_bgmodel_BVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_AWREADY)))) then 
            m_axi_frame_out_AWVALID <= ap_const_logic_1;
        else 
            m_axi_frame_out_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_BREADY assign process. --
    m_axi_frame_out_BREADY_assign_proc : process(m_axi_frame_out_BVALID, ap_sig_ioackin_m_axi_bgmodel_AWREADY, ap_sig_cseq_ST_st112_fsm_91, ap_sig_cseq_ST_st128_fsm_103, ap_sig_cseq_ST_st144_fsm_115, ap_sig_cseq_ST_st160_fsm_127)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st112_fsm_91) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0)))) or (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st128_fsm_103)) or (not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_AWREADY) or (m_axi_frame_out_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st144_fsm_115)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st160_fsm_127) and not((m_axi_frame_out_BVALID = ap_const_logic_0))))) then 
            m_axi_frame_out_BREADY <= ap_const_logic_1;
        else 
            m_axi_frame_out_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_RREADY assign process. --
    m_axi_frame_out_RREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_14, exitcond1_reg_1616, ap_sig_bdd_277, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp2_stg0_fsm_32, exitcond5_reg_1662, ap_sig_bdd_324, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp4_stg0_fsm_50, exitcond7_reg_1708, ap_sig_bdd_370, ap_reg_ppiten_pp4_it1, ap_sig_cseq_ST_pp6_stg0_fsm_68, exitcond9_reg_1754, ap_sig_bdd_416, ap_reg_ppiten_pp6_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_14) and (exitcond1_reg_1616 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_32) and (ap_const_lv1_0 = exitcond5_reg_1662) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_50) and (ap_const_lv1_0 = exitcond7_reg_1708) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp6_stg0_fsm_68) and (ap_const_lv1_0 = exitcond9_reg_1754) and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1)))))) then 
            m_axi_frame_out_RREADY <= ap_const_logic_1;
        else 
            m_axi_frame_out_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- m_axi_frame_out_WDATA assign process. --
    m_axi_frame_out_WDATA_assign_proc : process(extLd_reg_1821, extLd1_reg_1864, extLd2_reg_1907, extLd3_reg_1950, ap_reg_ioackin_m_axi_frame_out_WREADY, ap_sig_bdd_1792, ap_sig_bdd_1805, ap_sig_bdd_1820, ap_sig_bdd_1835)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)) then
            if (ap_sig_bdd_1835) then 
                m_axi_frame_out_WDATA <= extLd3_reg_1950;
            elsif (ap_sig_bdd_1820) then 
                m_axi_frame_out_WDATA <= extLd2_reg_1907;
            elsif (ap_sig_bdd_1805) then 
                m_axi_frame_out_WDATA <= extLd1_reg_1864;
            elsif (ap_sig_bdd_1792) then 
                m_axi_frame_out_WDATA <= extLd_reg_1821;
            else 
                m_axi_frame_out_WDATA <= "XXXXXXXX";
            end if;
        else 
            m_axi_frame_out_WDATA <= "XXXXXXXX";
        end if; 
    end process;

    m_axi_frame_out_WID <= ap_const_lv1_0;
    m_axi_frame_out_WLAST <= ap_const_logic_0;
    m_axi_frame_out_WSTRB <= ap_const_lv1_1;
    m_axi_frame_out_WUSER <= ap_const_lv1_0;

    -- m_axi_frame_out_WVALID assign process. --
    m_axi_frame_out_WVALID_assign_proc : process(ap_reg_ppstg_exitcond10_reg_1807_pp9_it1, ap_reg_ppiten_pp9_it2, ap_reg_ppstg_exitcond12_reg_1850_pp11_it1, ap_reg_ppiten_pp11_it2, ap_reg_ppstg_exitcond14_reg_1893_pp13_it1, ap_reg_ppiten_pp13_it2, ap_reg_ppstg_exitcond16_reg_1936_pp15_it1, ap_reg_ppiten_pp15_it2, ap_reg_ioackin_m_axi_frame_out_WREADY)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_out_WREADY)))) then 
            m_axi_frame_out_WVALID <= ap_const_logic_1;
        else 
            m_axi_frame_out_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_1_fu_779_p2 <= std_logic_vector(unsigned(p_reg_468) + unsigned(ap_const_lv20_1));
    p_shl10_cast_fu_1085_p1 <= std_logic_vector(resize(unsigned(p_shl1_fu_1077_p3),17));
    p_shl10_fu_1131_p3 <= (tmp_66_reg_1691 & ap_const_lv12_0);
    p_shl11_cast_fu_1138_p1 <= std_logic_vector(resize(unsigned(p_shl10_fu_1131_p3),20));
    p_shl11_fu_1142_p3 <= (tmp_66_reg_1691 & ap_const_lv10_0);
    p_shl12_cast_fu_1149_p1 <= std_logic_vector(resize(unsigned(p_shl11_fu_1142_p3),20));
    p_shl12_fu_1201_p3 <= (tmp_73_fu_1195_p2 & ap_const_lv9_0);
    p_shl13_cast_fu_1209_p1 <= std_logic_vector(resize(unsigned(p_shl12_fu_1201_p3),17));
    p_shl13_fu_1213_p3 <= (tmp_73_fu_1195_p2 & ap_const_lv7_0);
    p_shl14_cast_fu_1221_p1 <= std_logic_vector(resize(unsigned(p_shl13_fu_1213_p3),17));
    p_shl14_fu_1267_p3 <= (tmp_73_reg_1737 & ap_const_lv12_0);
    p_shl15_cast_fu_1274_p1 <= std_logic_vector(resize(unsigned(p_shl14_fu_1267_p3),20));
    p_shl15_fu_1278_p3 <= (tmp_73_reg_1737 & ap_const_lv10_0);
    p_shl16_cast_fu_1285_p1 <= std_logic_vector(resize(unsigned(p_shl15_fu_1278_p3),20));
    p_shl1_fu_1077_p3 <= (tmp_66_fu_1059_p2 & ap_const_lv7_0);
    p_shl2_cast_fu_811_p1 <= std_logic_vector(resize(unsigned(p_shl2_fu_803_p3),17));
    p_shl2_fu_803_p3 <= (part_reg_492 & ap_const_lv7_0);
    p_shl3_cast_fu_865_p1 <= std_logic_vector(resize(unsigned(p_shl3_fu_857_p3),20));
    p_shl3_fu_857_p3 <= (part_reg_492 & ap_const_lv12_0);
    p_shl4_cast_fu_877_p1 <= std_logic_vector(resize(unsigned(p_shl4_fu_869_p3),20));
    p_shl4_fu_869_p3 <= (part_reg_492 & ap_const_lv10_0);
    p_shl5_cast_fu_937_p1 <= std_logic_vector(resize(unsigned(p_shl5_fu_929_p3),17));
    p_shl5_fu_929_p3 <= (tmp_59_fu_923_p2 & ap_const_lv9_0);
    p_shl6_cast_fu_949_p1 <= std_logic_vector(resize(unsigned(p_shl6_fu_941_p3),17));
    p_shl6_fu_941_p3 <= (tmp_59_fu_923_p2 & ap_const_lv7_0);
    p_shl7_cast_fu_1002_p1 <= std_logic_vector(resize(unsigned(p_shl7_fu_995_p3),20));
    p_shl7_fu_995_p3 <= (tmp_59_reg_1645 & ap_const_lv12_0);
    p_shl8_cast_fu_1013_p1 <= std_logic_vector(resize(unsigned(p_shl8_fu_1006_p3),20));
    p_shl8_fu_1006_p3 <= (tmp_59_reg_1645 & ap_const_lv10_0);
    p_shl9_cast_fu_1073_p1 <= std_logic_vector(resize(unsigned(p_shl9_fu_1065_p3),17));
    p_shl9_fu_1065_p3 <= (tmp_66_fu_1059_p2 & ap_const_lv9_0);
    p_shl_cast_fu_799_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_791_p3),17));
    p_shl_fu_791_p3 <= (part_reg_492 & ap_const_lv9_0);

    -- part2_bgmodel_address0 assign process. --
    part2_bgmodel_address0_assign_proc : process(ap_reg_ppiten_pp3_it2, ap_sig_cseq_ST_pp10_stg0_fsm_92, ap_reg_ppiten_pp10_it0, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_bgmodel_address0, tmp_69_fu_1054_p1, tmp_87_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp3_it2)) then 
            part2_bgmodel_address0 <= tmp_69_fu_1054_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_92) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it0))) then 
            part2_bgmodel_address0 <= tmp_87_fu_1399_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_bgmodel_address0 <= grp_bgsub_process_fu_697_bgmodel_address0;
        else 
            part2_bgmodel_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    part2_bgmodel_address1 <= grp_bgsub_process_fu_697_bgmodel_address1;

    -- part2_bgmodel_ce0 assign process. --
    part2_bgmodel_ce0_assign_proc : process(ap_sig_bdd_347, ap_reg_ppiten_pp3_it1, ap_reg_ppiten_pp3_it2, ap_sig_ioackin_m_axi_bgmodel_WREADY, ap_sig_cseq_ST_pp10_stg0_fsm_92, ap_reg_ppiten_pp10_it0, ap_reg_ppstg_exitcond11_reg_1826_pp10_it1, ap_reg_ppiten_pp10_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_bgmodel_ce0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp10_stg0_fsm_92) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond11_reg_1826_pp10_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp10_it2)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))))) then 
            part2_bgmodel_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_bgmodel_ce0 <= grp_bgsub_process_fu_697_bgmodel_ce0;
        else 
            part2_bgmodel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_bgmodel_ce1 assign process. --
    part2_bgmodel_ce1_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_bgmodel_ce1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_bgmodel_ce1 <= grp_bgsub_process_fu_697_bgmodel_ce1;
        else 
            part2_bgmodel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_bgmodel_d0 assign process. --
    part2_bgmodel_d0_assign_proc : process(ap_reg_ppiten_pp3_it2, reg_732, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_bgmodel_d0)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp3_it2)) then 
            part2_bgmodel_d0 <= reg_732;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_bgmodel_d0 <= grp_bgsub_process_fu_697_bgmodel_d0;
        else 
            part2_bgmodel_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    part2_bgmodel_d1 <= grp_bgsub_process_fu_697_bgmodel_d1;

    -- part2_bgmodel_we0 assign process. --
    part2_bgmodel_we0_assign_proc : process(ap_sig_bdd_347, ap_reg_ppiten_pp3_it1, ap_reg_ppiten_pp3_it2, ap_reg_ppstg_exitcond6_reg_1682_pp3_it1, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_bgmodel_we0)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not((ap_sig_bdd_347 and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_1682_pp3_it1)))) then 
            part2_bgmodel_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_bgmodel_we0 <= grp_bgsub_process_fu_697_bgmodel_we0;
        else 
            part2_bgmodel_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_bgmodel_we1 assign process. --
    part2_bgmodel_we1_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_bgmodel_we1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_bgmodel_we1 <= grp_bgsub_process_fu_697_bgmodel_we1;
        else 
            part2_bgmodel_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_frame_in_address0 assign process. --
    part2_frame_in_address0_assign_proc : process(ap_reg_ppiten_pp2_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_frame_in_address0, tmp_65_fu_990_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) then 
            part2_frame_in_address0 <= tmp_65_fu_990_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_frame_in_address0 <= grp_bgsub_process_fu_697_frame_in_address0;
        else 
            part2_frame_in_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part2_frame_in_ce0 assign process. --
    part2_frame_in_ce0_assign_proc : process(ap_sig_bdd_324, ap_reg_ppiten_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_frame_in_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then 
            part2_frame_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_frame_in_ce0 <= grp_bgsub_process_fu_697_frame_in_ce0;
        else 
            part2_frame_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part2_frame_in_d0 <= reg_724;

    -- part2_frame_in_we0 assign process. --
    part2_frame_in_we0_assign_proc : process(ap_sig_bdd_324, ap_reg_ppiten_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppstg_exitcond5_reg_1662_pp2_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((ap_sig_bdd_324 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_1662_pp2_it1)))) then 
            part2_frame_in_we0 <= ap_const_logic_1;
        else 
            part2_frame_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part2_frame_out_address0 assign process. --
    part2_frame_out_address0_assign_proc : process(ap_sig_cseq_ST_pp11_stg0_fsm_98, ap_reg_ppiten_pp11_it0, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_frame_out_address0, tmp_89_fu_1430_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_98) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it0))) then 
            part2_frame_out_address0 <= tmp_89_fu_1430_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_frame_out_address0 <= grp_bgsub_process_fu_697_frame_out_address0;
        else 
            part2_frame_out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part2_frame_out_ce0 assign process. --
    part2_frame_out_ce0_assign_proc : process(ap_sig_ioackin_m_axi_frame_out_WREADY, ap_sig_cseq_ST_pp11_stg0_fsm_98, ap_reg_ppiten_pp11_it0, ap_reg_ppstg_exitcond12_reg_1850_pp11_it1, ap_reg_ppiten_pp11_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_frame_out_ce0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp11_stg0_fsm_98) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond12_reg_1850_pp11_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp11_it2))))) then 
            part2_frame_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_frame_out_ce0 <= grp_bgsub_process_fu_697_frame_out_ce0;
        else 
            part2_frame_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part2_frame_out_d0 <= grp_bgsub_process_fu_697_frame_out_d0;

    -- part2_frame_out_we0 assign process. --
    part2_frame_out_we0_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_697_frame_out_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part2_frame_out_we0 <= grp_bgsub_process_fu_697_frame_out_we0;
        else 
            part2_frame_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_bgmodel_address0 assign process. --
    part3_bgmodel_address0_assign_proc : process(ap_reg_ppiten_pp5_it2, ap_sig_cseq_ST_pp12_stg0_fsm_104, ap_reg_ppiten_pp12_it0, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_bgmodel_address0, tmp_76_fu_1190_p1, tmp_91_fu_1455_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp5_it2)) then 
            part3_bgmodel_address0 <= tmp_76_fu_1190_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp12_stg0_fsm_104) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it0))) then 
            part3_bgmodel_address0 <= tmp_91_fu_1455_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_bgmodel_address0 <= grp_bgsub_process_fu_706_bgmodel_address0;
        else 
            part3_bgmodel_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    part3_bgmodel_address1 <= grp_bgsub_process_fu_706_bgmodel_address1;

    -- part3_bgmodel_ce0 assign process. --
    part3_bgmodel_ce0_assign_proc : process(ap_sig_bdd_393, ap_reg_ppiten_pp5_it1, ap_reg_ppiten_pp5_it2, ap_sig_ioackin_m_axi_bgmodel_WREADY, ap_sig_cseq_ST_pp12_stg0_fsm_104, ap_reg_ppiten_pp12_it0, ap_reg_ppstg_exitcond13_reg_1869_pp12_it1, ap_reg_ppiten_pp12_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_bgmodel_ce0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp12_stg0_fsm_104) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond13_reg_1869_pp12_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp12_it2)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp5_it2) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1)))))) then 
            part3_bgmodel_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_bgmodel_ce0 <= grp_bgsub_process_fu_706_bgmodel_ce0;
        else 
            part3_bgmodel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_bgmodel_ce1 assign process. --
    part3_bgmodel_ce1_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_bgmodel_ce1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_bgmodel_ce1 <= grp_bgsub_process_fu_706_bgmodel_ce1;
        else 
            part3_bgmodel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_bgmodel_d0 assign process. --
    part3_bgmodel_d0_assign_proc : process(ap_reg_ppiten_pp5_it2, reg_732, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_bgmodel_d0)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp5_it2)) then 
            part3_bgmodel_d0 <= reg_732;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_bgmodel_d0 <= grp_bgsub_process_fu_706_bgmodel_d0;
        else 
            part3_bgmodel_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    part3_bgmodel_d1 <= grp_bgsub_process_fu_706_bgmodel_d1;

    -- part3_bgmodel_we0 assign process. --
    part3_bgmodel_we0_assign_proc : process(ap_sig_bdd_393, ap_reg_ppiten_pp5_it1, ap_reg_ppiten_pp5_it2, ap_reg_ppstg_exitcond8_reg_1728_pp5_it1, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_bgmodel_we0)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp5_it2) and not((ap_sig_bdd_393 and (ap_const_logic_1 = ap_reg_ppiten_pp5_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_1728_pp5_it1)))) then 
            part3_bgmodel_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_bgmodel_we0 <= grp_bgsub_process_fu_706_bgmodel_we0;
        else 
            part3_bgmodel_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_bgmodel_we1 assign process. --
    part3_bgmodel_we1_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_bgmodel_we1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_bgmodel_we1 <= grp_bgsub_process_fu_706_bgmodel_we1;
        else 
            part3_bgmodel_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_frame_in_address0 assign process. --
    part3_frame_in_address0_assign_proc : process(ap_reg_ppiten_pp4_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_frame_in_address0, tmp_72_fu_1126_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp4_it2)) then 
            part3_frame_in_address0 <= tmp_72_fu_1126_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_frame_in_address0 <= grp_bgsub_process_fu_706_frame_in_address0;
        else 
            part3_frame_in_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part3_frame_in_ce0 assign process. --
    part3_frame_in_ce0_assign_proc : process(ap_sig_bdd_370, ap_reg_ppiten_pp4_it1, ap_reg_ppiten_pp4_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_frame_in_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp4_it2) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))))) then 
            part3_frame_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_frame_in_ce0 <= grp_bgsub_process_fu_706_frame_in_ce0;
        else 
            part3_frame_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part3_frame_in_d0 <= reg_724;

    -- part3_frame_in_we0 assign process. --
    part3_frame_in_we0_assign_proc : process(ap_sig_bdd_370, ap_reg_ppiten_pp4_it1, ap_reg_ppiten_pp4_it2, ap_reg_ppstg_exitcond7_reg_1708_pp4_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp4_it2) and not((ap_sig_bdd_370 and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond7_reg_1708_pp4_it1)))) then 
            part3_frame_in_we0 <= ap_const_logic_1;
        else 
            part3_frame_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part3_frame_out_address0 assign process. --
    part3_frame_out_address0_assign_proc : process(ap_sig_cseq_ST_pp13_stg0_fsm_110, ap_reg_ppiten_pp13_it0, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_frame_out_address0, tmp_93_fu_1486_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp13_stg0_fsm_110) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it0))) then 
            part3_frame_out_address0 <= tmp_93_fu_1486_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_frame_out_address0 <= grp_bgsub_process_fu_706_frame_out_address0;
        else 
            part3_frame_out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part3_frame_out_ce0 assign process. --
    part3_frame_out_ce0_assign_proc : process(ap_sig_ioackin_m_axi_frame_out_WREADY, ap_sig_cseq_ST_pp13_stg0_fsm_110, ap_reg_ppiten_pp13_it0, ap_reg_ppstg_exitcond14_reg_1893_pp13_it1, ap_reg_ppiten_pp13_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_frame_out_ce0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp13_stg0_fsm_110) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond14_reg_1893_pp13_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp13_it2))))) then 
            part3_frame_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_frame_out_ce0 <= grp_bgsub_process_fu_706_frame_out_ce0;
        else 
            part3_frame_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part3_frame_out_d0 <= grp_bgsub_process_fu_706_frame_out_d0;

    -- part3_frame_out_we0 assign process. --
    part3_frame_out_we0_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_706_frame_out_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part3_frame_out_we0 <= grp_bgsub_process_fu_706_frame_out_we0;
        else 
            part3_frame_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part4_bgmodel_address0 assign process. --
    part4_bgmodel_address0_assign_proc : process(ap_reg_ppiten_pp7_it2, ap_sig_cseq_ST_pp14_stg0_fsm_116, ap_reg_ppiten_pp14_it0, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_bgmodel_address0, tmp_82_fu_1326_p1, tmp_95_fu_1511_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp7_it2)) then 
            part4_bgmodel_address0 <= tmp_82_fu_1326_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp14_stg0_fsm_116) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it0))) then 
            part4_bgmodel_address0 <= tmp_95_fu_1511_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_bgmodel_address0 <= grp_bgsub_process_fu_715_bgmodel_address0;
        else 
            part4_bgmodel_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    part4_bgmodel_address1 <= grp_bgsub_process_fu_715_bgmodel_address1;

    -- part4_bgmodel_ce0 assign process. --
    part4_bgmodel_ce0_assign_proc : process(ap_sig_bdd_439, ap_reg_ppiten_pp7_it1, ap_reg_ppiten_pp7_it2, ap_sig_ioackin_m_axi_bgmodel_WREADY, ap_sig_cseq_ST_pp14_stg0_fsm_116, ap_reg_ppiten_pp14_it0, ap_reg_ppstg_exitcond15_reg_1912_pp14_it1, ap_reg_ppiten_pp14_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_bgmodel_ce0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp14_stg0_fsm_116) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond15_reg_1912_pp14_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp14_it2)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp7_it2) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1)))))) then 
            part4_bgmodel_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_bgmodel_ce0 <= grp_bgsub_process_fu_715_bgmodel_ce0;
        else 
            part4_bgmodel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part4_bgmodel_ce1 assign process. --
    part4_bgmodel_ce1_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_bgmodel_ce1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_bgmodel_ce1 <= grp_bgsub_process_fu_715_bgmodel_ce1;
        else 
            part4_bgmodel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part4_bgmodel_d0 assign process. --
    part4_bgmodel_d0_assign_proc : process(ap_reg_ppiten_pp7_it2, reg_732, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_bgmodel_d0)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp7_it2)) then 
            part4_bgmodel_d0 <= reg_732;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_bgmodel_d0 <= grp_bgsub_process_fu_715_bgmodel_d0;
        else 
            part4_bgmodel_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    part4_bgmodel_d1 <= grp_bgsub_process_fu_715_bgmodel_d1;

    -- part4_bgmodel_we0 assign process. --
    part4_bgmodel_we0_assign_proc : process(ap_sig_bdd_439, ap_reg_ppiten_pp7_it1, ap_reg_ppiten_pp7_it2, ap_reg_ppstg_exitcond2_reg_1774_pp7_it1, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_bgmodel_we0)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp7_it2) and not((ap_sig_bdd_439 and (ap_const_logic_1 = ap_reg_ppiten_pp7_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_1774_pp7_it1)))) then 
            part4_bgmodel_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_bgmodel_we0 <= grp_bgsub_process_fu_715_bgmodel_we0;
        else 
            part4_bgmodel_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part4_bgmodel_we1 assign process. --
    part4_bgmodel_we1_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_bgmodel_we1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_bgmodel_we1 <= grp_bgsub_process_fu_715_bgmodel_we1;
        else 
            part4_bgmodel_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part4_frame_in_address0 assign process. --
    part4_frame_in_address0_assign_proc : process(ap_reg_ppiten_pp6_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_frame_in_address0, tmp_79_fu_1262_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp6_it2)) then 
            part4_frame_in_address0 <= tmp_79_fu_1262_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_frame_in_address0 <= grp_bgsub_process_fu_715_frame_in_address0;
        else 
            part4_frame_in_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part4_frame_in_ce0 assign process. --
    part4_frame_in_ce0_assign_proc : process(ap_sig_bdd_416, ap_reg_ppiten_pp6_it1, ap_reg_ppiten_pp6_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_frame_in_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp6_it2) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))))) then 
            part4_frame_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_frame_in_ce0 <= grp_bgsub_process_fu_715_frame_in_ce0;
        else 
            part4_frame_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part4_frame_in_d0 <= reg_724;

    -- part4_frame_in_we0 assign process. --
    part4_frame_in_we0_assign_proc : process(ap_sig_bdd_416, ap_reg_ppiten_pp6_it1, ap_reg_ppiten_pp6_it2, ap_reg_ppstg_exitcond9_reg_1754_pp6_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp6_it2) and not((ap_sig_bdd_416 and (ap_const_logic_1 = ap_reg_ppiten_pp6_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond9_reg_1754_pp6_it1)))) then 
            part4_frame_in_we0 <= ap_const_logic_1;
        else 
            part4_frame_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part4_frame_out_address0 assign process. --
    part4_frame_out_address0_assign_proc : process(ap_sig_cseq_ST_pp15_stg0_fsm_122, ap_reg_ppiten_pp15_it0, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_frame_out_address0, tmp_97_fu_1542_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp15_stg0_fsm_122) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it0))) then 
            part4_frame_out_address0 <= tmp_97_fu_1542_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_frame_out_address0 <= grp_bgsub_process_fu_715_frame_out_address0;
        else 
            part4_frame_out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part4_frame_out_ce0 assign process. --
    part4_frame_out_ce0_assign_proc : process(ap_sig_ioackin_m_axi_frame_out_WREADY, ap_sig_cseq_ST_pp15_stg0_fsm_122, ap_reg_ppiten_pp15_it0, ap_reg_ppstg_exitcond16_reg_1936_pp15_it1, ap_reg_ppiten_pp15_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_frame_out_ce0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp15_stg0_fsm_122) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond16_reg_1936_pp15_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp15_it2))))) then 
            part4_frame_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_frame_out_ce0 <= grp_bgsub_process_fu_715_frame_out_ce0;
        else 
            part4_frame_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part4_frame_out_d0 <= grp_bgsub_process_fu_715_frame_out_d0;

    -- part4_frame_out_we0 assign process. --
    part4_frame_out_we0_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_715_frame_out_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part4_frame_out_we0 <= grp_bgsub_process_fu_715_frame_out_we0;
        else 
            part4_frame_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    part_1_fu_1555_p2 <= std_logic_vector(unsigned(part_reg_492) + unsigned(ap_const_lv7_4));

    -- part_bgmodel_address0 assign process. --
    part_bgmodel_address0_assign_proc : process(ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp8_stg0_fsm_80, ap_reg_ppiten_pp8_it0, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_bgmodel_address0, tmp_62_fu_918_p1, tmp_83_fu_1343_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2)) then 
            part_bgmodel_address0 <= tmp_62_fu_918_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_80) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it0))) then 
            part_bgmodel_address0 <= tmp_83_fu_1343_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_bgmodel_address0 <= grp_bgsub_process_fu_688_bgmodel_address0;
        else 
            part_bgmodel_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    part_bgmodel_address1 <= grp_bgsub_process_fu_688_bgmodel_address1;

    -- part_bgmodel_ce0 assign process. --
    part_bgmodel_ce0_assign_proc : process(ap_sig_bdd_301, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_ioackin_m_axi_bgmodel_WREADY, ap_sig_cseq_ST_pp8_stg0_fsm_80, ap_reg_ppiten_pp8_it0, ap_reg_ppstg_exitcond3_reg_1783_pp8_it1, ap_reg_ppiten_pp8_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_bgmodel_ce0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp8_stg0_fsm_80) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_m_axi_bgmodel_WREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_1783_pp8_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp8_it2)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
            part_bgmodel_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_bgmodel_ce0 <= grp_bgsub_process_fu_688_bgmodel_ce0;
        else 
            part_bgmodel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_bgmodel_ce1 assign process. --
    part_bgmodel_ce1_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_bgmodel_ce1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_bgmodel_ce1 <= grp_bgsub_process_fu_688_bgmodel_ce1;
        else 
            part_bgmodel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_bgmodel_d0 assign process. --
    part_bgmodel_d0_assign_proc : process(ap_reg_ppiten_pp1_it2, reg_732, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_bgmodel_d0)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2)) then 
            part_bgmodel_d0 <= reg_732;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_bgmodel_d0 <= grp_bgsub_process_fu_688_bgmodel_d0;
        else 
            part_bgmodel_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    part_bgmodel_d1 <= grp_bgsub_process_fu_688_bgmodel_d1;

    -- part_bgmodel_we0 assign process. --
    part_bgmodel_we0_assign_proc : process(ap_sig_bdd_301, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppstg_exitcond4_reg_1636_pp1_it1, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_bgmodel_we0)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_sig_bdd_301 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_reg_1636_pp1_it1)))) then 
            part_bgmodel_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_bgmodel_we0 <= grp_bgsub_process_fu_688_bgmodel_we0;
        else 
            part_bgmodel_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_bgmodel_we1 assign process. --
    part_bgmodel_we1_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_bgmodel_we1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_bgmodel_we1 <= grp_bgsub_process_fu_688_bgmodel_we1;
        else 
            part_bgmodel_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_frame_in_address0 assign process. --
    part_frame_in_address0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_frame_in_address0, tmp_58_fu_852_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            part_frame_in_address0 <= tmp_58_fu_852_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_frame_in_address0 <= grp_bgsub_process_fu_688_frame_in_address0;
        else 
            part_frame_in_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part_frame_in_ce0 assign process. --
    part_frame_in_ce0_assign_proc : process(ap_sig_bdd_277, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_frame_in_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            part_frame_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_frame_in_ce0 <= grp_bgsub_process_fu_688_frame_in_ce0;
        else 
            part_frame_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part_frame_in_d0 <= reg_724;

    -- part_frame_in_we0 assign process. --
    part_frame_in_we0_assign_proc : process(ap_sig_bdd_277, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond1_reg_1616_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_277 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1616_pp0_it1)))) then 
            part_frame_in_we0 <= ap_const_logic_1;
        else 
            part_frame_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- part_frame_out_address0 assign process. --
    part_frame_out_address0_assign_proc : process(ap_sig_cseq_ST_pp9_stg0_fsm_86, ap_reg_ppiten_pp9_it0, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_frame_out_address0, tmp_85_fu_1374_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_86) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it0))) then 
            part_frame_out_address0 <= tmp_85_fu_1374_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_frame_out_address0 <= grp_bgsub_process_fu_688_frame_out_address0;
        else 
            part_frame_out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- part_frame_out_ce0 assign process. --
    part_frame_out_ce0_assign_proc : process(ap_sig_cseq_ST_pp9_stg0_fsm_86, ap_reg_ppiten_pp9_it0, ap_reg_ppstg_exitcond10_reg_1807_pp9_it1, ap_sig_ioackin_m_axi_frame_out_WREADY, ap_reg_ppiten_pp9_it2, ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_frame_out_ce0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp9_stg0_fsm_86) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond10_reg_1807_pp9_it1) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_out_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp9_it2))))) then 
            part_frame_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_frame_out_ce0 <= grp_bgsub_process_fu_688_frame_out_ce0;
        else 
            part_frame_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    part_frame_out_d0 <= grp_bgsub_process_fu_688_frame_out_d0;

    -- part_frame_out_we0 assign process. --
    part_frame_out_we0_assign_proc : process(ap_sig_cseq_ST_st96_fsm_79, grp_bgsub_process_fu_688_frame_out_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st96_fsm_79)) then 
            part_frame_out_we0 <= grp_bgsub_process_fu_688_frame_out_we0;
        else 
            part_frame_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_113_fu_748_p4 <= bgmodel1(31 downto 2);
        tmp_114_cast_fu_740_p1 <= std_logic_vector(resize(signed(frame_in),33));

    tmp_114_fu_762_p1 <= std_logic_vector(resize(unsigned(tmp_113_fu_748_p4),64));
        tmp_115_cast_fu_744_p1 <= std_logic_vector(resize(signed(frame_out2),33));

    tmp_115_fu_821_p1 <= std_logic_vector(resize(unsigned(tmp_55_fu_815_p2),33));
    tmp_116_cast_fu_758_p1 <= std_logic_vector(resize(unsigned(tmp_113_fu_748_p4),31));
    tmp_116_fu_825_p2 <= std_logic_vector(signed(tmp_114_cast_reg_1565) + signed(tmp_115_fu_821_p1));
        tmp_117_fu_830_p1 <= std_logic_vector(resize(signed(tmp_116_fu_825_p2),64));

    tmp_118_fu_887_p1 <= std_logic_vector(resize(unsigned(tmp_56_fu_881_p2),31));
    tmp_119_fu_891_p2 <= std_logic_vector(unsigned(tmp_116_cast_reg_1581) + unsigned(tmp_118_fu_887_p1));
    tmp_120_fu_896_p1 <= std_logic_vector(resize(unsigned(tmp_119_reg_1625),64));
    tmp_121_fu_959_p1 <= std_logic_vector(resize(unsigned(tmp_60_fu_953_p2),33));
    tmp_122_fu_963_p2 <= std_logic_vector(signed(tmp_114_cast_reg_1565) + signed(tmp_121_fu_959_p1));
        tmp_123_fu_968_p1 <= std_logic_vector(resize(signed(tmp_122_fu_963_p2),64));

    tmp_124_fu_1023_p1 <= std_logic_vector(resize(unsigned(tmp_63_fu_1017_p2),31));
    tmp_125_fu_1027_p2 <= std_logic_vector(unsigned(tmp_116_cast_reg_1581) + unsigned(tmp_124_fu_1023_p1));
    tmp_126_fu_1032_p1 <= std_logic_vector(resize(unsigned(tmp_125_reg_1671),64));
    tmp_127_fu_1095_p1 <= std_logic_vector(resize(unsigned(tmp_67_fu_1089_p2),33));
    tmp_128_fu_1099_p2 <= std_logic_vector(signed(tmp_114_cast_reg_1565) + signed(tmp_127_fu_1095_p1));
        tmp_129_fu_1104_p1 <= std_logic_vector(resize(signed(tmp_128_fu_1099_p2),64));

    tmp_130_fu_1159_p1 <= std_logic_vector(resize(unsigned(tmp_70_fu_1153_p2),31));
    tmp_131_fu_1163_p2 <= std_logic_vector(unsigned(tmp_116_cast_reg_1581) + unsigned(tmp_130_fu_1159_p1));
    tmp_132_fu_1168_p1 <= std_logic_vector(resize(unsigned(tmp_131_reg_1717),64));
    tmp_133_fu_1231_p1 <= std_logic_vector(resize(unsigned(tmp_74_fu_1225_p2),33));
    tmp_134_fu_1235_p2 <= std_logic_vector(signed(tmp_114_cast_reg_1565) + signed(tmp_133_fu_1231_p1));
        tmp_135_fu_1240_p1 <= std_logic_vector(resize(signed(tmp_134_fu_1235_p2),64));

    tmp_136_fu_1295_p1 <= std_logic_vector(resize(unsigned(tmp_77_fu_1289_p2),31));
    tmp_137_fu_1299_p2 <= std_logic_vector(unsigned(tmp_116_cast_reg_1581) + unsigned(tmp_136_fu_1295_p1));
    tmp_138_fu_1304_p1 <= std_logic_vector(resize(unsigned(tmp_137_reg_1763),64));
    tmp_139_fu_1348_p2 <= std_logic_vector(unsigned(tmp_115_reg_1605) + unsigned(tmp_115_cast_reg_1573));
        tmp_140_fu_1352_p1 <= std_logic_vector(resize(signed(tmp_139_fu_1348_p2),64));

    tmp_141_fu_1404_p2 <= std_logic_vector(unsigned(tmp_121_reg_1651) + unsigned(tmp_115_cast_reg_1573));
        tmp_142_fu_1408_p1 <= std_logic_vector(resize(signed(tmp_141_fu_1404_p2),64));

    tmp_143_fu_1460_p2 <= std_logic_vector(unsigned(tmp_127_reg_1697) + unsigned(tmp_115_cast_reg_1573));
        tmp_144_fu_1464_p1 <= std_logic_vector(resize(signed(tmp_143_fu_1460_p2),64));

    tmp_145_fu_1516_p2 <= std_logic_vector(unsigned(tmp_133_reg_1743) + unsigned(tmp_115_cast_reg_1573));
        tmp_146_fu_1520_p1 <= std_logic_vector(resize(signed(tmp_145_fu_1516_p2),64));

    tmp_54_fu_785_p2 <= "1" when (unsigned(part_reg_492) < unsigned(ap_const_lv7_78)) else "0";
    tmp_55_fu_815_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_799_p1) + unsigned(p_shl2_cast_fu_811_p1));
    tmp_56_fu_881_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_865_p1) + unsigned(p_shl4_cast_fu_877_p1));
    tmp_58_fu_852_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar_reg_504_pp0_it1),64));
    tmp_59_fu_923_p2 <= (part_reg_492 or ap_const_lv7_1);
    tmp_60_fu_953_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_937_p1) + unsigned(p_shl6_cast_fu_949_p1));
    tmp_62_fu_918_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar9_reg_516_pp1_it1),64));
    tmp_63_fu_1017_p2 <= std_logic_vector(unsigned(p_shl7_cast_fu_1002_p1) + unsigned(p_shl8_cast_fu_1013_p1));
    tmp_65_fu_990_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar1_reg_528_pp2_it1),64));
    tmp_66_fu_1059_p2 <= (part_reg_492 or ap_const_lv7_2);
    tmp_67_fu_1089_p2 <= std_logic_vector(unsigned(p_shl9_cast_fu_1073_p1) + unsigned(p_shl10_cast_fu_1085_p1));
    tmp_69_fu_1054_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar2_reg_540_pp3_it1),64));
    tmp_70_fu_1153_p2 <= std_logic_vector(unsigned(p_shl11_cast_fu_1138_p1) + unsigned(p_shl12_cast_fu_1149_p1));
    tmp_72_fu_1126_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar3_reg_552_pp4_it1),64));
    tmp_73_fu_1195_p2 <= (part_reg_492 or ap_const_lv7_3);
    tmp_74_fu_1225_p2 <= std_logic_vector(unsigned(p_shl13_cast_fu_1209_p1) + unsigned(p_shl14_cast_fu_1221_p1));
    tmp_76_fu_1190_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar4_reg_564_pp5_it1),64));
    tmp_77_fu_1289_p2 <= std_logic_vector(unsigned(p_shl15_cast_fu_1274_p1) + unsigned(p_shl16_cast_fu_1285_p1));
    tmp_79_fu_1262_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar5_reg_576_pp6_it1),64));
    tmp_82_fu_1326_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar6_reg_588_pp7_it1),64));
    tmp_83_fu_1343_p1 <= std_logic_vector(resize(unsigned(indvar7_reg_600),64));
    tmp_85_fu_1374_p1 <= std_logic_vector(resize(unsigned(indvar8_reg_611),64));
    tmp_87_fu_1399_p1 <= std_logic_vector(resize(unsigned(indvar10_reg_622),64));
    tmp_89_fu_1430_p1 <= std_logic_vector(resize(unsigned(indvar11_reg_633),64));
    tmp_91_fu_1455_p1 <= std_logic_vector(resize(unsigned(indvar12_reg_644),64));
    tmp_93_fu_1486_p1 <= std_logic_vector(resize(unsigned(indvar13_reg_655),64));
    tmp_95_fu_1511_p1 <= std_logic_vector(resize(unsigned(indvar14_reg_666),64));
    tmp_97_fu_1542_p1 <= std_logic_vector(resize(unsigned(indvar15_reg_677),64));
end behav;
